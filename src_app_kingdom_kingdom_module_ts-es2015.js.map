{"version":3,"file":"src_app_kingdom_kingdom_module_ts-es2015.js","mappings":"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","sources":["./src/app/kingdom/archive/archive.component.ts","./src/app/kingdom/archive/archive.component.html","./src/app/kingdom/archive/report.component.ts","./src/app/kingdom/auction/auction.component.ts","./src/app/kingdom/auction/auction.component.html","./src/app/kingdom/auction/bid.component.ts","./src/app/kingdom/census/battle.component.ts","./src/app/kingdom/census/census.component.ts","./src/app/kingdom/census/census.component.html","./src/app/kingdom/census/detail.component.ts","./src/app/kingdom/census/letter.component.ts","./src/app/kingdom/city/build.component.ts","./src/app/kingdom/city/charge.component.ts","./src/app/kingdom/city/city.component.ts","./src/app/kingdom/city/city.component.html","./src/app/kingdom/city/explore.component.ts","./src/app/kingdom/city/tax.component.ts","./src/app/kingdom/clan/clan.component.ts","./src/app/kingdom/clan/clan.component.html","./src/app/kingdom/clan/foundation.component.ts","./src/app/kingdom/clan/manifest.component.ts","./src/app/kingdom/emporium/buy.component.ts","./src/app/kingdom/emporium/emporium.component.ts","./src/app/kingdom/emporium/emporium.component.html","./src/app/kingdom/emporium/perk.component.ts","./src/app/kingdom/emporium/plant.component.ts","./src/app/kingdom/kingdom-routing.module.ts","./src/app/kingdom/kingdom.module.ts","./src/app/kingdom/sorcery/activate.component.ts","./src/app/kingdom/sorcery/conjure.component.ts","./src/app/kingdom/sorcery/research.component.ts","./src/app/kingdom/sorcery/sorcery.component.ts","./src/app/kingdom/sorcery/sorcery.component.html","./src/app/kingdom/tavern/discharge.component.ts","./src/app/kingdom/tavern/tavern.component.ts","./src/app/kingdom/tavern/tavern.component.html","./src/app/kingdom/temple/break.component.ts","./src/app/kingdom/temple/dispel.component.ts","./src/app/kingdom/temple/offer.component.ts","./src/app/kingdom/temple/temple.component.ts","./src/app/kingdom/temple/temple.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ReportComponent } from './report.component';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport * as moment from 'moment';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-archive',\r\n  templateUrl: './archive.component.html',\r\n  styleUrls: ['./archive.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class ArchiveComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  columns = ['select', 'from', 'subject', 'timestamp'];\r\n  filters: any = {\r\n    from: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    subject: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    timestamp: {\r\n      type: 'timestamp',\r\n      value: null,\r\n    },\r\n  };\r\n  selection: SelectionModel<any> = new SelectionModel<any>(true, []);\r\n  data: MatTableDataSource<any> = new MatTableDataSource([]);\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private notificationService: NotificationService,\r\n    private translateService: TranslateService,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private dateAdapter: DateAdapter<any>,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dateAdapter.setLocale(this.translateService.currentLang);\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/letters`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(letters => {\r\n      this.data = new MatTableDataSource(letters);\r\n      this.data.paginator = this.paginator;\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n    });\r\n  }\r\n\r\n  applyFilter(): void {\r\n    this.data.filter = JSON.stringify({\r\n      from: this.filters.from.value,\r\n      subject: this.filters.subject.value,\r\n      timestamp: this.filters.timestamp.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data && data.from && data.from.name && data.subject\r\n        && this.translateService.instant(data.from.name).toLowerCase().includes(filters.from)\r\n        && this.translateService.instant(data.subject).toString().toLowerCase().includes(filters.subject)\r\n        && (!filters.timestamp || moment(data.timestamp.toMillis()).isBetween(moment(filters.timestamp).startOf('day'), moment(filters.timestamp).endOf('day'), 'days', '[]'));\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  isAllSelected(): boolean {\r\n    return this.data.data.length === this.selection.selected.length;\r\n  }\r\n\r\n  masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.data.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  async openReportDialog(report: any) {\r\n    if (report.data) report.data.join = report.data.hero || report.data.item || report.data.spell || report.data.unit;\r\n    const dialogRef = this.dialog.open(ReportComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: report,\r\n    });\r\n  }\r\n\r\n  async deleteReports() {\r\n    if (this.selection.selected.length) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const fids = this.selection.selected.map(letter => letter.fid);\r\n        await this.apiService.removeLetters(this.uid, fids);\r\n        this.selection.clear();\r\n        this.notificationService.success('kingdom.archive.success');\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.archive.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.archive.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-archive table-responsive\" [@fadeInOnEnter]>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/archive.png\" [alt]=\"'kingdom.archive.name' | translate\">\r\n      <mat-card-title>{{ \"kingdom.archive.name\" | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ \"kingdom.archive.description\" | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.archive')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>email</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p>{{ \"kingdom.archive.help\" | translate }}</p>\r\n      <table mat-table matSort [dataSource]=\"data\" matSortActive=\"timestamp\" matSortDirection=\"desc\" tourAnchor=\"tour.archive\" [attr.aria-label]=\"'kingdom.archive.name' | translate\">\r\n\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n\r\n          <ng-container *ngIf=\"column === 'select'; else noSelect\">\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n              <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let letter\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n              <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(letter) : null\" [checked]=\"selection.isSelected(letter)\"></mat-checkbox>\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <ng-template #noSelect>\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n              <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'timestamp'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" [matDatepicker]=\"timestamp\" disabled (dateChange)=\"applyFilter()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"timestamp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #timestamp disabled=\"false\"></mat-datepicker>\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=null; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let letter\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n              <ng-template [ngIf]=\"column === 'from'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"[letter['from'].faction.id, letter['from'].id === uid ? 'legendary' : 'common']\">\r\n                    <div mat-list-avatar [matBadge]=\"!letter.read ? '❕' : undefined\" matBadgePosition=\"above before\">\r\n                      <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"letter['from'].faction.image\" [alt]=\"'table.column.' + column | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ letter['from'].name | translate  }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\">{{ letter['from'].faction.name | translate }}</div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'subject'\">\r\n                {{ letter[column] | translate }}\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'timestamp'\">\r\n                {{ letter[column]?.toMillis() | date:('dateformat.short' | translate) }}\r\n              </ng-template>\r\n\r\n            </mat-cell>\r\n\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let letter; columns: columns\" (click)=\"openReportDialog(letter)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-toolbar>\r\n        <mat-toolbar-row>\r\n          <button mat-mini-fab color=\"primary\" [disabled]=\"!selection.selected.length\" (click)=\"deleteReports()\"><mat-icon>delete</mat-icon></button>\r\n          <span class=\"fill-space\"></span>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n        </mat-toolbar-row>\r\n      </mat-toolbar>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ report.subject | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.from' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"report.from.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"report.from.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ report.from.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ report.from.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <!-- MESSAGE -->\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.message' | translate }}:</div>\r\n      <p>{{ report.message | translate }}</p>\r\n    </div>\r\n    <!-- ESPIONAGE -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.intel\" class=\"espionage\">\r\n      <!-- SUPPLIES -->\r\n      <div matSubheader>{{ 'kingdom.report.resources' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let supply of report.data.intel.supplies\" class=\"common\">\r\n          <div mat-list-avatar [matBadge]=\"supply.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"supply.resource.image\">\r\n          </div>\r\n          <div mat-line>{{ supply.resource.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"supply.resource.description | translate | icon:supply.resource\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- TROOPS -->\r\n      <div matSubheader>{{ 'kingdom.report.troops' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let troop of report.data.intel.troops\" [ngClass]=\"[troop.unit.faction.id, troop.unit.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"troop.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"troop.unit.image\">\r\n          </div>\r\n          <div mat-line>{{ troop.unit.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of troop.unit.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of troop.unit.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of troop.unit.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n            <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"troop.unit.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"troop.unit.resistances && troop.unit.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of troop.unit.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- CONTRACTS -->\r\n      <div matSubheader>{{ 'kingdom.report.contracts' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let contract of report.data.intel.contracts\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"contract.hero.image\">\r\n          </div>\r\n          <div mat-line>{{ contract.hero.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- BUILDINGS -->\r\n      <div matSubheader>{{ 'kingdom.report.buildings' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let building of report.data.intel.buildings\" class=\"common\">\r\n          <div mat-list-avatar [matBadge]=\"building.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"building.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ building.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <!-- BATTLE -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.logs\">\r\n      <div matSubheader>{{ 'kingdom.report.attacker' | translate }}:<span class=\"fill-space\"></span>{{ 'kingdom.report.defender' | translate }}:</div>\r\n      <mat-list dense>\r\n        <ng-container *ngFor=\"let log of report.data.logs\">\r\n          <!-- ARTIFACTS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerArtifact.item.faction.id, log.attackerArtifact.item.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerArtifact\">\r\n            <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerArtifact.item.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerArtifact.item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.attackerArtifact.item.description | translate | icon:log.attackerArtifact.item\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderArtifact.item.faction.id, log.defenderArtifact.item.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderArtifact\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderArtifact.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderArtifact.item.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderArtifact.item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.defenderArtifact.item.description | translate | icon:log.defenderArtifact.item\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- CHARMS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerCharm.spell.faction.id, log.attackerCharm.spell.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerCharm\">\r\n            <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerCharm.spell.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerCharm.spell.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.attackerCharm.spell.description | translate | icon:log.attackerCharm.spell\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderCharm.spell.faction.id, log.defenderCharm.spell.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderCharm\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderCharm.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderCharm.spell.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderCharm.spell.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.defenderCharm.spell.description | translate | icon:log.defenderCharm.spell\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- CONTRACTS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerContract.hero.faction.id, log.attackerContract.hero.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerContract\">\r\n            <div mat-list-avatar [matBadge]=\"log.attackerContract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerContract.hero.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerContract.hero.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"!log.attackerContract.hero.battle\" [innerHTML]=\"log.defenderContract.hero.description | translate | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.attackerContract.hero.battle && log.attackerContract.hero.self\" [innerHTML]=\"'kingdom.report.bonus' | translate:{ family: this.getFamilies(log.attackerContract), attack: log.attackerContract.hero.attackBonus * log.attackerContract.level, defense: log.attackerContract.hero.defenseBonus * log.attackerContract.level, healths: log.attackerContract.hero.healthBonus * log.attackerContract.level } | icon:log.attackerContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.attackerContract.hero.battle && !log.attackerContract.hero.self\" [innerHTML]=\"'kingdom.report.damage' | translate:{ category: this.getCategories(log.attackerContract), damage: log.attackerContract.hero.attack * log.attackerContract.level, casualties: log.totalCasualties | long } | icon:log.attackerContract.hero\"></div>\r\n            <mat-icon>{{ log.attackerContract.hero.battle ? 'star' : 'star_border' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderContract.hero.faction.id, log.defenderContract.hero.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderContract\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderContract.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderContract.hero.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderContract.hero.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"!log.defenderContract.hero.battle\" [innerHTML]=\"log.defenderContract.hero.description | translate | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.defenderContract.hero.battle && log.defenderContract.hero.self\" [innerHTML]=\"'kingdom.report.bonus' | translate:{ family: this.getFamilies(log.defenderContract), attack: (log.defenderContract.hero.attackBonus * log.defenderContract.level) | long, defense: log.defenderContract.hero.defenseBonus * log.defenderContract.level, health: log.defenderContract.hero.healthBonus * log.defenderContract.level } | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.defenderContract.hero.battle && !log.defenderContract.hero.self\" [innerHTML]=\"'kingdom.report.damage' | translate:{ category: this.getCategories(log.defenderContract), damage: (log.defenderContract.hero.attack * log.defenderContract.level) | long, casualties: log.totalCasualties | long } | icon:log.defenderContract.hero\"></div>\r\n            <mat-icon>{{ log.defenderContract.hero.battle ? 'star' : 'star_border' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- TROOPS -->\r\n          <ng-container *ngIf=\"log.attackerTroop && log.defenderTroop\">\r\n            <ng-container *ngIf=\"log.direction === 'attacker-vs-defender'\">\r\n              <mat-list-item [ngClass]=\"[log.attackerTroop.unit.faction.id, log.attackerTroop.unit.legendary ? 'legendary' : 'common', 'lefted']\">\r\n                <div mat-list-avatar [matBadge]=\"(log.attackerTroop.quantity | long) + ' / ' + (log.attackerQuantity | long)\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar [src]=\"log.attackerTroop.unit.image\">\r\n                </div>\r\n                <div mat-line>{{ log.attackerTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.attack' | translate:{ category: '<'+log.attackerCategory.id+'>', quantity: log.attackerQuantity | long, initiative: log.attackerTroop.unit.initiativeWave, attack: (log.attackerTroop.unit.attackWave * log.attackerQuantity) | long, defense: (log.defenderTroop.unit.defenseWave * log.defenderQuantity) | long, health: (log.defenderTroop.unit.healthWave * log.defenderQuantity) | long, casualties: log.defenderCasualties | long } | icon:log.attackerTroop.unit\"></div>\r\n                <mat-icon style=\"transform: rotate(-90deg)\">subdirectory_arrow_left</mat-icon>\r\n              </mat-list-item>\r\n              <mat-list-item [ngClass]=\"[log.defenderTroop.unit.faction.id, log.defenderTroop.unit.legendary ? 'legendary' : 'common', 'righted']\">\r\n                <mat-icon style=\"transform: rotate(90deg)\">subdirectory_arrow_left</mat-icon>\r\n                <div mat-line>{{ log.defenderTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.counterattack' | translate:{ category: '<'+log.defenderCategory.id+'>', quantity: log.defenderTroop.quantity | long, initiative: log.defenderTroop.unit.initiativeWave, attack: (log.defenderTroop.unit.attackWave * log.defenderTroop.quantity) | long, defense: (log.attackerTroop.unit.defenseWave * log.attackerQuantity) | long, health: (log.attackerTroop.unit.healthWave * log.attackerQuantity) | long, casualties: log.attackerCasualties | long } | icon:log.defenderTroop.unit\"></div>\r\n                <div mat-list-avatar [matBadge]=\"(log.defenderTroop.quantity | long) + ' / ' + (log.defenderQuantity | long)\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar [src]=\"log.defenderTroop.unit.image\">\r\n                </div>\r\n              </mat-list-item>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"log.direction === 'defender-vs-attacker'\">\r\n            <mat-list-item [ngClass]=\"[log.defenderTroop.unit.faction.id, log.defenderTroop.unit.legendary ? 'legendary' : 'common', 'righted']\">\r\n                <div mat-list-avatar [matBadge]=\"(log.defenderTroop.quantity | long) + ' / ' + (log.defenderQuantity | long)\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar [src]=\"log.defenderTroop.unit.image\">\r\n                </div>\r\n                <div mat-line>{{ log.defenderTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.attack' | translate:{ category: '<'+log.defenderCategory.id+'>', quantity: log.defenderQuantity | long, initiative: log.defenderTroop.unit.initiativeWave, attack: (log.defenderTroop.unit.attackWave * log.defenderQuantity) | long, defense: (log.attackerTroop.unit.defenseWave * log.attackerQuantity) | long, health: (log.attackerTroop.unit.healthWave * log.attackerQuantity) | long, casualties: log.attackerCasualties | long } | icon:log.defenderTroop.unit\"></div>\r\n                <mat-icon style=\"transform: rotate(90deg)\">subdirectory_arrow_right</mat-icon>\r\n              </mat-list-item>\r\n              <mat-list-item [ngClass]=\"[log.attackerTroop.unit.faction.id, log.attackerTroop.unit.legendary ? 'legendary' : 'common', 'lefted']\">\r\n                <mat-icon style=\"transform: rotate(-90deg)\">subdirectory_arrow_right</mat-icon>\r\n                <div mat-line>{{ log.attackerTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.counterattack' | translate:{ category: '<'+log.attackerCategory.id+'>', quantity: log.attackerTroop.quantity | long, initiative: log.attackerTroop.unit.initiativeWave, attack: (log.attackerTroop.unit.attackWave * log.attackerTroop.quantity) | long, defense: (log.defenderTroop.unit.defenseWave * log.defenderQuantity) | long, health: (log.defenderTroop.unit.healthWave * log.defenderQuantity) | long, casualties: log.defenderCasualties | long } | icon:log.attackerTroop.unit\"></div>\r\n                <div mat-list-avatar [matBadge]=\"(log.attackerTroop.quantity | long) + ' / ' + (log.attackerQuantity | long)\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar [src]=\"log.attackerTroop.unit.image\">\r\n                </div>\r\n              </mat-list-item>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </mat-list>\r\n    </div>\r\n    <!-- ATTACHMENTS -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.join\">\r\n      <div matSubheader>{{ 'kingdom.report.attachment' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[report.data.join.faction.id, report.data.join.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"(report.data.quantity || report.data.level || report.data.join.level) | short\" matBadgePosition=\"ahove before\">\r\n            <img mat-list-avatar [src]=\"report.data.join.image\">\r\n          </div>\r\n          <div mat-line>{{ report.data.join.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item', 'resource'].includes(report.data.join.type)\" [innerHTML]=\"report.data.join.description | translate | icon:report.data.join\"></div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['unit'].includes(report.data.join.type)\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of report.data.join.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of report.data.join.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of report.data.join.categories\" [src]=\"category.image\">\r\n            <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"report.data.join.legendary\" src=\"/assets/images/icons/legendary.png\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['unit'].includes(report.data.join.type) && report.data.join.categories && report.data.join.categories.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of report.data.join.resistances\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-list-avatar *ngIf=\"report.data.gold\" [matBadge]=\"report.data.gold | short\" matBadgePosition=\"ahove after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gold.png\">\r\n          </div>\r\n          <div mat-list-avatar *ngIf=\"report.data.gems\" [matBadge]=\"report.data.gems | short\" matBadgePosition=\"ahove after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.date' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ report.timestamp.toMillis() | date:('dateformat.short' | translate) }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\" cdkFocusInitial>{{ 'kingdom.report.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    p {\r\n      margin: 0;\r\n    }\r\n    ::ng-deep .mat-list-base {\r\n      max-height: none;\r\n    }\r\n    ::ng-deep .mat-dialog-content.espionage {\r\n      max-height: 50vh !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item.righted .mat-list-item-content {\r\n      flex-direction: row-reverse !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item.righted .mat-list-item-content .mat-list-text {\r\n      text-align: right !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-list-text {\r\n      padding-right: 16px !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-icon {\r\n      margin: 0 16px !important;\r\n    }\r\n    @media screen and (max-width: 960px) {\r\n      ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-icon {\r\n        margin: 0 !important;\r\n      }\r\n      ::ng-deep .mat-dialog-content.espionage {\r\n        max-height: 35vh !important;\r\n      }\r\n    }\r\n  `],\r\n})\r\nexport class ReportComponent implements OnInit {\r\n\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public report: any,\r\n    private dialogRef: MatDialogRef<ReportComponent>,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    if (!this.report.read) {\r\n      await this.apiService.readLetter(this.uid, this.report.fid);\r\n    }\r\n  }\r\n\r\n  getFamilies(contract: any): string {\r\n    return contract.hero.families.map((family: any) => `<${family.id}>`).join(', ');\r\n  }\r\n\r\n  getCategories(contract: any): string {\r\n    return contract.hero.categories.map((category: any) => `<${category.id}>`).join(', ');\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport * as moment from 'moment';\r\nimport { BidComponent } from './bid.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TomeComponent } from 'src/app/user/encyclopedia/tome.component';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-auction',\r\n  templateUrl: './auction.component.html',\r\n  styleUrls: ['./auction.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class AuctionComponent implements OnInit {\r\n\r\n  columns: string[] = [\r\n    'name',\r\n    'faction',\r\n    'actions',\r\n  ];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    faction: {\r\n      type: 'select',\r\n      value: '',\r\n      options: [],\r\n    },\r\n  };\r\n  table: MatTableDataSource<any> = new MatTableDataSource([]);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>('auctions').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(async auctions => {\r\n      const data = auctions.map((auction: any) => {\r\n        auction.join = auction.hero || auction.item || auction.spell || auction.unit;\r\n        return auction;\r\n      });\r\n      this.table = new MatTableDataSource(data);\r\n      this.table.paginator = this.paginator;\r\n      this.table.sort = this.sort;\r\n      this.table.sortingDataAccessor = this.createSorter();\r\n      this.table.filterPredicate = this.createFilter();\r\n      this.filters.faction.options = [...new Set(data.map((auction: any) => auction.join.faction))];\r\n      this.applyFilter();\r\n      await this.refreshAuctions();\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    this.table.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      faction: this.filters.faction.value,\r\n    });\r\n  }\r\n\r\n  createSorter(): (obj: any, property: string) => any {\r\n    const sorterFunction = (obj: any, property: string): any => {\r\n      if (property === 'name') return this.translateService.instant(obj['join']['name']);\r\n      if (property === 'faction') return this.translateService.instant(obj['join']['faction']['name']);\r\n      return obj[property];\r\n    };\r\n    return sorterFunction;\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return (this.translateService.instant(data.join.name).toLowerCase().includes(filters.name)\r\n        || this.translateService.instant(data.join.description).toLowerCase().includes(filters.name))\r\n        && data.join.faction.id.toLowerCase().includes(filters.faction);\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  async refreshAuctions() {\r\n    if (!this.table.data.length || (this.table.data.length && moment().isAfter(moment(this.table.data[0].auctioned.toMillis())))) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        await this.apiService.refreshAuction();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.auction.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    }\r\n  }\r\n\r\n  openBidDialog(auction: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(BidComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: auction,\r\n    });\r\n  }\r\n\r\n  openTomeDialog(tome: any): void {\r\n    const dialogRef = this.dialog.open(TomeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: tome,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-auction table-responsive\" [@fadeInOnEnter]>\r\n  <mat-card>\r\n\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/auction.png\" [alt]=\"'kingdom.auction.name' | translate\">\r\n      <mat-card-title>{{ 'kingdom.auction.name' | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ 'kingdom.auction.description' | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.auction')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>gavel</mat-icon>{{ table.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p [innerHTML]=\"'kingdom.auction.help' | translate | icon\"></p>\r\n      <table mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\" [dataSource]=\"table\" tourAnchor=\"tour.auction\" [attr.aria-label]=\"'kingdom.auction.name' | translate\">\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n          <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n            <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'select'\">\r\n              <mat-select [(ngModel)]=\"filters[column].value\" (selectionChange)=\"applyFilter()\">\r\n                <mat-option value=\"\">{{ 'table.filter.any' | translate }}</mat-option>\r\n                <mat-option *ngFor=\"let option of filters[column].options\" [value]=\"option.value\">{{ option.name | translate }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let auction\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n            <ng-template [ngIf]=\"column === 'name'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"[auction.join.faction.id, auction.join.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"(auction.quantity || auction.level || auction.spell.level) | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"auction.join.image\" [alt]=\"auction.join.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ auction.join.name | translate:{name:auction.name} }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['artifact', 'contract', 'charm'].includes(auction.type)\" [innerHTML]=\"auction.join.description | translate | icon:auction.join\"></div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type)\">\r\n                    <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of auction.join.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n                    <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of auction.join.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n                    <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of auction.join.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n                    <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"auction.join.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n                  </div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type) && auction.join.resistances && auction.join.resistances.length\">\r\n                    <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of auction.join.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n                  </div>\r\n                  <div mat-list-avatar [matBadge]=\"auction.gold | long\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/resources/gold.png\" [alt]=\"'resource.gold.name' | translate\"> [alt]=\"'resource.gold.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'faction'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"auction.join.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"auction.join.faction.image\" [alt]=\"auction.join.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ auction.join.faction.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"auction.join.faction.description | translate | icon:auction.join.faction\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'actions'\">\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.auction.bid' | translate }}\" [disabled]=\"auction.kingdom === uid\" (click)=\"openBidDialog(auction, $event)\">\r\n                <mat-icon>gavel</mat-icon>\r\n              </button>\r\n            </ng-template>\r\n\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let auction; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.bid' : null\" (click)=\"openTomeDialog(auction.join)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-bid',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.bid.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.bid.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.bid.data' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[auction.join.faction.id, auction.join.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"(auction.quantity || auction.level || auction.spell.level) | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"auction.join.image\">\r\n          </div>\r\n          <div mat-line>{{ auction.join.name | translate:{name:auction.name} }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['artifact', 'contract'].includes(auction.type)\" [innerHTML]=\"auction.join.description | translate | icon:auction.join\"></div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type)\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of auction.join.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of auction.join.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of auction.join.categories\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"auction.join.resistances && auction.join.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of auction.join.resistances\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"auction.gold | long\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gold.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.bid.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.gold.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.gold.name' | translate }}\" matInput formControlName=\"gold\">\r\n          <mat-hint>{{ 'kingdom.bid.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.bid.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.bid.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"bid()\">{{ 'kingdom.bid.bid' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BidComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public auction: any,\r\n    private dialogRef: MatDialogRef<BidComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      gold: [Math.floor(this.auction.gold * 1.10), [Validators.required, Validators.min(Math.floor(this.auction.gold * 1.10)), Validators.max(this.kingdomGold.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async bid() {\r\n    if (this.form.valid && this.form.value.gold <= this.kingdomGold.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const bidded = await this.apiService.bidAuction(this.uid, this.auction.fid, this.form.value.gold);\r\n        this.notificationService.success('kingdom.bid.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.bid.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.bid.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { TroopAssignmentType } from '../army/army.component';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\n\r\nexport enum BattleType {\r\n  'siege' = 'siege',\r\n  'pillage' = 'pillage',\r\n  'assault' = 'assault',\r\n}\r\n\r\nconst BATTLE_TURNS = 2;\r\n\r\n@Component({\r\n  selector: 'app-battle',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.battle.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.battle.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.battle.target' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"kingdom.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"BATTLE_TURNS\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.battle.select' | translate }}:</div>\r\n      <mat-form-field>\r\n        <mat-label>{{ 'kingdom.battle.type' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"attackType\">\r\n          <mat-select-trigger>\r\n            <mat-list dense>\r\n              <mat-list-item>\r\n                <div mat-list-avatar>\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"attackType.image\">\r\n                </div>\r\n                <div mat-line>{{ attackType.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"attackType.description | translate | icon:attackType\"></div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let attack of attackTypes\" [value]=\"attack\">\r\n            <mat-list dense>\r\n              <mat-list-item>\r\n                <div mat-list-avatar>\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"attack.image\">\r\n                </div>\r\n                <div mat-line>{{ attack.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"attack.description | translate | icon:attack\"></div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.battle.cancel' | translate }}</button>\r\n      <div class=\"button-container\">\r\n        <div class=\"spinner-container\" *ngIf=\"loading\"><mat-spinner color=\"primary\" diameter=\"24\"></mat-spinner></div>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"loading\" (click)=\"battle()\" cdkFocusInitial>{{ 'kingdom.battle.attack' | translate }}</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    .list-margened {\r\n      margin-top: 15px;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class BattleComponent implements OnInit {\r\n\r\n  readonly BATTLE_TURNS = BATTLE_TURNS;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  loading: boolean = false;\r\n  attackTypes: any[] = [];\r\n  attackType: any = BattleType.assault;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private dialogRef: MatDialogRef<BattleComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private cacheService: CacheService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const attacks = await this.cacheService.getAttacks();\r\n    this.attackTypes = attacks;\r\n    this.attackType = this.attackTypes[0];\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async battle() {\r\n    this.loading = true;\r\n    if (this.BATTLE_TURNS <= this.kingdomTurn.quantity) {\r\n      try {\r\n        const battled = await this.apiService.battleKingdom(this.uid, this.kingdom.fid, this.attackType.id);\r\n        this.notificationService.success('kingdom.battle.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.battle.error');\r\n      }\r\n    } else {\r\n      this.notificationService.error('kingdom.battle.error');\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation, fadeOutOnLeaveAnimation } from 'angular-animations';\r\nimport { BattleComponent } from './battle.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport * as moment from 'moment';\r\nimport { LetterComponent } from './letter.component';\r\nimport { ActivateComponent } from '../sorcery/activate.component';\r\nimport { ConjureComponent } from '../sorcery/conjure.component';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DetailComponent } from './detail.component';\r\nimport { TourService } from 'ngx-ui-tour-core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-census',\r\n  templateUrl: './census.component.html',\r\n  styleUrls: ['./census.component.scss'],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 250, delay: 250 }),\r\n    fadeOutOnLeaveAnimation({ duration: 250, delay: 250 }),\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class CensusComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  clock: Date = this.store.selectSnapshot(AuthState.getClock);\r\n  protection: number = 8;\r\n  columns = ['name', 'clan', 'actions'];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    clan: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n  };\r\n  data: MatTableDataSource<any> = new MatTableDataSource();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private router: Router,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>('kingdoms').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(async kingdoms => {\r\n      this.data = new MatTableDataSource(kingdoms.sort((a, b) => b.power - a.power).map((kingdom, index) => {\r\n        return {\r\n          ...kingdom,\r\n          position: index + 1,\r\n        };\r\n      }));\r\n      this.data.paginator = this.paginator;\r\n      this.data.sortingDataAccessor = (obj, property) => property === 'name' ? obj['power'] : obj[property];\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    this.data.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      clan: this.filters.clan.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data.name.toLowerCase().includes(filters.name)\r\n        && (!filters.clan\r\n          || (data.clan && data.clan.name.toLowerCase().includes(filters.clan)))\r\n          || (data.clan && data.clan.description.toLowerCase().includes(filters.clan));\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  openAttackDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(BattleComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  openLetterDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(LetterComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  openActivateDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(ActivateComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        artifact: null,\r\n        kingdom: kingdom,\r\n      },\r\n    });\r\n  }\r\n\r\n  openConjureDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(ConjureComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        charm: null,\r\n        kingdom: kingdom,\r\n      },\r\n    });\r\n  }\r\n\r\n  openDetailDialog(kingdom: any): void {\r\n    const dialogRef = this.dialog.open(DetailComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  async showInMap(kingdom: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    await this.router.navigate([`/world/map/${kingdom.fid}`]);\r\n  }\r\n\r\n  canBeAttacked(kingdom: any): boolean {\r\n    return kingdom.attacked\r\n      ? moment(this.clock).isAfter(moment(kingdom.attacked.toMillis()))\r\n      : true;\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-census table-responsive\" [@fadeInOnEnter]>\r\n  <mat-card>\r\n\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/census.png\" [alt]=\"'kingdom.census.name' | translate\">\r\n      <mat-card-title>{{ 'kingdom.census.name' | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ 'kingdom.census.description' | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.census')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>person</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p>{{ 'kingdom.census.help' | translate }}</p>\r\n      <table mat-table matSort [dataSource]=\"data\" matSortDisableClear tourAnchor=\"tour.census\" [attr.aria-label]=\"'kingdom.census.name' | translate\">\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n          <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n            <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n          </mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let kingdom\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n            <ng-template [ngIf]=\"column === 'name'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"kingdom.faction.image\" [alt]=\"kingdom.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdom.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.power | short\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'clan'\">\r\n              <mat-list dense *ngIf=\"kingdom.clan\">\r\n                <mat-list-item class=\"grey\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"kingdom.clan.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdom.clan.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ kingdom.clan.description }}</div>\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.clan.power | short\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n              <div *ngIf=\"!kingdom.clan\" style=\"width: 100%; text-align: center\">-</div>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'actions'\">\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.battle.attack' | translate }}\" [disabled]=\"!canBeAttacked(kingdom) || kingdom.fid === uid\" (click)=\"openAttackDialog(kingdom, $event)\">\r\n                <mat-icon>{{ canBeAttacked(kingdom) ? 'flag' : 'security' }}</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.activate.activate' | translate }}\" [disabled]=\"kingdom.fid === uid\" (click)=\"openActivateDialog(kingdom, $event)\">\r\n                <mat-icon>api</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.conjure.conjure' | translate }}\" [disabled]=\"kingdom.fid === uid\" (click)=\"openConjureDialog(kingdom, $event)\">\r\n                <mat-icon>whatshot</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.letter.name' | translate }}\" (click)=\"openLetterDialog(kingdom, $event)\">\r\n                <mat-icon>mail</mat-icon>\r\n              </button>\r\n              <!--\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'world.map.localize' | translate }}\" (click)=\"showInMap(kingdom, $event)\">\r\n                <mat-icon>place</mat-icon>\r\n              </button>\r\n              -->\r\n            </ng-template>\r\n\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let kingdom; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.kingdom' : null\" (click)=\"openDetailDialog(kingdom)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.detail.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.detail.kingdom' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"kingdom.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.detail.troops' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let troop of kingdomTroops\" [ngClass]=\"[troop.unit.faction.id, troop.unit.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"troop.unit.image\">\r\n          </div>\r\n          <div mat-line>{{ troop.unit.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of troop.unit.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of troop.unit.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of troop.unit.categories\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"troop.unit.resistances && troop.unit.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of troop.unit.resistances\" [src]=\"category.image\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\">{{ 'kingdom.detail.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class DetailComponent implements OnInit {\r\n\r\n  kingdomTroops: any[] = [];\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private dialogRef: MatDialogRef<DetailComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.kingdom.id}/troops`, ref => ref.where('assignment', '==', 2)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(troops => {\r\n      this.kingdomTroops = troops;\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-letter',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.letter.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.letter.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.letter.to' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.letter.contents' | translate }}:</div>\r\n      <form [formGroup]=\"form\" autocomplete=\"off\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.letter.subject' | translate }}</mat-label>\r\n          <input placeholder=\"{{ 'kingdom.letter.subject' | translate }}\" matInput formControlName=\"subject\">\r\n          <mat-error>{{ 'kingdom.letter.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.letter.message' | translate }}</mat-label>\r\n          <textarea placeholder=\"{{ 'kingdom.letter.message' | translate }}\" matInput rows=\"5\" formControlName=\"message\"></textarea>\r\n          <mat-error>{{ 'kingdom.letter.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.letter.close' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\" (click)=\"send()\">{{ 'kingdom.letter.send' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class LetterComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  form: FormGroup = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<LetterComponent>,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      subject: [null, [Validators.required]],\r\n      message: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  reset(): void {\r\n    this.form.reset();\r\n  }\r\n\r\n  async send() {\r\n    if (this.form.valid) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const sent = await this.apiService.sendLetter(this.kingdom.fid, this.form.value.subject, this.form.value.message, this.uid);\r\n        this.notificationService.success('kingdom.letter.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.letter.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.letter.error');\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-build',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.build.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.build.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.build.building' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"building.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"building.quantity\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"building.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ building.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n          <div mat-list-avatar [matBadge]=\"Math.ceil((kingdomWorkshop.quantity + 1) / building.structure.turnRatio) + ('resource.turn.ratio' | translate)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.build.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.land.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.land.name' | translate }}\" matInput formControlName=\"quantity\">\r\n          <mat-hint>{{ 'kingdom.build.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.build.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.build.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ gold() | long}}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/land.png\">{{ land() | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ turn() | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.build.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"demolish()\">{{ 'kingdom.build.demolish' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"build()\">{{ 'kingdom.build.build' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BuildComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  kingdomLand: any = this.store.selectSnapshot(AuthState.getKingdomLand);\r\n  kingdomWorkshop: any = this.store.selectSnapshot(AuthState.getKingdomWorkshop);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  Math: any = Math;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public building: any,\r\n    private dialogRef: MatDialogRef<BuildComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      quantity: [null, [Validators.required, Validators.min(1), Validators.max(Math.max(this.kingdomTurn.quantity, this.kingdomLand.quantity,  this.kingdomGold.quantity))]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async build() {\r\n    if (this.form.valid && this.land() <= this.kingdomLand.quantity && this.gold() <= this.kingdomGold.quantity && this.turn() <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const built = await this.apiService.buildStructure(this.uid, this.building.fid, this.form.value.quantity);\r\n        this.notificationService.success('kingdom.build.built', built);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.build.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.build.error');\r\n    }\r\n  }\r\n\r\n  async demolish() {\r\n    if (this.form.valid && this.land() <= this.building.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const demolished = await this.apiService.demolishStructure(this.uid, this.building.fid, this.form.value.quantity);\r\n        this.notificationService.success('kingdom.build.demolished', demolished);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.build.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.build.error');\r\n    }\r\n  }\r\n\r\n  turn() {\r\n    return Math.ceil(this.form.value.quantity / Math.ceil((this.kingdomWorkshop.quantity + 1) / this.building.structure.turnRatio));\r\n  }\r\n\r\n  gold() {\r\n    return this.form.value.quantity * this.building.structure.goldCost;\r\n  }\r\n\r\n  land() {\r\n    return this.form.value.quantity || 0;\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-charge',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.charge.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.charge.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.charge.source' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(node$ | async)?.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(node$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"(node$ | async)?.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ (node$ | async)?.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(node$ | async)?.structure.description | translate | icon:(node$ | async)?.structure\"></div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.charge.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.charge.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.charge.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.charge.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"charge()\">{{ 'kingdom.charge.charge' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ChargeComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public node$: Observable<any>,\r\n    private dialogRef: MatDialogRef<ChargeComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async charge() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const charged = await this.apiService.chargeMana(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.charge.success', charged);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.charge.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.charge.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { BuildComponent } from './build.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { TaxComponent } from './tax.component';\r\nimport { ChargeComponent } from './charge.component';\r\nimport { ExploreComponent } from './explore.component';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\nexport class CityComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  @Select(AuthState.getKingdomBuildings) kingdomBuildings$: Observable<any[]>;\r\n  @Select(AuthState.getKingdomVillage) village$: Observable<any>;\r\n  @Select(AuthState.getKingdomNode) node$: Observable<any>;\r\n  @Select(AuthState.getKingdomWorkshop) workshop$: Observable<any>;\r\n  @Select(AuthState.getKingdomLand) land$: Observable<any>;\r\n  @Select(AuthState.getKingdomTurn) turn$: Observable<any>;\r\n  Math: any = Math;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    /*\r\n    combineLatest([\r\n      this.kingdomBuildings$,\r\n      this.village$,\r\n      this.node$,\r\n      this.workshop$,\r\n      this.land$,\r\n      this.turn$,\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(() => {\r\n      this.tutorialService.ready('city');\r\n    });\r\n    */\r\n  }\r\n\r\n  openBuildDialog(building: any): void {\r\n    const dialogRef = this.dialog.open(BuildComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: building,\r\n    });\r\n  }\r\n\r\n  openTaxDialog(village$: any): void {\r\n    const dialogRef = this.dialog.open(TaxComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: village$,\r\n    });\r\n  }\r\n\r\n  openChargeDialog(node$: any): void {\r\n    const dialogRef = this.dialog.open(ChargeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: node$,\r\n    });\r\n  }\r\n\r\n  openExploreDialog(land$: Observable<any>): void {\r\n    const dialogRef = this.dialog.open(ExploreComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: land$,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-city\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/city.png\" [alt]=\"'kingdom.city.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.city.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.city.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.city')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>{{ (kingdomBuildings$ | async)?.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.buildings' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.city\">\r\n          <button mat-list-item *ngFor=\"let building of kingdomBuildings$ | async\" (click)=\"openBuildDialog(building)\" class=\"common\">\r\n            <div mat-list-avatar [matBadge]=\"building.quantity | long\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"building.structure.image\" [alt]=\"building.structure.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ building.structure.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n            <div mat-list-avatar [matBadge]=\"Math.ceil(((workshop$ | async)?.quantity + 1) / building.structure.turnRatio) + ('resource.turn.ratio' | translate)\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.city.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/tax.png\" [alt]=\"'kingdom.tax.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.tax.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.tax.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.tax')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.tax.tax' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.tax\">\r\n              <button mat-list-item *ngIf=\"village$\" (click)=\"openTaxDialog(village$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(village$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"(village$ | async)?.structure.image\" [alt]=\"(village$ | async)?.structure.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ (village$ | async)?.structure.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(village$ | async)?.structure.description | translate | icon:(village$ | async)?.structure\"></div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.tax.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/charge.png\" [alt]=\"'kingdom.charge.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.charge.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.charge.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.charge')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.charge.charge' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.charge\">\r\n              <button mat-list-item *ngIf=\"node$\" (click)=\"openChargeDialog(node$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(node$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"(node$ | async)?.structure.image\" [alt]=\"(village$ | async)?.structure.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ (node$ | async)?.structure.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(node$ | async)?.structure.description | translate | icon:(node$ | async)?.structure\"></div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.charge.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/explore.png\" [alt]=\"'kingdom.explore.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.explore.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.explore.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.explore')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.explore.explore' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.explore\">\r\n              <button mat-list-item *ngIf=\"land$ | async\" (click)=\"openExploreDialog(land$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(land$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" src=\"/assets/images/resources/land.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n                <div mat-line>{{ 'resource.land.name' | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\">{{ 'resource.land.description' | translate }}</div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.explore.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-explore',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.explore.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.explore.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.explore.discovery' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(land$ | async).resource.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(land$ | async).quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/land.png\">\r\n          </div>\r\n          <div mat-line>{{ 'resource.land.name' | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ 'resource.land.description' | translate }}</div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.explore.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.explore.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.explore.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.explore.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"explore()\">{{ 'kingdom.explore.explore' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ExploreComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public land$: Observable<any>,\r\n    private dialogRef: MatDialogRef<ExploreComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async explore() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const explored = await this.apiService.exploreLand(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.explore.success', explored);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.explore.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.explore.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-tax',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.tax.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.tax.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.tax.source' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(village$ | async)?.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(village$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"(village$ | async)?.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ (village$ | async)?.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(village$ | async)?.structure.description | translate | icon:(village$ | async)?.structure\"></div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.tax.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.tax.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.tax.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.tax.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"tax()\">{{ 'kingdom.tax.tax' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class TaxComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public village$: Observable<any>,\r\n    private dialogRef: MatDialogRef<TaxComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async tax() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const taxed = await this.apiService.taxGold(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.tax.success', taxed);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tax.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.tax.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { fadeInOnEnterAnimation, fadeOutOnLeaveAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport * as moment from 'moment';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FoundationComponent } from './foundation.component';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { ManifestComponent } from './manifest.component';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-clan',\r\n  templateUrl: './clan.component.html',\r\n  styleUrls: ['./clan.component.scss'],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 250, delay: 250 }),\r\n    fadeOutOnLeaveAnimation({ duration: 250, delay: 250 }),\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class ClanComponent implements OnInit {\r\n\r\n  kingdomGuilds: any[] = [];\r\n  kingdomGuild: any = null;\r\n  kingdomClan$: Observable<any> = this.store.select(AuthState.getKingdomClan);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGuilded: any = null;\r\n  columns = ['name', 'actions'];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n  };\r\n  data: MatTableDataSource<any> = new MatTableDataSource();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private cacheService: CacheService,\r\n    private angularFirestore: AngularFirestore,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.kingdomGuilds = await this.cacheService.getGuilds();\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>('clans').valueChanges({ idField: 'fid' }),\r\n      this.store.select(AuthState.getKingdomGuild).pipe(map(((data: string) => JSON.parse(data)))),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([clans, kingdomGuild]) => {\r\n      this.data = new MatTableDataSource(clans);\r\n      this.data.paginator = this.paginator;\r\n      this.data.sortingDataAccessor = (obj, property) => property === 'name' ? obj['power'] : obj[property];\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n      if (kingdomGuild) {\r\n        this.kingdomGuild = this.kingdomGuilds.find(guild => guild.id === kingdomGuild.guild.id);\r\n        this.kingdomGuilded = kingdomGuild.guilded;\r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(): void {\r\n    this.data.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data.name.toLowerCase().includes(filters.name);\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  async joinClan(clan: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const joined = await this.apiService.joinClan(this.uid, clan.fid);\r\n      this.notificationService.success('kingdom.clan.success');\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.clan.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  async leaveClan(clan: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const joined = await this.apiService.leaveClan(this.uid, clan.fid);\r\n      this.notificationService.success('kingdom.clan.success');\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.clan.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  openManifestDialog(clan: any): void {\r\n    const dialogRef = this.dialog.open(ManifestComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: { ...clan, members: [] },\r\n    });\r\n  }\r\n\r\n  openFoundationDialog(): void {\r\n    const dialogRef = this.dialog.open(FoundationComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: null,\r\n    });\r\n  }\r\n\r\n  canBeFavored(): boolean {\r\n    return this.kingdomGuilded\r\n      ? moment(this.store.selectSnapshot(AuthState.getClock)).isAfter(moment(this.kingdomGuilded))\r\n      : false;\r\n  }\r\n\r\n  async favorGuild() {\r\n    if (this.kingdomGuild && this.canBeFavored()) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const favored = await this.apiService.favorGuild(this.uid, this.kingdomGuild.id);\r\n        this.notificationService.success('kingdom.guild.success');\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.guild.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.guild.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-clan table-responsive\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/clan.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.clan.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.clan.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.clan')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>people</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.clan.help' | translate\"></p>\r\n        <table mat-table matSort [dataSource]=\"data\" matSortDisableClear tourAnchor=\"tour.clan\" [attr.aria-label]=\"'kingdom.clan.name' | translate\">\r\n          <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n              <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let clan\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n              <ng-template [ngIf]=\"column === 'name'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"clan.fid === kingdomClan$ ? 'legendary': 'common'\">\r\n                    <div mat-list-avatar>\r\n                      <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"clan.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ clan.name }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\">{{ clan.description }}</div>\r\n                    <div mat-list-avatar [matBadge]=\"clan.power | short\" matBadgePosition=\"above after\">\r\n                      <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                    </div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'actions'\">\r\n                <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.join' | translate }}\" (click)=\"joinClan(clan, $event)\" [disabled]=\"clan.fid === (kingdomClan$ | async)?.fid\">\r\n                  <mat-icon>thumb_up</mat-icon>\r\n                </button>\r\n                <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.leave' | translate }}\" (click)=\"leaveClan(clan, $event)\" [disabled]=\"clan.fid !== (kingdomClan$ | async)?.fid\">\r\n                  <mat-icon>thumb_down</mat-icon>\r\n                </button>\r\n              </ng-template>\r\n\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let clan; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.kingdom' : null\" (click)=\"openManifestDialog(clan)\"></mat-row>\r\n        </table>\r\n\r\n        <mat-toolbar>\r\n          <mat-toolbar-row>\r\n            <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.found' | translate }}\" (click)=\"openFoundationDialog()\" [disabled]=\"(kingdomClan$ | async)\"><mat-icon>thumbs_up_down</mat-icon></button>\r\n            <span class=\"fill-space\"></span>\r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/guild.png\" [alt]=\"'kingdom.guild.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.guild.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.guild.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.guild')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>shield</mat-icon>{{ kingdomGuilds.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.guild.help' | translate\"></p>\r\n        <div matSubheader>{{ 'card.list.guilds' | translate }}:</div>\r\n        <mat-form-field tourAnchor=\"tour.guild\">\r\n          <mat-label>{{ 'kingdom.guild.select' | translate }}</mat-label>\r\n          <mat-select [(ngModel)]=\"kingdomGuild\">\r\n            <mat-select-trigger *ngIf=\"kingdomGuild\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"kingdomGuild.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"kingdomGuild.image\" [alt]=\"kingdomGuild.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdomGuild.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"kingdomGuild.description | translate | icon:kingdomGuild\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-select-trigger>\r\n            <mat-option *ngFor=\"let guild of kingdomGuilds\" [value]=\"guild\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"guild.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"guild.image\" [alt]=\"guild.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ guild.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"guild.description | translate | icon:guild\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!kingdomGuild || !canBeFavored()\" (click)=\"favorGuild()\" cdkFocusInitial>\r\n          {{ canBeFavored() ? ('kingdom.guild.favor' | translate) : kingdomGuilded | date:('dateformat.short' | translate) }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nconst CLAN_COST = 1000000;\r\n\r\n@Component({\r\n  selector: 'app-foundation',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.foundation.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.foundation.description' | translate}}</p>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.foundation.information' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.image' | translate }}</mat-label>\r\n          <mat-select formControlName=\"image\">\r\n            <mat-select-trigger>\r\n              <mat-list dense>\r\n                <mat-list-item class=\"common\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"form.value.image\">\r\n                  </div>\r\n                  <div mat-line>{{ form.value.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ form.value.description }}</div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-select-trigger>\r\n            <mat-option *ngFor=\"let image of images\" [value]=\"image\">\r\n              <mat-list dense>\r\n                <mat-list-item class=\"common\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"image\">\r\n                  </div>\r\n                  <div mat-line>{{ form.value.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ form.value.description }}</div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.rubric' | translate }}</mat-label>\r\n          <input placeholder=\"{{ 'kingdom.foundation.rubric' | translate }}\" matInput formControlName=\"name\">\r\n          <mat-error>{{ 'kingdom.foundation.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.motto' | translate }}</mat-label>\r\n          <textarea placeholder=\"{{ 'kingdom.foundation.motto' | translate }}\" matInput rows=\"2\" formControlName=\"description\"></textarea>\r\n          <mat-error>{{ 'kingdom.foundation.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.foundation.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ CLAN_COST | long}}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.foundation.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"foundation()\">{{ 'kingdom.foundation.found' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class FoundationComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  images: string[] = [];\r\n  CLAN_COST = CLAN_COST;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FoundationComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.images = [\r\n      '/assets/images/clans/crow.png',\r\n      '/assets/images/clans/axe.png',\r\n      '/assets/images/clans/hat.png',\r\n      '/assets/images/clans/helmet.png',\r\n      '/assets/images/clans/rip.png',\r\n    ];\r\n    this.form = this.formBuilder.group({\r\n      image: [this.images[0], [Validators.required]],\r\n      name: [null, [Validators.required, Validators.maxLength(50)]],\r\n      description: [null, [Validators.required, Validators.maxLength(100)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async foundation() {\r\n    if (this.form.valid && CLAN_COST <= this.kingdomGold.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const founded = await this.apiService.foundateClan(this.uid, this.form.value.name, this.form.value.description, this.form.value.image);\r\n        this.notificationService.success('kingdom.foundation.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.foundation.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.foundation.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\n\r\n@Component({\r\n  selector: 'app-manifest',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.manifest.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.clan' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"common\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"clan.image\">\r\n          </div>\r\n          <div mat-line>{{ clan.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ clan.description }}</div>\r\n          <div mat-list-avatar [matBadge]=\"clan.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.leader' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"clan.leader.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"clan.leader.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ clan.leader.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ clan.leader.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"clan.leader.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.members' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let member of clan.members\" [ngClass]=\"member.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"member.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ member.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ member.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"member.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\">{{ 'kingdom.manifest.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class ManifestComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public clan: any,\r\n    private dialogRef: MatDialogRef<ManifestComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`clans/${this.clan.fid}/members`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(members => {\r\n      this.clan.members = members;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-buy',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.buy.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.buy.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.buy.artifact' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[item.faction.id, item.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"item.image\">\r\n          </div>\r\n          <div mat-line>{{ item.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"item.description | translate | icon:item\"></div>\r\n          <div mat-list-avatar [matBadge]=\"item.gems | long\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.buy.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"item.gems > kingdomGem.quantity\" (click)=\"buy()\" cdkFocusInitial>{{ 'kingdom.buy.buy' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n  `],\r\n})\r\nexport class BuyComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGem: any = this.store.selectSnapshot(AuthState.getKingdomGem);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public item: any,\r\n    private dialogRef: MatDialogRef<BuyComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async buy() {\r\n    if (this.item.gems <= this.kingdomGem.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const bought = await this.apiService.buyEmporium(this.uid, this.item.id);\r\n        this.notificationService.success('kingdom.emporium.success', bought);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.emporium.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.emporium.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BuyComponent } from './buy.component';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { Observable } from 'rxjs';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { PERK_COST } from './perk.component';\r\nimport { PlantComponent } from './plant.component';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-emporium',\r\n  templateUrl: './emporium.component.html',\r\n  styleUrls: ['./emporium.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class EmporiumComponent implements OnInit {\r\n\r\n  PERK_COST = PERK_COST;\r\n\r\n  @Select(AuthState.getKingdomTree) tree$: Observable<any>;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  gems: number = 0;\r\n  kingdomTree: any = null;\r\n  originalTree: any = null;\r\n  emporiumItems: any[] = [];\r\n  emporiumPacks: any[] = [];\r\n\r\n  constructor(\r\n    private cacheService: CacheService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n    // private angularFirestore: AngularFirestore,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.emporiumItems = (await this.cacheService.getItems()).filter((item: any) => item.gems > 0);\r\n    this.emporiumPacks = (await this.cacheService.getPacks()).sort((a: any, b: any) => a.quantity - b.quantity);\r\n    this.tree$.pipe(untilDestroyed(this)).subscribe((tree: any) => {\r\n      this.originalTree = tree;\r\n      this.kingdomTree = JSON.parse(JSON.stringify(tree));\r\n    });\r\n    /*\r\n    this.angularFirestore.doc<any>('perks/strategy').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(tree => {\r\n      this.originalTree = tree;\r\n      this.kingdomTree = JSON.parse(JSON.stringify(tree));\r\n    });\r\n    */\r\n  }\r\n\r\n  openBuyDialog(item: any): void {\r\n    const dialogRef = this.dialog.open(BuyComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: item,\r\n    });\r\n  }\r\n\r\n  openPlantDialog(): void {\r\n    const tree = {\r\n      strategy: this.findTree(this.kingdomTree, 'strategy'),\r\n      agriculture: this.findTree(this.kingdomTree, 'agriculture'),\r\n      alchemy: this.findTree(this.kingdomTree, 'alchemy'),\r\n      architecture: this.findTree(this.kingdomTree, 'architecture'),\r\n      culture: this.findTree(this.kingdomTree, 'culture'),\r\n      teology: this.findTree(this.kingdomTree, 'teology'),\r\n      cartography: this.findTree(this.kingdomTree, 'cartography'),\r\n      metalurgy: this.findTree(this.kingdomTree, 'metalurgy'),\r\n      medicine: this.findTree(this.kingdomTree, 'medicine'),\r\n      forge: this.findTree(this.kingdomTree, 'forge'),\r\n      science: this.findTree(this.kingdomTree, 'science'),\r\n      mysticism: this.findTree(this.kingdomTree, 'mysticism'),\r\n      masonry: this.findTree(this.kingdomTree, 'masonry'),\r\n    };\r\n    const dialogRef = this.dialog.open(PlantComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        branches: tree,\r\n        gems: this.gems,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().pipe(untilDestroyed(this)).subscribe((reset: boolean) => {\r\n      if (reset) {\r\n        this.gems = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  findTree(node: any, perk: string): number {\r\n    if (node.id === perk) {\r\n      return node.level;\r\n    } else if (node.perks) {\r\n      let found = null;\r\n      for (let i = 0; found === null && i < node.perks.length; i++) {\r\n        found = this.findTree(node.perks[i], perk);\r\n      }\r\n      return found;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  increaseGems($event: number): void {\r\n    this.gems += $event;\r\n  }\r\n\r\n  resetTree(): void {\r\n    this.kingdomTree = JSON.parse(JSON.stringify(this.originalTree));\r\n    this.gems = 0;\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-emporium\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/emporium.png\" [alt]=\"'kingdom.emporium.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.emporium.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.emporium.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.emporium')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>sell</mat-icon>{{ emporiumItems.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.emporium\">\r\n          <button mat-list-item *ngFor=\"let item of emporiumItems\" (click)=\"openBuyDialog(item)\" [ngClass]=\"item.legendary ? 'legendary' : 'common'\">\r\n            <div mat-list-avatar matBadge=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"item.image\" [alt]=\"item.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"item.description | translate | icon:item\"></div>\r\n            <div mat-list-avatar [matBadge]=\"item.gems\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/resources/gem.png\" [alt]=\"'resource.gem.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.emporium.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/tree.png\" [alt]=\"'kingdom.tree.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.tree.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.tree.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.tree')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>diamond</mat-icon>{{ PERK_COST }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"tree\" tourAnchor=\"tour.tree\">\r\n        <app-perk [perk]=\"kingdomTree\" [disabled]=\"false\" *ngIf=\"kingdomTree\" (increasedPerk)=\"increaseGems($event)\"></app-perk>\r\n      </mat-card-content>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.tree.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-button (click)=\"resetTree()\">{{ 'kingdom.tree.reset' | translate }}</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!gems\" (click)=\"openPlantDialog()\">{{ 'kingdom.tree.save' | translate }} ( {{ gems }} <img class=\"mat-icon\" src=\"/assets/images/resources/gem.png\" [alt]=\"'resource.gem.name' | translate\"> )</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/mining.png\" [alt]=\"'kingdom.mining.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.mining.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.mining.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.mining')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>redeem</mat-icon>{{ emporiumPacks.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.packs' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.mining\">\r\n          <button mat-list-item *ngFor=\"let pack of emporiumPacks\" class=\"common\" disabled>\r\n            <div mat-list-avatar [matBadge]=\"pack.quantity\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"pack.image\" [alt]=\"pack.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ pack.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"pack.description | translate | icon:pack\"></div>\r\n            <div mat-list-avatar [matBadge]=\"pack.money + '€'\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/stores/merchant.png\" [alt]=\"'store.merchant.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.mining.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, Input, ViewChildren, QueryList, Output, EventEmitter } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\n\r\nexport const PERK_COST: number = 5;\r\n\r\n@Component({\r\n  selector: 'app-perk',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"tree; context: { perk: perk, disabled: disabled }\"></ng-container>\r\n    <ng-template #tree let-perk=\"perk\" let-disabled=\"disabled\">\r\n      <div class=\"perk\" [matTooltip]=\"(perk.name | translate).toUpperCase() + '\\n' + (perk.description | translate)\" matTooltipPosition=\"below\" #tooltip>\r\n        <button mat-fab color=\"primary\" [matBadge]=\"perk.level + '/' + perk.max\" matBadgePosition=\"before\" matBadgeColor=\"primary\" [disabled]=\"disabled\" (click)=\"increasePerk(perk)\">\r\n          <img class=\"perk-image\" [src]=\"perk.image\">\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"perk.perks && perk.perks.length\" class=\"perks\">\r\n        <ng-container *ngFor=\"let child of perk.perks\">\r\n          <ng-container *ngTemplateOutlet=\"tree; context: { perk: child, disabled: perk.level <= 0 }\"></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    .perk {\r\n      display: inline-block;\r\n      margin: 10px 5px;\r\n    }\r\n    .perk button {\r\n      transition: all 0.5s ease;\r\n    }\r\n    ::ng-deep .mat-fab .mat-button-wrapper {\r\n      padding: 0;\r\n      line-height: 0;\r\n    }\r\n    ::ng-deep .mat-fab .mat-button-wrapper .perk-image {\r\n      width: 100%;\r\n      height: auto;\r\n      border-radius: 50%;\r\n    }\r\n    .perk button:disabled {\r\n      filter: grayscale(100%);\r\n    }\r\n    .perks {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      order: 999;\r\n      justify-content: center;\r\n    }\r\n  `],\r\n})\r\nexport class PerkComponent {\r\n\r\n  @Input() perk: any;\r\n  @Input() disabled: boolean;\r\n  @Output() increasedPerk = new EventEmitter<number>();\r\n\r\n  @ViewChildren(MatTooltip) tooltips: QueryList<MatTooltip>;\r\n\r\n  increasePerk(perk: any): void {\r\n    if (perk.level < perk.max) {\r\n      perk.level++;\r\n      this.increasedPerk.emit(PERK_COST);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-plant',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.plant.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.plant.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.plant.costs' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"grey common\">\r\n          <div mat-list-avatar [matBadge]=\"tree.gems\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n          <div mat-line>{{ 'resource.gem.name' | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'resource.gem.description' | translate\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.plant.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"tree.gems > kingdomGem.quantity\" (click)=\"plant()\" cdkFocusInitial>{{ 'kingdom.plant.plant' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class PlantComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGem: any = this.store.selectSnapshot(AuthState.getKingdomGem);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public tree: any,\r\n    private dialogRef: MatDialogRef<PlantComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  close(reset: boolean = false): void {\r\n    this.dialogRef.close(reset);\r\n  }\r\n\r\n  async plant(): Promise<void> {\r\n    if (this.tree.gems <= this.kingdomGem.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const planted = await this.apiService.plantTree(this.uid, this.tree.branches, this.tree.gems);\r\n        this.notificationService.success('kingdom.tree.success', planted);\r\n        this.close(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tree.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.tree.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CityComponent } from './city/city.component';\r\nimport { CensusComponent } from './census/census.component';\r\nimport { ArmyComponent } from './army/army.component';\r\nimport { SorceryComponent } from './sorcery/sorcery.component';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { TempleComponent } from './temple/temple.component';\r\nimport { TavernComponent } from './tavern/tavern.component';\r\nimport { AuctionComponent } from './auction/auction.component';\r\nimport { EmporiumComponent } from './emporium/emporium.component';\r\nimport { ClanComponent } from './clan/clan.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'city', component: CityComponent },\r\n  { path: 'census', component: CensusComponent },\r\n  { path: 'army', component: ArmyComponent },\r\n  { path: 'sorcery', component: SorceryComponent },\r\n  { path: 'archive', component: ArchiveComponent },\r\n  { path: 'temple', component: TempleComponent },\r\n  { path: 'tavern', component: TavernComponent },\r\n  { path: 'auction', component: AuctionComponent },\r\n  { path: 'emporium', component: EmporiumComponent },\r\n  { path: 'clan', component: ClanComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class KingdomRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KingdomRoutingModule } from './kingdom-routing.module';\r\nimport { CityComponent } from './city/city.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CensusComponent } from './census/census.component';\r\nimport { ArmyComponent } from './army/army.component';\r\nimport { SorceryComponent } from './sorcery/sorcery.component';\r\nimport { ResearchComponent } from './sorcery/research.component';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { ReportComponent } from './archive/report.component';\r\nimport { TempleComponent } from './temple/temple.component';\r\nimport { OfferComponent } from './temple/offer.component';\r\nimport { TavernComponent } from './tavern/tavern.component';\r\nimport { AuctionComponent } from './auction/auction.component';\r\nimport { BuildComponent } from './city/build.component';\r\nimport { EmporiumComponent } from './emporium/emporium.component';\r\nimport { RecruitComponent } from './army/recruit.component';\r\nimport { DispelComponent } from './temple/dispel.component';\r\nimport { ActivateComponent } from './sorcery/activate.component';\r\nimport { ConjureComponent } from './sorcery/conjure.component';\r\nimport { BattleComponent } from './census/battle.component';\r\nimport { BidComponent } from './auction/bid.component';\r\nimport { TaxComponent } from './city/tax.component';\r\nimport { ChargeComponent } from './city/charge.component';\r\nimport { ExploreComponent } from './city/explore.component';\r\nimport { BuyComponent } from './emporium/buy.component';\r\nimport { DisbandComponent } from './army/disband.component';\r\nimport { DischargeComponent } from './tavern/discharge.component';\r\nimport { LetterComponent } from './census/letter.component';\r\nimport { TourMatMenuModule } from 'ngx-ui-tour-md-menu';\r\nimport { ClanComponent } from './clan/clan.component';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\nimport { FoundationComponent } from './clan/foundation.component';\r\nimport { ManifestComponent } from './clan/manifest.component';\r\nimport { DetailComponent } from './census/detail.component';\r\nimport { BreakComponent } from './temple/break.component';\r\nimport { PerkComponent } from './emporium/perk.component';\r\nimport { PlantComponent } from './emporium/plant.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CityComponent,\r\n    CensusComponent,\r\n    ArmyComponent,\r\n    SorceryComponent,\r\n    ResearchComponent,\r\n    ArchiveComponent,\r\n    ReportComponent,\r\n    TempleComponent,\r\n    OfferComponent,\r\n    TavernComponent,\r\n    AuctionComponent,\r\n    BuildComponent,\r\n    EmporiumComponent,\r\n    RecruitComponent,\r\n    DispelComponent,\r\n    ActivateComponent,\r\n    ConjureComponent,\r\n    BattleComponent,\r\n    BidComponent,\r\n    TaxComponent,\r\n    ChargeComponent,\r\n    ExploreComponent,\r\n    BuyComponent,\r\n    DisbandComponent,\r\n    DischargeComponent,\r\n    LetterComponent,\r\n    ClanComponent,\r\n    FoundationComponent,\r\n    ManifestComponent,\r\n    DetailComponent,\r\n    BreakComponent,\r\n    PerkComponent,\r\n    PlantComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    KingdomRoutingModule,\r\n    SharedModule,\r\n    TourMatMenuModule,\r\n    NgxCurrencyModule,\r\n  ],\r\n})\r\nexport class KingdomModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nexport enum ArtifactAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-activate',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.activate.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.activate.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.activate.artifact' | translate }}:</div>\r\n      <mat-form-field *ngIf=\"kingdomArtifacts\">\r\n        <mat-label>{{ 'kingdom.activate.select' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedArtifact\">\r\n          <mat-select-trigger *ngIf=\"selectedArtifact\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[selectedArtifact.item.faction.id, selectedArtifact.item.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"selectedArtifact.quantity\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"selectedArtifact.item.image\">\r\n                </div>\r\n                <div mat-line>{{ selectedArtifact.item.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"selectedArtifact.item.description | translate | icon:selectedArtifact.item\"></div>\r\n                <div mat-list-avatar [matBadge]=\"selectedArtifact.item.turns\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let artifact of kingdomArtifacts\" [value]=\"artifact\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\">\r\n                </div>\r\n                <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                <div mat-list-avatar [matBadge]=\"artifact.item.turns\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.activate.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!selectedArtifact\" (click)=\"activate()\">{{ 'kingdom.activate.activate' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class ActivateComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomArtifacts: any[] = [];\r\n  selectedArtifact: any = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public activation: {\r\n      artifact: any,\r\n      kingdom: any,\r\n    },\r\n    private dialogRef: MatDialogRef<ActivateComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/artifacts`, ref => ref.where('assignment', '==', ArtifactAssignmentType.NONE).where('item.battle', '==', false).where('item.self', '==', !this.activation.kingdom)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(artifacts => {\r\n      this.kingdomArtifacts = artifacts;\r\n      if (this.activation.artifact) this.selectedArtifact = this.kingdomArtifacts.find(artifact => artifact.fid === this.activation.artifact.fid);\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async activate() {\r\n    if (this.selectedArtifact.quantity && this.selectedArtifact.item.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const artifact = this.selectedArtifact; // copy because the artifact may be the last one and gets deleted from server\r\n        const activated = await this.apiService.activateArtifact(this.uid, this.selectedArtifact.fid, this.activation.kingdom ? this.activation.kingdom.fid : this.uid);\r\n        if (artifact.item.subtype === 'summon') this.notificationService.success('kingdom.activate.summon', activated);\r\n        if (artifact.item.subtype === 'resource') this.notificationService.success('kingdom.activate.resource', activated);\r\n        if (artifact.item.subtype === 'item') this.notificationService.success('kingdom.activate.item', activated);\r\n        if (artifact.item.subtype === 'spell') this.notificationService.success('kingdom.activate.spell', activated);\r\n        if (artifact.item.subtype === 'enchantment' && artifact.item.spells.length) this.notificationService.success('kingdom.activate.enchantment', activated);\r\n        if (artifact.item.subtype === 'enchantment' && !artifact.item.spells.length) this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.activate.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.activate.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nexport enum CharmAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-conjure',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.conjure.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.conjure.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.conjure.charm' | translate }}:</div>\r\n      <mat-list dense *ngIf=\"!kingdomCharms && selectedCharm\">\r\n        <mat-list-item [ngClass]=\"[selectedCharm.spell.faction.id, selectedCharm.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"selectedCharm.spell.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"selectedCharm.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ selectedCharm.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(selectedCharm.spell.type)\">{{ selectedCharm.spell.description | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'item'].includes(selectedCharm.spell.type)\" [innerHTML]=\"selectedCharm.spell.description | translate | icon:selectedCharm.spell\"></div>\r\n          <div mat-list-avatar [matBadge]=\"selectedCharm.spell.turnCost\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <mat-form-field *ngIf=\"kingdomCharms\">\r\n        <mat-label>{{ 'kingdom.conjure.select' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedCharm\">\r\n          <mat-select-trigger *ngIf=\"selectedCharm\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[selectedCharm.spell.faction.id, selectedCharm.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"selectedCharm.spell.level\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"selectedCharm.spell.image\">\r\n                </div>\r\n                <div mat-line>{{ selectedCharm.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(selectedCharm.spell.type)\">{{ selectedCharm.spell.description | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item'].includes(selectedCharm.spell.type)\" [innerHTML]=\"selectedCharm.spell.description | translate | icon:selectedCharm.spell\"></div>\r\n                <div mat-list-avatar [matBadge]=\"selectedCharm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let charm of kingdomCharms\" [value]=\"charm\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"charm.spell.level\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\">\r\n                </div>\r\n                <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(charm.spell.type)\">{{ charm.spell.description | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item'].includes(charm.spell.type)\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                <div mat-list-avatar [matBadge]=\"charm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"selectedCharm\">\r\n      <div matSubheader>{{ 'kingdom.conjure.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ selectedCharm.spell.manaCost | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ selectedCharm.spell.turnCost | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.conjure.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!selectedCharm\" (click)=\"conjure()\">{{ 'kingdom.conjure.conjure' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class ConjureComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n  kingdomCharms: any[] = null;\r\n  selectedCharm: any = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public conjuration: any,\r\n    private dialogRef: MatDialogRef<ConjureComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private angularFirestore: AngularFirestore,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/charms`, ref => ref.where('spell.battle', '==', false).where('spell.self', '==', !this.conjuration.kingdom)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(charms => {\r\n      this.kingdomCharms = charms;\r\n      if (this.conjuration.charm) this.selectedCharm = this.kingdomCharms.find(charm => charm.fid === this.conjuration.charm.fid);\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async conjure() {\r\n    if (this.selectedCharm.spell.turnCost <= this.kingdomTurn.quantity && this.selectedCharm.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const conjured = await this.apiService.conjureCharm(this.uid, this.selectedCharm.fid, this.conjuration.kingdom ? this.conjuration.kingdom.fid : this.uid);\r\n        if (this.selectedCharm.spell.subtype === 'summon') this.notificationService.success('kingdom.conjure.summon', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'resource') this.notificationService.success('kingdom.conjure.resource', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'item') this.notificationService.success('kingdom.conjure.item', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'spell') this.notificationService.success('kingdom.conjure.spell', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'enchantment' && !this.selectedCharm.spell.multiple) this.notificationService.success('kingdom.conjure.enchantment', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'enchantment' && this.selectedCharm.spell.multiple) this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.conjure.error');\r\n      }\r\n    } else {\r\n      this.notificationService.error('kingdom.conjure.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-research',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.research.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.research.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.research.charm' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"charm.spell.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"charm.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ charm.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n          <div mat-line *ngIf=\"charm.turns < charm.spell.turnResearch\">\r\n            <mat-progress-bar [value]=\"charm.turns * 100 / charm.spell.turnResearch\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"((charm.turns) | long) + ' / ' + (charm.spell.turnResearch | long)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.research.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.research.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.research.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.research.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"research()\">{{ 'kingdom.research.research' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ResearchComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  form: FormGroup = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public charm: any,\r\n    private dialogRef: MatDialogRef<ResearchComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async research() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const researched = await this.apiService.researchCharm(this.uid, this.charm.fid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.research.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.research.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.research.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ResearchComponent } from './research.component';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ConjureComponent, CharmAssignmentType } from './conjure.component';\r\nimport { ActivateComponent, ArtifactAssignmentType } from './activate.component';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sorcery',\r\n  templateUrl: './sorcery.component.html',\r\n  styleUrls: ['./sorcery.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class SorceryComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  kingdomArtifacts: any[] = [];\r\n  attackArtifacts: any[] = [];\r\n  defenseArtifacts: any[] = [];\r\n  maximumArtifacts: number = 1;\r\n\r\n  kingdomCharms: any[] = [];\r\n  attackCharms: any[] = [];\r\n  defenseCharms: any[] = [];\r\n  maximumCharms: number = 1;\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/artifacts`).valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/charms`).valueChanges({ idField: 'fid' }),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([artifacts, charms]) => {\r\n      this.kingdomArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.NONE || !artifact.assignment).sort((a, b) => a.item.battle === b.item.battle ? 0 : a.item.battle ? -1 : 1);\r\n      this.attackArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.ATTACK);\r\n      this.defenseArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.DEFENSE);\r\n      this.kingdomCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.NONE || !charm.assignment).sort((a, b) => (a.turns >= a.spell.research) === (b.turns >= b.spell.research) ? 0 : (a.turns >= a.spell.research) ? -1 : 1);\r\n      this.attackCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.ATTACK);\r\n      this.defenseCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.DEFENSE);\r\n    });\r\n  }\r\n\r\n  async assignArtifact($event: CdkDragDrop<any>) {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      if ($event.container && $event.previousContainer === $event.container) {\r\n        moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n      } else {\r\n        if ($event.container && (Number($event.container.id) === 0 || $event.container.data.length < this.maximumArtifacts)) {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          await this.apiService.assignArtifact(this.uid, $event.item.element.nativeElement.id, Number($event.container.id)); // ids 0,1,2\r\n          this.notificationService.success('kingdom.sorcery.success');\r\n        } else {\r\n          this.notificationService.error('kingdom.sorcery.maximum');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.sorcery.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  async assignCharm($event: CdkDragDrop<any>) {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      if ($event.container && $event.previousContainer === $event.container) {\r\n        moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n      } else {\r\n        if ($event.container && (Number($event.container.id) === 3 || $event.container.data.length < this.maximumCharms)) {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          await this.apiService.assignCharm(this.uid, $event.item.element.nativeElement.id, Number($event.container.id) - 3); // ids 3,4,5\r\n          this.notificationService.success('kingdom.sorcery.success');\r\n        } else {\r\n          this.notificationService.error('kingdom.sorcery.maximum');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.sorcery.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  openResearchDialog(charm: any): void {\r\n    const dialogRef = this.dialog.open(ResearchComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: charm,\r\n    });\r\n  }\r\n\r\n  openConjureDialog(charm: any): void {\r\n    const dialogRef = this.dialog.open(ConjureComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        charm: charm,\r\n        kingdom: null,\r\n      },\r\n    });\r\n  }\r\n\r\n  openActivateDialog(artifact: any): void {\r\n    const dialogRef = this.dialog.open(ActivateComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        artifact: artifact,\r\n        kingdom: null,\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-sorcery\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/sorcery.png\" [alt]=\"'kingdom.sorcery.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.sorcery.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.sorcery.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.sorcery')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_9_plus</mat-icon>{{ 'kingdom.sorcery.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n        <div tourAnchor=\"tour.sorcery\">\r\n          <mat-action-list dense class=\"dotted\" id=\"0\" #kngdmArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[atckArtifacts, defArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"kingdomArtifacts\">\r\n            <button mat-list-item *ngFor=\"let artifact of kingdomArtifacts\" cdkDrag [cdkDragDisabled]=\"!artifact.item.battle\" [ngClass]=\"[artifact.item.faction.id, artifact.item.battle ? 'handle' : '', artifact.item.legendary ? 'legendary': 'common']\" [id]=\"artifact.fid\" (click)=\"!artifact.item.battle && artifact.item.self ? openActivateDialog(artifact) : null\" [disabled]=\"!artifact.item.battle && !artifact.item.self\">\r\n              <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n              </div>\r\n              <div mat-line>{{ artifact.item.name | translate }}</div>\r\n              <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\">\r\n              </div>\r\n              <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n              <div mat-list-avatar *ngIf=\"!artifact.item.battle\" [matBadge]=\"artifact.item.turns\" matBadgePosition=\"above after\">\r\n                <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n              </div>\r\n            </button>\r\n          </mat-action-list>\r\n\r\n          <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n          <mat-action-list dense class=\"dotted\" id=\"3\" #kngdmCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[atckCharms, defCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"kingdomCharms\">\r\n            <button mat-list-item *ngFor=\"let charm of kingdomCharms\" cdkDrag [cdkDragDisabled]=\"!charm.spell.battle || !charm.completed\" [ngClass]=\"[charm.spell.faction.id, charm.spell.battle && charm.completed ? 'handle' : '', charm.spell.legendary ? 'legendary' : 'common']\" (click)=\"!charm.completed ? openResearchDialog(charm) : !charm.spell.battle ? openConjureDialog(charm) : null\" [id]=\"charm.fid\" [disabled]=\"!charm.spell.battle && !charm.spell.self\">\r\n              <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n              </div>\r\n              <div mat-line>{{ charm.spell.name | translate }}</div>\r\n              <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n              <div mat-line *ngIf=\"!charm.completed\">\r\n                <mat-progress-bar [value]=\"charm.turns * 100 / charm.spell.turnResearch\"></mat-progress-bar>\r\n              </div>\r\n              <mat-icon *ngIf=\"charm.spell.battle && charm.completed\">open_with</mat-icon>\r\n              <div mat-list-avatar *ngIf=\"!charm.spell.battle || !charm.completed\" [matBadge]=\"!charm.completed ? ((charm.turns) | long) + ' / ' + (charm.spell.turnResearch | long) : charm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n              </div>\r\n            </button>\r\n          </mat-action-list>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.sorcery.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/arcanism.png\" [alt]=\"'kingdom.arcanism.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.arcanism.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.arcanism.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.arcanism')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_1</mat-icon>{{ 'kingdom.arcanism.max' | translate }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n            <div tourAnchor=\"tour.arcanism\">\r\n              <mat-list dense class=\"dotted\" id=\"1\" #atckArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmArtifacts, defArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"attackArtifacts\">\r\n                <mat-list-item *ngFor=\"let artifact of attackArtifacts\" cdkDrag class=\"handle\" [id]=\"artifact.fid\" [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary': 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                  <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n\r\n              <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n              <mat-list dense class=\"dotted\" id=\"4\" #atckCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmCharms, defCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"attackCharms\">\r\n                <mat-list-item *ngFor=\"let charm of attackCharms\" cdkDrag class=\"handle\" [id]=\"charm.fid\" [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                  <mat-icon>open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.arcanism.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/protection.png\" [alt]=\"'kingdom.protection.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.protection.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.protection.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.protection')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_1</mat-icon>{{ 'kingdom.protection.max' | translate }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n            <div tourAnchor=\"tour.protection\">\r\n              <mat-list dense class=\"dotted\" id=\"2\" #defArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmArtifacts, atckArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"defenseArtifacts\">\r\n                <mat-list-item *ngFor=\"let artifact of defenseArtifacts\" cdkDrag class=\"handle\" [id]=\"artifact.fid\" [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                  <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n\r\n              <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n              <mat-list dense class=\"dotted\" id=\"5\" #defCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmCharms, atckCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"defenseCharms\">\r\n                <mat-list-item *ngFor=\"let charm of defenseCharms\" cdkDrag class=\"handle\" [id]=\"charm.fid\" [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                  <mat-icon>open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.protection.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-discharge',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.discharge.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.discharge.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.discharge.contract' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"contract.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"contract.hero.image\">\r\n          </div>\r\n          <div mat-line>{{ contract.hero.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n          <div mat-list-avatar [matBadge]=\"0\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.discharge.maintenances' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.goldMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldMaintenance' | translate:{ number: (contract.hero.goldMaintenance * contract.level) | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.manaMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaMaintenance' | translate:{ number: (contract.hero.manaMaintenance * contract.level) | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.populationMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationMaintenance' | translate:{ number: (contract.hero.populationMaintenance * contract.level) | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.discharge.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"discharge()\" cdkFocusInitial>{{ 'kingdom.discharge.discharge' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class DischargeComponent {\r\n\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public contract: any,\r\n    private dialogRef: MatDialogRef<DischargeComponent>,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async discharge() {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const discharged = await this.apiService.dischargeContract(this.uid, this.contract.fid);\r\n      this.notificationService.success('kingdom.discharge.success', discharged);\r\n      this.close();\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.discharge.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { DischargeComponent } from './discharge.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\nexport enum ContractAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\nconst MAXIMUM_CONTRACTS = 3;\r\n\r\n@Component({\r\n  selector: 'app-tavern',\r\n  templateUrl: './tavern.component.html',\r\n  styleUrls: ['./tavern.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class TavernComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  kingdomContracts: any[] = [];\r\n  attackContracts: any[] = [];\r\n  defenseContracts: any[] = [];\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/contracts`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(contracts => {\r\n      this.kingdomContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.NONE || !contract.assignment);\r\n      this.attackContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.ATTACK);\r\n      this.defenseContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.DEFENSE);\r\n    });\r\n  }\r\n\r\n  async assignContract($event: CdkDragDrop<any>) {\r\n    if ([0, 3].includes(Number($event.container.id)) || $event.container.data.length < MAXIMUM_CONTRACTS) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        if ($event.previousContainer === $event.container) {\r\n          // moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n        } else {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          const assigned = await this.apiService.assignContract(this.uid, $event.item.element.nativeElement.id, Number($event.container.id));\r\n          this.notificationService.success('kingdom.tavern.success');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tavern.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.warning('kingdom.tavern.maximum');\r\n    }\r\n  }\r\n\r\n  openDischargeDialog(troop: any): void {\r\n    const dialogRef = this.dialog.open(DischargeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: troop,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-tavern\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" cdkDropListGroup [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/tavern.png\" [alt]=\"'kingdom.tavern.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.tavern.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.tavern.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.tavern')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_9_plus</mat-icon>{{ 'kingdom.tavern.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-action-list dense class=\"dotted\" tourAnchor=\"tour.tavern\" id=\"0\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"kingdomContracts\">\r\n          <button mat-list-item *ngFor=\"let contract of kingdomContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" (click)=\"openDischargeDialog(contract)\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"contract.hero.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.tavern.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/leadership.png\" [alt]=\"'kingdom.leadership.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.leadership.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.leadership.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.leadership')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_3</mat-icon>{{ 'kingdom.leadership.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-list dense class=\"dotted\" id=\"1\" tourAnchor=\"tour.leadership\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"attackContracts\">\r\n          <mat-list-item *ngFor=\"let contract of attackContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"contract.hero.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.leadership.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/guard.png\" [alt]=\"'kingdom.guard.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.guard.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.guard.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.guard')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_3</mat-icon>{{ 'kingdom.guard.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-list dense class=\"dotted\" id=\"2\" tourAnchor=\"tour.guard\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"defenseContracts\">\r\n          <mat-list-item *ngFor=\"let contract of defenseContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.guard.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-break',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.break.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.break.help' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.break.from' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[enchantment.from.faction.id, enchantment.from.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"enchantment.from.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ enchantment.from.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ enchantment.from.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.break.enchantment' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item (click)=\"break()\" [ngClass]=\"[enchantment.spell.faction.id, enchantment.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"enchantment.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar [src]=\"enchantment.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ enchantment.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"enchantment.spell.description | translate | icon:enchantment.spell\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [color]=\"enchantment.from.id === uid ? 'accent' : 'warn'\" [value]=\"enchantment.turns * 100 / enchantment.spell.turnDuration\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"enchantment.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.break.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ enchantment.spell.manaCost | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.break.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"break()\" cdkFocusInitial>{{ 'kingdom.break.break' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BreakComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public enchantment: any,\r\n    private dialogRef: MatDialogRef<BreakComponent>,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private loadingService: LoadingService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async break() {\r\n    if (this.enchantment.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const broken = await this.apiService.breakEnchantment(this.uid, this.enchantment.fid);\r\n        this.notificationService.success('kingdom.break.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.break.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.break.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-dispel',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.dispel.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.dispel.help' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.dispel.to' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[incantation.to.faction.id, incantation.to.id === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"incantation.to.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ incantation.to.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ incantation.to.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.dispel.incantation' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item (click)=\"dispel()\" [ngClass]=\"[incantation.spell.faction.id, incantation.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"incantation.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar [src]=\"incantation.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ incantation.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"incantation.spell.description | translate | icon:incantation.spell\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [color]=\"incantation.to.id === uid ? 'accent' : 'warn'\" [value]=\"incantation.turns * 100 / incantation.spell.turnDuration\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"incantation.turns\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.dispel.maintenances' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.goldMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldMaintenance' | translate:{ number: incantation.spell.goldMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.manaMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaMaintenance' | translate:{ number: incantation.spell.manaMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.populationMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationMaintenance' | translate:{ number: incantation.spell.populationMaintenance | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.dispel.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"dispel()\" cdkFocusInitial>{{ 'kingdom.dispel.dispel' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class DispelComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public incantation: any,\r\n    private dialogRef: MatDialogRef<DispelComponent>,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private loadingService: LoadingService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async dispel() {\r\n    if (this.incantation.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const dispelled = await this.apiService.dispelIncantation(this.uid, this.incantation.fid);\r\n        this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.dispel.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.dispel.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-offer',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.offer.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.offer.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.offer.god' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"grey legendary\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar class=\"god-avatar\" [src]=\"god.image\">\r\n          </div>\r\n          <div mat-line>{{ god.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"god.description | translate | icon:god\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [value]=\"god.sacrifice * 100 / (god.gold || god.mana || god.population || god.land || god.turn)\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"(god.sacrifice | short) + ' / ' + ((god.gold || god.mana || god.population || god.land || god.turn) | short)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar [src]=\"god.gold ? '/assets/images/resources/gold.png' : god.mana ? '/assets/images/resources/mana.png' : god.population ? '/assets/images/resources/population.png' : god.land ? '/assets/images/resources/land.png' : '/assets/images/resources/turn.png'\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.offer.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.offer.sacrifice' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'kingdom.offer.sacrifice' | translate }}\" matInput formControlName=\"sacrifice\">\r\n          <mat-hint>{{ 'kingdom.offer.hint' | translate:{ increment: god.increment | long } }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.offer.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.offer.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.gold > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.mana > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.population > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.land > 0\"><img class=\"icon\" src=\"/assets/images/resources/land.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.turn > 0\"><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ god.increment | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.offer.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"offer()\">{{ 'kingdom.offer.offer' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    .god-avatar {\r\n      border-radius: 4px !important;\r\n    }\r\n  `],\r\n})\r\nexport class OfferComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n  kingdomPopulation: any = this.store.selectSnapshot(AuthState.getKingdomPopulation);\r\n  kingdomLand: any = this.store.selectSnapshot(AuthState.getKingdomLand);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public god: any,\r\n    private dialogRef: MatDialogRef<OfferComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const max = this.god.gold\r\n      ? this.kingdomGold.quantity\r\n      : this.god.mana\r\n        ? this.kingdomMana.quantity\r\n        : this.god.population\r\n          ? this.kingdomPopulation.quantity\r\n          : this.god.land\r\n            ? this.kingdomLand.quantity\r\n            : this.kingdomTurn.quantity;\r\n    this.form = this.formBuilder.group({\r\n      sacrifice: [this.god.increment, [Validators.required, Validators.min(this.god.increment), Validators.max(max)]],\r\n    });\r\n    this.form.markAllAsTouched();\r\n    this.form.get('sacrifice').updateValueAndValidity();\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async offer() {\r\n    if (this.form.valid) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const offered = await this.apiService.offerGod(this.uid, this.god.fid, this.form.value.sacrifice);\r\n        if (offered.hasOwnProperty('hero')) this.notificationService.success('kingdom.temple.hero', offered);\r\n        if (offered.hasOwnProperty('item')) this.notificationService.success('kingdom.temple.item', offered);\r\n        if (offered.hasOwnProperty('enchantment')) this.notificationService.success('kingdom.temple.enchantment', offered);\r\n        if (offered.hasOwnProperty('unit')) this.notificationService.success('kingdom.temple.unit', offered);\r\n        if (offered.hasOwnProperty('gold')) this.notificationService.success('kingdom.temple.gold', offered);\r\n        if (offered.hasOwnProperty('mana')) this.notificationService.success('kingdom.temple.mana', offered);\r\n        if (offered.hasOwnProperty('population')) this.notificationService.success('kingdom.temple.population', offered);\r\n        if (offered.hasOwnProperty('land')) this.notificationService.success('kingdom.temple.land', offered);\r\n        if (offered.hasOwnProperty('spell')) this.notificationService.success('kingdom.temple.spell', offered);\r\n        if (offered.hasOwnProperty('building')) this.notificationService.success('kingdom.temple.building', offered);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.offer.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.offer.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OfferComponent } from './offer.component';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { DispelComponent } from './dispel.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { BreakComponent } from './break.component';\r\n\r\n@Component({\r\n  selector: 'app-temple',\r\n  templateUrl: './temple.component.html',\r\n  styleUrls: ['./temple.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class TempleComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGods: any[] = [];\r\n  kingdomEnchantments: any[] = [];\r\n  kingdomIncantations: any[] = [];\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>('gods').valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/enchantments`).valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/incantations`).valueChanges({ idField: 'fid' }),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([gods, enchantments, incantations]) => {\r\n      this.kingdomGods = gods;\r\n      this.kingdomEnchantments = enchantments.sort((a: any, b: any) => a.turns - b.turns);\r\n      this.kingdomIncantations = incantations.sort((a: any, b: any) => a.turns - b.turns);\r\n    });\r\n  }\r\n\r\n  openOfferDialog(god: any): void {\r\n    const dialogRef = this.dialog.open(OfferComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: god,\r\n    });\r\n  }\r\n\r\n  openDispelDialog(enchantment: any): void {\r\n    const dialogRef = this.dialog.open(DispelComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: enchantment,\r\n    });\r\n  }\r\n\r\n  openBreakDialog(incantation: any): void {\r\n    const dialogRef = this.dialog.open(BreakComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: incantation,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-temple\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/temple.png\" [alt]=\"'kingdom.temple.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.temple.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.temple.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.temple')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>notifications</mat-icon>{{ kingdomGods.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.gods' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.temple\">\r\n          <button mat-list-item *ngFor=\"let god of kingdomGods\" [disabled]=\"god.armageddon\" (click)=\"openOfferDialog(god)\" class=\"grey legendary\">\r\n            <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite squared\" [src]=\"god.image\" [alt]=\"god.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ god.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"god.description | translate | icon:god\"></div>\r\n            <div mat-line>\r\n              <mat-progress-bar [value]=\"god.sacrifice * 100 / (god.gold || god.mana || god.population || god.land || god.turn)\"></mat-progress-bar>\r\n            </div>\r\n            <div mat-list-avatar [matBadge]=\"god.armageddon ? null : (god.sacrifice | short) + ' / ' + ((god.gold || god.mana || god.population || god.land || god.turn) | short)\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"god.armageddon ? '/assets/images/spells/grey/armageddon.png' : god.gold ? '/assets/images/resources/gold.png' : god.mana ? '/assets/images/resources/mana.png' : god.population ? '/assets/images/resources/population.png' : god.land ? '/assets/images/resources/land.png' : '/assets/images/resources/turn.png'\" [alt]=\"'spell.armageddon.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.temple.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/break.png\" [alt]=\"'kingdom.break.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.break.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.break.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.break')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>trending_down</mat-icon>{{ kingdomEnchantments.length | long }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.enchantments' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.break\">\r\n              <button mat-list-item *ngFor=\"let enchantment of kingdomEnchantments\" (click)=\"openBreakDialog(enchantment)\" [ngClass]=\"[enchantment.spell.faction.id, enchantment.spell.legendary ? 'legendary' : 'common']\" [disabled]=\"enchantment.from.id === uid\">\r\n                <div mat-list-avatar [matBadge]=\"enchantment.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"enchantment.spell.image\" [alt]=\"enchantment.spell.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ enchantment.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"enchantment.spell.description | translate | icon:enchantment.spell\"></div>\r\n                <div mat-line>\r\n                  <mat-progress-bar [color]=\"enchantment.from.id === uid ? 'accent' : 'warn'\" [value]=\"enchantment.turns * 100 / enchantment.spell.turnDuration\"></mat-progress-bar>\r\n                </div>\r\n                <div mat-list-avatar [matBadge]=\"enchantment.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.break.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/dispel.png\" [alt]=\"'kingdom.dispel.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.dispel.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.dispel.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.dispel')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>trending_up</mat-icon>{{ kingdomIncantations.length | long }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.incantations' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.dispel\">\r\n              <button mat-list-item *ngFor=\"let incantation of kingdomIncantations\" (click)=\"openDispelDialog(incantation)\" [ngClass]=\"[incantation.spell.faction.id, incantation.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"incantation.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"incantation.spell.image\" [alt]=\"incantation.spell.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ incantation.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"incantation.spell.description | translate | icon:incantation.spell\"></div>\r\n                <div mat-line>\r\n                  <mat-progress-bar [color]=\"incantation.to.id === uid ? 'accent' : 'warn'\" [value]=\"incantation.turns * 100 / incantation.spell.turnDuration\"></mat-progress-bar>\r\n                </div>\r\n                <div mat-list-avatar [matBadge]=\"incantation.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.dispel.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///"}