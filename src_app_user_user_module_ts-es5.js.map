{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_6__","ctx_r11","family_r46","skill_r47","category_r48","category_r51","row_r34","family_r76","skill_r77","category_r78","category_r81","example_r66","EncyclopediaComponent","cacheService","translateService","dialog","tutorialService","name","type","value","faction","options","_angular_material_table__WEBPACK_IMPORTED_MODULE_7__","Promise","all","getSkills","getUnits","getSpells","getItems","getGods","getStructures","getHeroes","getResources","getFamilies","getCategories","getGuilds","getAttacks","getLocations","getStores","getPerks","data","reduce","a","b","concat","table","paginator","sort","sortingDataAccessor","obj","property","instant","filters","id","image","getFactions","legendary","Array","types","Set","map","row","subtypes","filter","subtype","index","array","findIndex","element","localeCompare","filterPredicate","createFilter","applyFilter","topics","surname","examples","item","includes","suffix","description","JSON","stringify","normalize","filterFunction","parse","toLowerCase","replace","length","every","tome","dialogRef","open","_tome_component__WEBPACK_IMPORTED_MODULE_0__","panelClass","pageSize","pageSizeOptions","pageIndex","active","direction","start","disableClear","selectors","viewQuery","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_11__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_12__","ctx","duration","delay","LandingComponent","domService","_angular_core__WEBPACK_IMPORTED_MODULE_3__","decls","vars","consts","template","ctx_r9","ctx_r19","_r17","LegendComponent","store","angularFirestore","selectSnapshot","src_app_shared_auth_auth_state__WEBPACK_IMPORTED_MODULE_0__","clan","timestamp","collection","valueChanges","idField","pipe","subscribe","legends","moment__WEBPACK_IMPORTED_MODULE_1__","toMillis","isBetween","startOf","endOf","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_10__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_11__","GeolocationComponent","close","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","LoginComponent","angularFireAuth","formBuilder","notificationService","apiService","loadingService","createForm","factions","form","group","email","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","username","password","password2","matchValues","$event","_geolocation_component__WEBPACK_IMPORTED_MODULE_1__","matchTo","control","parent","controls","isMatching","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","valid","startLoading","signInWithEmailAndPassword","position","createUserWithEmailAndPassword","credentials","populateMap","coords","latitude","longitude","createKingdom","user","uid","sendPasswordResetEmail","warning","signOut","console","error","stopLoading","dispatch","src_app_shared_auth_auth_actions__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_landing_landing_component__WEBPACK_IMPORTED_MODULE_1__","_encyclopedia_encyclopedia_component__WEBPACK_IMPORTED_MODULE_0__","UserRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","imports","exports","UserModule","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_user_routing_module__WEBPACK_IMPORTED_MODULE_0__","ngx_ui_tour_md_menu__WEBPACK_IMPORTED_MODULE_11__","ngx_disqus__WEBPACK_IMPORTED_MODULE_12__","declarations","_login_login_component__WEBPACK_IMPORTED_MODULE_2__","_encyclopedia_encyclopedia_component__WEBPACK_IMPORTED_MODULE_3__","_encyclopedia_tome_component__WEBPACK_IMPORTED_MODULE_4__","_landing_landing_component__WEBPACK_IMPORTED_MODULE_5__","_legend_legend_component__WEBPACK_IMPORTED_MODULE_6__","_login_geolocation_component__WEBPACK_IMPORTED_MODULE_7__"],"sources":["webpack:///src/app/user/encyclopedia/encyclopedia.component.html","webpack:///src/app/user/encyclopedia/encyclopedia.component.ts","webpack:///src/app/user/landing/landing.component.ts","webpack:///src/app/user/landing/landing.component.html","webpack:///src/app/user/legend/legend.component.html","webpack:///src/app/user/legend/legend.component.ts","webpack:///src/app/user/login/geolocation.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts"],"sourcesContent":["<div class=\"user-encyclopedia\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"table-responsive\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/encyclopedia.png\" [alt]=\"'kingdom.encyclopedia.name' | translate\">\r\n        <mat-card-title>{{ 'user.encyclopedia.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'user.encyclopedia.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.encyclopedia')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>description</mat-icon>{{ table.data.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <p>{{ 'user.encyclopedia.help' | translate }}</p>\r\n        <table mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\" [dataSource]=\"table\" tourAnchor=\"tour.encyclopedia\" [attr.aria-label]=\"'kingdom.encyclopediaame' | translate\">\r\n          <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n              <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\" type=\"search\">\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'select'\">\r\n                <mat-select [(ngModel)]=\"filters[column].value\" (selectionChange)=\"applyFilter()\">\r\n                  <mat-option *ngFor=\"let option of filters[column].options\" [value]=\"option\">\r\n                    <mat-list dense>\r\n                      <mat-list-item [ngClass]=\"option.id\">\r\n                        <div mat-list-avatar>\r\n                          <img mat-list-avatar [src]=\"option.image\" [alt]=\"option.name | translate\">\r\n                        </div>\r\n                        <div mat-line>{{ option.name | translate }}</div>\r\n                      </mat-list-item>\r\n                    </mat-list>\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'multiple'\">\r\n                <mat-select [(ngModel)]=\"filters[column].value\" (selectionChange)=\"applyFilter()\" multiple>\r\n                  <mat-option *ngFor=\"let option of filters[column].options\" [value]=\"option.value\">\r\n                    <mat-chip-list>\r\n                      <mat-chip color=\"primary\" selected [ngClass]=\"option.name.includes('legendary') ? 'legendary' : ''\">\r\n                        <img class=\"icon\" [src]=\"option.name.includes('legendary') ? '/assets/images/icons/legendary.png' : '/assets/images/icons/type.png'\" [alt]=\"option.name | translate\">{{ option.name | translate }}\r\n                      </mat-chip>\r\n                    </mat-chip-list>\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let row\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n              <ng-template [ngIf]=\"column === 'name'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"[row.faction.id, (row | legendary) ? 'legendary' : 'common']\">\r\n                    <div mat-list-avatar [matBadge]=\"row.level || '?'\" matBadgePosition=\"above before\">\r\n                      <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"row.image\" [ngClass]=\"row.type === 'god' ? 'squared' : ''\" [alt]=\"row.name | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ row.name | translate }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\" *ngIf=\"row.type !== 'unit'\" [innerHTML]=\"row.description | translate | icon:row\"></div>\r\n                    <div mat-line class=\"mat-card-subtitle\" *ngIf=\"row.type === 'unit'\">\r\n                      <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of row.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n                      <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of row.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n                      <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of row.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n                      <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"row.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n                    </div>\r\n                    <div mat-line class=\"mat-card-subtitle\" *ngIf=\"row.type === 'unit' && row.resistances && row.resistances.length\">\r\n                      <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of row.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n                    </div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'faction'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"row.faction.id\">\r\n                    <div mat-list-avatar>\r\n                      <img mat-list-avatar [src]=\"row.faction.image\" [alt]=\"row.faction.name | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ row.faction.name | translate }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"row.faction.description | translate | icon:row.faction\"></div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'type'\">\r\n                <mat-chip-list>\r\n                  <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/icons/type.png\" [alt]=\"'type.' + row.type + '.name' | translate\">{{ 'type.' + row.type + '.name'  | translate }}</mat-chip>\r\n                  <mat-chip color=\"primary\" selected *ngIf=\"row.subtype\"><img class=\"icon\" src=\"/assets/images/icons/type.png\" [alt]=\"'type.' + row.subtype + '.name' | translate\">{{ 'type.' + row.subtype + '.name'  | translate }}</mat-chip>\r\n                  <mat-chip color=\"primary\" selected *ngIf=\"row.legendary\" class=\"legendary\"><img class=\"icon\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">{{ 'category.legendary.name' | translate }}</mat-chip>\r\n                </mat-chip-list>\r\n              </ng-template>\r\n\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let tome; columns: columns;\" (click)=\"openTomeDialog(tome)\"></mat-row>\r\n        </table>\r\n\r\n        <mat-toolbar>\r\n          <mat-toolbar-row>\r\n            <button mat-mini-fab color=\"primary\" (click)=\"clearFilter()\"><mat-icon>clear</mat-icon></button>\r\n            <span class=\"fill-space\"></span>\r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" *ngFor=\"let topic, let i = index of topics\" [attr.id]=\"i === 0 ? 'help' : ''\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar [src]=\"'/assets/images/cards/' + topic.name + '.png'\" [alt]=\"topic.name | translate\">\r\n        <mat-card-title>{{ topic.surname + '.' + topic.name + '.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ topic.surname + '.' + topic.name + '.description' | translate }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <mat-list dense>\r\n          <ng-container *ngFor=\"let example of topic.examples\">\r\n            <mat-list-item [ngClass]=\"[example.faction.id, example.legendary ? 'legendary' : 'common']\">\r\n              <div mat-list-avatar [matBadge]=\"example.type === 'report' ? '!' : '?'\" matBadgePosition=\"above before\">\r\n                <img mat-list-avatar [src]=\"example.image\" [ngClass]=\"example.type === 'god' ? 'squared' : ''\" [alt]=\"example.name | translate\">\r\n              </div>\r\n              <div mat-line>{{ example.name | translate }}</div>\r\n              <div mat-line class=\"mat-card-subtitle\" *ngIf=\"example.type !== 'unit'\" [innerHTML]=\"example.description | translate | icon:example\"></div>\r\n              <div mat-line class=\"mat-card-subtitle\" *ngIf=\"example.type === 'unit'\">\r\n                <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of example.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n                <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of example.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n                <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of example.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n                <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"example.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n              </div>\r\n              <div mat-line class=\"mat-card-subtitle\" *ngIf=\"example.type === 'unit' && example.resistances && example.resistances.length\">\r\n                <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of example.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n              </div>\r\n              <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\" *ngIf=\"topic.suffix\">\r\n                <img mat-list-avatar [src]=\"topic.suffix\" [alt]=\"'type.resource.name' | translate\">\r\n              </div>\r\n            </mat-list-item>\r\n          </ng-container>\r\n        </mat-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"topic.surname + '.' + topic.name + '.tour' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" id=\"changelog\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/changelog.png\" [alt]=\"'user.changelog.name' | translate\">\r\n        <mat-card-title>{{ 'user.changelog.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'user.changelog.description' | translate }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>{{ 'user.changelog.help' | translate }}</p>\r\n        <mat-accordion class=\"example-headers-align\">\r\n          <mat-expansion-panel [expanded]=\"false\">\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>Version 1.0.0</mat-panel-title>\r\n              <mat-panel-description>Alfa</mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <ul>\r\n              <li>Test</li>\r\n              <li>Test</li>\r\n              <li>Test</li>\r\n              <li>Test</li>\r\n            </ul>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" id=\"bonfire\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/bonfire.png\" [alt]=\"'user.bonfire.name' | translate\">\r\n        <mat-card-title>{{ 'user.bonfire.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'user.bonfire.description' | translate }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>{{ 'user.bonfire.help' | translate }}</p>\r\n        <disqus identifier=\"/help\"></disqus>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TomeComponent } from './tome.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-encyclopedia',\r\n  templateUrl: './encyclopedia.component.html',\r\n  styleUrls: ['./encyclopedia.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\nexport class EncyclopediaComponent implements OnInit {\r\n\r\n  search: string = '';\r\n  columns: string[] = [\r\n    'name',\r\n    'faction',\r\n    'type',\r\n  ];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    faction: {\r\n      type: 'select',\r\n      value: '',\r\n      options: [],\r\n    },\r\n    type: {\r\n      type: 'multiple',\r\n      value: [],\r\n      options: [],\r\n    },\r\n  };\r\n  table: MatTableDataSource<any> = new MatTableDataSource([]);\r\n  topics: any[] = [];\r\n\r\n  constructor(\r\n    private cacheService: CacheService,\r\n    private translateService: TranslateService,\r\n    private dialog: MatDialog,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let data = await Promise.all([\r\n      this.cacheService.getSkills(),\r\n      this.cacheService.getUnits(),\r\n      this.cacheService.getSpells(),\r\n      this.cacheService.getItems(),\r\n      this.cacheService.getGods(),\r\n      this.cacheService.getStructures(),\r\n      this.cacheService.getHeroes(),\r\n      this.cacheService.getResources(),\r\n      this.cacheService.getFamilies(),\r\n      this.cacheService.getCategories(),\r\n      this.cacheService.getGuilds(),\r\n      this.cacheService.getAttacks(),\r\n      this.cacheService.getLocations(),\r\n      this.cacheService.getStores(),\r\n      this.cacheService.getPerks(),\r\n    ]);\r\n    data = data.reduce((a: any[], b: any) => a.concat(b), []);\r\n    this.table = new MatTableDataSource(data);\r\n    this.table.paginator = this.paginator;\r\n    this.table.sort = this.sort;\r\n    this.table.sortingDataAccessor = (obj, property) => {\r\n      if (property === 'name') return this.translateService.instant(obj['name']);\r\n      if (property === 'faction') return this.translateService.instant(obj['faction']['name']);\r\n      if (property === 'type') return this.translateService.instant(`type.${obj['type']}.name`);\r\n      return obj[property];\r\n    };\r\n    this.filters.faction.options = this.filters.faction.options.concat(\r\n      [{ id: '', name: 'table.filter.any', image: '/assets/images/factions/grey.png' }],\r\n      await this.cacheService.getFactions(),\r\n    );\r\n    this.filters.faction.value = this.filters.faction.options[0];\r\n    const legendary = new Array({ name: 'category.legendary.name', value: true });\r\n    const types = [...new Set(data.map((row: any) => row.type))].map((type: string) => ({ name: `type.${type}.name`, value: type }));\r\n    const subtypes = [...new Set(data.filter((row: any) => row.subtype).map((row: any) => row.subtype))].map((subtype: string) => ({ name: `type.${subtype}.name`, value: subtype }));\r\n    this.filters.type.options = [legendary, types, subtypes]\r\n    .reduce((a: any[], b: any) => a.concat(b), [])\r\n    .filter((value: any, index: number, array: any[]) => array.findIndex((element: any) => (element.name === value.name)) === index) // https://stackoverflow.com/a/56757215/2477303\r\n    .sort((a: any, b: any) => this.translateService.instant(a.name).localeCompare(this.translateService.instant(b.name)));\r\n    this.table.filterPredicate = this.createFilter();\r\n    this.applyFilter();\r\n    // topics\r\n    this.topics = [\r\n      { surname: 'kingdom', name: 'city', examples: this.table.data.filter((item: any) => ['barrier', 'node'].includes(item.id)), suffix: '/assets/images/resources/land.png' },\r\n      { surname: 'kingdom', name: 'auction', examples: this.table.data.filter((item: any) => ['shield-light', 'crypt-keeper'].includes(item.id)), suffix: '/assets/images/resources/gold.png' },\r\n      { surname: 'kingdom', name: 'emporium', examples: this.table.data.filter((item: any) => ['magic-compass', 'dragon-egg'].includes(item.id)), suffix: '/assets/images/resources/gem.png' },\r\n      { surname: 'world', name: 'map', examples: this.table.data.filter((item: any) => ['graveyard', 'inn'].includes(item.id)) },\r\n      { surname: 'kingdom', name: 'army', examples: this.table.data.filter((item: any) => ['bone-dragon', 'hydra'].includes(item.id)) },\r\n      { surname: 'kingdom', name: 'tavern', examples: this.table.data.filter((item: any) => ['dragon-rider', 'sage'].includes(item.id)) },\r\n      { surname: 'kingdom', name: 'census', examples: [{ name: 'Bot 1', description: 'Bots', type: 'player', image: '/assets/images/factions/black.png', faction: { id: 'black' } }, { name: 'Bot 2', description: 'Bots', type: 'player', image: '/assets/images/factions/white.png', faction: { id: 'white' } }], suffix: '/assets/images/icons/power.png' },\r\n      { surname: 'kingdom', name: 'archive', examples: [{ name: 'Bot 3', description: 'kingdom.report.subject', type: 'report', image: '/assets/images/factions/green.png', faction: { id: 'green' } }, { name: 'Bot 4', description: 'kingdom.auction.subject', type: 'report', image: '/assets/images/factions/blue.png', faction: { id: 'blue' } }] },\r\n      { surname: 'kingdom', name: 'clan', examples: this.table.data.filter((item: any) => ['hunter', 'warrior'].includes(item.id)) },\r\n      { surname: 'kingdom', name: 'sorcery', examples: this.table.data.filter((item: any) => ['fireball', 'locust-swarm'].includes(item.id)), suffix: '/assets/images/resources/mana.png' },\r\n      { surname: 'kingdom', name: 'temple', examples: this.table.data.filter((item: any) => ['death', 'famine'].includes(item.id)), suffix: '/assets/images/spells/grey/armageddon.png' },\r\n      { surname: 'user', name: 'encyclopedia', examples: this.table.data.filter((item: any) => ['breath', 'dragon'].includes(item.id)) },\r\n    ];\r\n  }\r\n\r\n  applyFilter(): void {\r\n    this.table.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      type: this.filters.type.value,\r\n      faction: this.filters.faction.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const normalize = /[\\u0300-\\u036f]/g;\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return (this.translateService.instant(data.name).toLowerCase().normalize('NFD').replace(normalize, '').includes(filters.name.toLowerCase().normalize('NFD').replace(normalize, ''))\r\n        || this.translateService.instant(data.description).toLowerCase().normalize('NFD').replace(normalize, '').includes(filters.name.toLowerCase().normalize('NFD').replace(normalize, '')))\r\n        && (!filters.type.length || filters.type.every((element: any) => [data.type, data.subtype, data.legendary].includes(element)))\r\n        && (!filters.faction || data.faction.id.toLowerCase().includes(filters.faction.id));\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  openTomeDialog(tome: any): void {\r\n    const dialogRef = this.dialog.open(TomeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: tome,\r\n    });\r\n  }\r\n\r\n  clearFilter(): void {\r\n    this.filters.name.value = '';\r\n    this.filters.faction.value = this.filters.faction.options[0];\r\n    this.filters.type.value = [];\r\n    if (this.table.paginator) {\r\n      this.table.paginator.pageSize = this.table.paginator.pageSizeOptions[0];\r\n      this.table.paginator.pageIndex = 0;\r\n    }\r\n    if (this.table.sort) {\r\n      if (this.table.sort.active !== 'name' && this.table.sort.direction !== 'asc') {\r\n        this.table.sort.sort({\r\n          id: 'name',\r\n          start: 'asc',\r\n          disableClear: false,\r\n        });\r\n      }\r\n    }\r\n    this.applyFilter();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { DomService } from 'src/app/services/dom.service';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent {\r\n\r\n  constructor(\r\n    public domService: DomService,\r\n  ) { }\r\n\r\n}\r\n","<div class=\"app-landing\" >\r\n  <div class=\"parallax\">\r\n    <!-- PARALLAX https://codepen.io/samdbeckham/pen/OPXPNp -->\r\n    <div class=\"parallax-layer parallax-layer-1\"></div>\r\n    <div class=\"parallax-layer parallax-layer-2 animated fadeInUp\" style=\"animation-delay: 2250ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-3 animated fadeInUp\" style=\"animation-delay: 2000ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-4 animated fadeInUp\" style=\"animation-delay: 1750ms\">\r\n      <div class=\"landing-title\">\r\n        <h1 class=\"mat-display-4\">{{ 'landing.title.name' | translate }}</h1>\r\n        <h3 class=\"mat-subheading-2\">{{ 'landing.title.description' | translate }}</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"parallax-layer parallax-layer-5 animated fadeInUp\" style=\"animation-delay: 1500ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-6 animated fadeInUp\" style=\"animation-delay: 1250ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-7 animated fadeInUp\" style=\"animation-delay: 1000ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-8 animated fadeInUp\" style=\"animation-delay: 750ms\"></div>\r\n    <div class=\"parallax-layer parallax-layer-9 animated fadeInUp\" style=\"animation-delay: 500ms\"></div>\r\n    <!-- LOGIN -->\r\n    <div class=\"parallax-layer parallax-layer-10 animated fadeInUp\" style=\"animation-delay: 250ms\" #login>\r\n      <app-login></app-login>\r\n    </div>\r\n    <!-- CONTENT -->\r\n    <div class=\"parallax-content\" #content>\r\n      <div class=\"wrapper\">\r\n        <div class=\"app-landing-content\" fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n           <!-- REALITY -->\r\n           <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"center\" fxFlexOrder.xs=\"0\">\r\n            <h1 class=\"mat-display-3\">{{ 'landing.reality.name' | translate }}</h1>\r\n          </div>\r\n          <!-- RESURRECTION -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"10\">\r\n            <img src=\"/assets/images/landing/resurrection.png\" [alt]=\"'landing.resurrection.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"20\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.resurrection.name' | translate }}</h1>\r\n            <p>{{ 'landing.resurrection.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/categories/melee.png\" [alt]=\"'category.melee.name' | translate\">\r\n              <img src=\"/assets/images/categories/psychic.png\" [alt]=\"'category.psychic.name' | translate\">\r\n              <img src=\"/assets/images/categories/ranged.png\" [alt]=\"'category.ranged.name' | translate\">\r\n              <img src=\"/assets/images/categories/magic.png\" [alt]=\"'category.magic.name' | translate\">\r\n              <img src=\"/assets/images/categories/breath.png\" [alt]=\"'category.breath.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <!-- FACTIONS -->\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"center\" fxFlexOrder.xs=\"30\">\r\n            <h1 class=\"mat-display-3 margened\">{{ 'landing.choose.name' | translate }}</h1>\r\n            <p class=\"mat-subheading-2\">{{ 'landing.choose.description' | translate }}</p>\r\n          </div>\r\n          <div fxFlex.xl=\"20\" fxFlex.lg=\"20\" fxFlex.md=\"20\" fxFlex.sm=\"20\" fxFlex.xs=\"100\" class=\"image-responsive center\" fxFlexOrder.xs=\"40\">\r\n            <img src=\"/assets/images/factions/black.png\" [alt]=\"'faction.black.name' | translate\">\r\n            <h1 class=\"mat-h1\">{{ 'faction.black.name' | translate }}</h1>\r\n            <p>{{ 'faction.black.help' | translate }}</p>\r\n            <div class=\"faction-icons\">\r\n              <img src=\"/assets/images/spells/black/death-decay.png\" [alt]=\"'spell.death-decay.name' | translate\">\r\n              <img src=\"/assets/images/spells/black/necromancy.png\" [alt]=\"'spell.necromancy.name' | translate\">\r\n              <img src=\"/assets/images/spells/black/vampirism.png\" [alt]=\"'spell.vampirism.name' | translate\">\r\n              <img src=\"/assets/images/spells/black/soul-pact.png\" class=\"legendary\" [alt]=\"'spell.soul-pact.name' | translate\">\r\n              <img src=\"/assets/images/spells/black/night-living-dead.png\" [alt]=\"'spell.night-living-dead.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"20\" fxFlex.lg=\"20\" fxFlex.md=\"20\" fxFlex.sm=\"20\" fxFlex.xs=\"100\" class=\"image-responsive center\" fxFlexOrder.xs=\"50\">\r\n            <img src=\"/assets/images/factions/green.png\" [alt]=\"'faction.green.name' | translate\">\r\n            <h1 class=\"mat-h1\">{{ 'faction.green.name' | translate }}</h1>\r\n            <p>{{ 'faction.green.help' | translate }}</p>\r\n            <div class=\"faction-icons\">\r\n              <img src=\"/assets/images/spells/green/natures-favor.png\" class=\"legendary\" [alt]=\"'spell.natures-favor.name' | translate\">\r\n              <img src=\"/assets/images/spells/green/venom.png\" [alt]=\"'spell.venom.name' | translate\">\r\n              <img src=\"/assets/images/spells/green/druidism.png\" [alt]=\"'spell.druidism.name' | translate\">\r\n              <img src=\"/assets/images/spells/green/climate-control.png\" [alt]=\"'spell.climate-control.name' | translate\">\r\n              <img src=\"/assets/images/spells/green/calm.png\" [alt]=\"'spell.calm.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"20\" fxFlex.lg=\"20\" fxFlex.md=\"20\" fxFlex.sm=\"20\" fxFlex.xs=\"100\" class=\"image-responsive center\" fxFlexOrder.xs=\"60\">\r\n            <img src=\"/assets/images/factions/blue.png\" [alt]=\"'faction.blue.name' | translate\">\r\n            <h1 class=\"mat-h1\">{{ 'faction.blue.name' | translate }}</h1>\r\n            <p>{{ 'faction.blue.help' | translate }}</p>\r\n            <div class=\"faction-icons\">\r\n              <img src=\"/assets/images/spells/blue/freeze.png\" [alt]=\"'spell.freeze.name' | translate\">\r\n              <img src=\"/assets/images/spells/blue/avarice.png\" [alt]=\"'spell.avarice.name' | translate\">\r\n              <img src=\"/assets/images/spells/blue/laziness.png\" class=\"legendary\" [alt]=\"'spell.laziness.name' | translate\">\r\n              <img src=\"/assets/images/spells/blue/confuse.png\" [alt]=\"'spell.confuse.name' | translate\">\r\n              <img src=\"/assets/images/spells/blue/invisibility.png\" [alt]=\"'spell.invisibility.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"20\" fxFlex.lg=\"20\" fxFlex.md=\"20\" fxFlex.sm=\"20\" fxFlex.xs=\"100\" class=\"image-responsive center\" fxFlexOrder.xs=\"70\">\r\n            <img src=\"/assets/images/factions/red.png\" [alt]=\"'faction.red.name' | translate\">\r\n            <h1 class=\"mat-h1\">{{ 'faction.red.name' | translate }}</h1>\r\n            <p>{{ 'faction.red.help' | translate }}</p>\r\n            <div class=\"faction-icons\">\r\n              <img src=\"/assets/images/spells/red/frenzy.png\" [alt]=\"'spell.frenzy.name' | translate\">\r\n              <img src=\"/assets/images/spells/red/inferno.png\" class=\"legendary\" [alt]=\"'spell.inferno.name' | translate\">\r\n              <img src=\"/assets/images/spells/red/volcano.png\" [alt]=\"'spell.volcano.name' | translate\">\r\n              <img src=\"/assets/images/spells/red/succubus-kiss.png\" [alt]=\"'spell.succubus-kiss.name' | translate\">\r\n              <img src=\"/assets/images/spells/red/battle-chant.png\" [alt]=\"'spell.battle-chant.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"20\" fxFlex.lg=\"20\" fxFlex.md=\"20\" fxFlex.sm=\"20\" fxFlex.xs=\"100\" class=\"image-responsive center\" fxFlexOrder.xs=\"80\">\r\n            <img src=\"/assets/images/factions/white.png\" [alt]=\"'faction.white.name' | translate\">\r\n            <h1 class=\"mat-h1\">{{ 'faction.white.name' | translate }}</h1>\r\n            <p>{{ 'faction.white.help' | translate }}</p>\r\n            <div class=\"faction-icons\">\r\n              <img src=\"/assets/images/spells/white/prayer.png\" [alt]=\"'spell.prayer.name' | translate\">\r\n              <img src=\"/assets/images/spells/white/endurance.png\" [alt]=\"'spell.endurance.name' | translate\">\r\n              <img src=\"/assets/images/spells/white/exorcism.png\" [alt]=\"'spell.exorcism.name' | translate\">\r\n              <img src=\"/assets/images/spells/white/blaze.png\" [alt]=\"'spell.blaze.name' | translate\">\r\n              <img src=\"/assets/images/spells/white/miracle.png\" class=\"legendary\" [alt]=\"'spell.miracle.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <!-- DESTINY -->\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"center\" fxFlexOrder.xs=\"90\">\r\n            <h1 class=\"mat-display-3 margened\">{{ 'landing.destiny.name' | translate }}</h1>\r\n          </div>\r\n          <!-- CITY -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"110\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.city.name' | translate }}</h1>\r\n            <p>{{ 'landing.city.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/structures/farm.png\" [alt]=\"'structure.farm.name' | translate\">\r\n              <img src=\"/assets/images/structures/fortress.png\" [alt]=\"'structure.fortress.name' | translate\">\r\n              <img src=\"/assets/images/structures/academy.png\" [alt]=\"'structure.academy.name' | translate\">\r\n              <img src=\"/assets/images/structures/node.png\" [alt]=\"'structure.node.name' | translate\">\r\n              <img src=\"/assets/images/structures/village.png\" [alt]=\"'structure.village.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"100\">\r\n            <img src=\"/assets/images/landing/city.png\" [alt]=\"'landing.city.name' | translate\">\r\n          </div>\r\n          <!-- CENSUS -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"120\">\r\n            <img src=\"/assets/images/landing/sorcery.png\" [alt]=\"'landing.conjure.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"130\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.conjure.name' | translate }}</h1>\r\n            <p>{{ 'landing.conjure.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/spells/red/fireball.png\" [alt]=\"'spell.fireball.name' | translate\">\r\n              <img src=\"/assets/images/spells/black/terror.png\" [alt]=\"'spell.terror.name' | translate\">\r\n              <img src=\"/assets/images/spells/green/ambush.png\" [alt]=\"'spell.ambush.name' | translate\">\r\n              <img src=\"/assets/images/spells/white/resurrection.png\" class=\"spell\" [alt]=\"'unit.resurrection.name' | translate\">\r\n              <img src=\"/assets/images/spells/blue/fog.png\" [alt]=\"'spell.fog.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <!-- ARMY -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"150\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.army.name' | translate }}</h1>\r\n            <p>{{ 'landing.army.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/units/black/zombie.png\" [alt]=\"'unit.zombie.name' | translate\">\r\n              <img src=\"/assets/images/units/blue/mage.png\" [alt]=\"'unit.mage.name' | translate\">\r\n              <img src=\"/assets/images/units/green/hydra.png\" class=\"legendary\" [alt]=\"'unit.hydra.name' | translate\">\r\n              <img src=\"/assets/images/units/red/ogre.png\" [alt]=\"'unit.ogre.name' | translate\">\r\n              <img src=\"/assets/images/units/white/paladin.png\" [alt]=\"'unit.paladin.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"140\">\r\n            <img src=\"/assets/images/landing/army.png\" [alt]=\"'landing.army.name' | translate\">\r\n          </div>\r\n          <!-- MAP -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"160\">\r\n            <img src=\"/assets/images/landing/map.png\" [alt]=\"'landing.map.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"170\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.map.name' | translate }}</h1>\r\n            <p>{{ 'landing.map.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/locations/graveyard.png\" [alt]=\"'location.graveyard.name' | translate\">\r\n              <img src=\"/assets/images/locations/forest.png\" [alt]=\"'location.forest.name' | translate\">\r\n              <img src=\"/assets/images/locations/cathedral.png\" [alt]=\"'location.cathedral.name' | translate\">\r\n              <img src=\"/assets/images/locations/mountain.png\" [alt]=\"'location.mountain.name' | translate\">\r\n              <img src=\"/assets/images/locations/lake.png\" [alt]=\"'location.lake.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <!-- DESKTOP -->\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" fxFlexOrder.xs=\"180\" class=\"image-wrapper\">\r\n            <svg viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#99009C\" d=\"M45.7,-80.2C58.9,-71.5,69.1,-58.6,75.7,-44.6C82.2,-30.5,85.2,-15.3,86.4,0.7C87.6,16.7,87.1,33.3,79.9,46.3C72.7,59.3,58.8,68.5,44.4,76.2C30,83.9,15,90,-0.6,91.1C-16.2,92.1,-32.4,88.2,-44.9,79.4C-57.3,70.6,-66,56.8,-74.4,42.8C-82.8,28.7,-90.9,14.4,-92.7,-1.1C-94.6,-16.5,-90.2,-33.1,-80.3,-44.4C-70.3,-55.7,-54.8,-61.8,-40.5,-69.9C-26.1,-78,-13.1,-88.1,1.6,-90.9C16.2,-93.6,32.5,-89,45.7,-80.2Z\" transform=\"translate(100 100)\" /></svg>\r\n            <img class=\"image-desktop mat-elevation-z8\" src=\"/assets/images/landing/desktop.png\" [alt]=\"'landing.title.name' | translate\">\r\n          </div>\r\n          <!-- TAVERN -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"200\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.tavern.name' | translate }}</h1>\r\n            <p>{{ 'landing.tavern.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/heroes/blue/shaman.png\" class=\"legendary\" [alt]=\"'hero.shaman.name' | translate\">\r\n              <img src=\"/assets/images/heroes/red/dragon-rider.png\" [alt]=\"'hero.dragon-rider.name' | translate\">\r\n              <img src=\"/assets/images/heroes/white/trader.png\" class=\"legendary\" [alt]=\"'hero.trader.name' | translate\">\r\n              <img src=\"/assets/images/heroes/black/crypt-keeper.png\" [alt]=\"'hero.crypt-keeper.name' | translate\">\r\n              <img src=\"/assets/images/heroes/blue/elementalist.png\" class=\"legendary\" [alt]=\"'hero.elementalist.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"190\">\r\n            <img src=\"/assets/images/landing/tavern.png\" [alt]=\"'landing.tavern.name' | translate\">\r\n          </div>\r\n          <!-- AUCTION -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"210\">\r\n            <img src=\"/assets/images/landing/auction.png\" [alt]=\"'landing.auction.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"220\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.auction.name' | translate }}</h1>\r\n            <p>{{ 'landing.auction.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/items/treasure-chest.png\" [alt]=\"'item.treasure-chest.name' | translate\">\r\n              <img src=\"/assets/images/items/lucky-paw.png\" class=\"legendary\" [alt]=\"'item.lucky-paw.name' | translate\">\r\n              <img src=\"/assets/images/items/mana-vortex.png\" [alt]=\"'item.mana-vortex.name' | translate\">\r\n              <img src=\"/assets/images/items/rattle.png\" class=\"legendary\" [alt]=\"'item.rattle.name' | translate\">\r\n              <img src=\"/assets/images/items/valhalla-horn.png\" [alt]=\"'item.valhalla-horn.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <!-- CLAN -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"240\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.clan.name' | translate }}</h1>\r\n            <p>{{ 'landing.clan.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/clans/axe.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n              <img src=\"/assets/images/clans/crow.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n              <img src=\"/assets/images/clans/hat.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n              <img src=\"/assets/images/clans/rip.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n              <img src=\"/assets/images/clans/helmet.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"230\">\r\n            <img src=\"/assets/images/landing/clan.png\" [alt]=\"'landing.clan.name' | translate\">\r\n          </div>\r\n          <!-- TEMPLE -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"250\">\r\n            <img src=\"/assets/images/landing/temple.png\" [alt]=\"'landing.temple.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"260\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.temple.name' | translate }}</h1>\r\n            <p>{{ 'landing.temple.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/gods/death.png\" class=\"legendary god-avatar\" [alt]=\"'god.death.name' | translate\">\r\n              <img src=\"/assets/images/gods/famine.png\" class=\"legendary god-avatar\" [alt]=\"'god.famine.name' | translate\">\r\n              <img src=\"/assets/images/gods/void.png\" class=\"legendary god-avatar\" [alt]=\"'god.void.name' | translate\">\r\n              <img src=\"/assets/images/gods/war.png\" class=\"legendary god-avatar\" [alt]=\"'god.war.name' | translate\">\r\n              <img src=\"/assets/images/gods/pestilence.png\" class=\"legendary god-avatar\" [alt]=\"'god.pestilence.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" fxFlexOrder.xs=\"270\" class=\"image-wrapper\">\r\n            <svg viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#99009C\" d=\"M35.5,-58.4C46,-48.6,54.5,-38.6,63,-26.8C71.6,-14.9,80.3,-1,78,10.8C75.6,22.7,62.3,32.6,50.8,41.8C39.3,51,29.7,59.5,16.8,68.3C4,77,-11.9,86,-27.8,85.5C-43.7,85.1,-59.5,75.2,-63.4,60.6C-67.2,46,-59,26.6,-58.3,10.4C-57.6,-5.9,-64.3,-19.2,-62.7,-31.1C-61.1,-43,-51.2,-53.6,-39.3,-62.8C-27.5,-72,-13.7,-79.9,-0.6,-78.9C12.5,-78,25.1,-68.2,35.5,-58.4Z\" transform=\"translate(100 100)\" /></svg>\r\n            <img class=\"image-mobile mat-elevation-z8\" src=\"/assets/images/landing/mobile.png\" [alt]=\"'landing.title.name' | translate\">\r\n          </div>\r\n          <!-- VICTORY -->\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"center\" fxFlexOrder.xs=\"280\">\r\n            <h1 class=\"mat-display-3 margened\">{{ 'landing.victory.name' | translate }}</h1>\r\n          </div>\r\n          <!-- STRATEGY -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"300\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.strategy.name' | translate }}</h1>\r\n            <p>{{ 'landing.strategy.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/resources/gold.png\" [alt]=\"'resource.gold.name' | translate\">\r\n              <img src=\"/assets/images/resources/mana.png\" [alt]=\"'resource.mana.name' | translate\">\r\n              <img src=\"/assets/images/resources/population.png\" [alt]=\"'resource.population.name' | translate\">\r\n              <img src=\"/assets/images/resources/land.png\" [alt]=\"'resource.land.name' | translate\">\r\n              <img src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"290\">\r\n            <img src=\"/assets/images/landing/strategy.png\" [alt]=\"'landing.strategy.name' | translate\">\r\n          </div>\r\n          <!-- LEGEND -->\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"image-responsive\" fxFlexOrder.xs=\"310\">\r\n            <img src=\"/assets/images/landing/legend.png\" [alt]=\"'landing.legend.name' | translate\">\r\n          </div>\r\n          <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"50\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"center\" fxFlexOrder.xs=\"320\">\r\n            <h1 class=\"mat-h1\">{{ 'landing.legend.name' | translate }}</h1>\r\n            <p>{{ 'landing.legend.description' | translate }}</p>\r\n            <div class=\"image-icons\">\r\n              <img src=\"/assets/images/categories/fire.png\" [alt]=\"'category.fire.name' | translate\">\r\n              <img src=\"/assets/images/categories/holy.png\" [alt]=\"'category.holy.name' | translate\">\r\n              <img src=\"/assets/images/categories/lightning.png\" [alt]=\"'category.lightning.name' | translate\">\r\n              <img src=\"/assets/images/categories/poison.png\" [alt]=\"'category.poison.name' | translate\">\r\n              <img src=\"/assets/images/categories/cold.png\" [alt]=\"'category.cold.name' | translate\">\r\n            </div>\r\n          </div>\r\n          <div fxFlex.xl=\"100\" fxFlex.lg=\"100\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"center\" fxFlexOrder.xs=\"330\" id=\"legend\">\r\n            <app-legend></app-legend>\r\n            <a mat-raised-button color=\"primary\" class=\"play-button\" (click)=\"domService.scrollToElement(login)\">{{ 'landing.title.play' | translate }}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- FOOTER -->\r\n      <div class=\"app-landing-footer\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#99009c\" fill-opacity=\"1\" d=\"M0,128L48,144C96,160,192,192,288,213.3C384,235,480,245,576,240C672,235,768,213,864,213.3C960,213,1056,235,1152,208C1248,181,1344,107,1392,69.3L1440,32L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path></svg>\r\n        <div class=\"retribution\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n          <a mat-button href=\"https://www.freepik.com/free-photos-vectors/business\">Freepik Images</a>\r\n          <a mat-button href=\"https://assetstore.unity.com/publishers/13229\">Unity Store</a>\r\n          <a mat-button href=\"https://www.mapbox.com/mapbox-studio/\">Mapbox Studio</a>\r\n          <a mat-button href=\"https://material.angular.io/\">Angular Material</a>\r\n          <a mat-button href=\"https://material.io/resources/landing/\">Material Icons</a>\r\n          <a mat-button href=\"https://www.ngxs.io/\">Angular NGXS</a>\r\n          <a mat-button href=\"https://fonts.google.com/\">Google Fonts</a>\r\n          <a mat-button href=\"https://firebase.google.com/docs/firestore\">Cloud Firestore</a>\r\n          <a mat-button href=\"https://getwaves.io/\">Get Waves</a>\r\n          <a mat-button href=\"https://www.blobmaker.app/\">Blob Maker</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"app-legend table-responsive\">\r\n  <mat-card tourAnchor=\"tour.legend\">\r\n\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/legend.png\" [alt]=\"'kingdom.legend.name' | translate\">\r\n      <mat-card-title>{{ 'user.legend.name' | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ 'user.legend.description' | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.legend')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>person</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <table mat-table matSort [dataSource]=\"data\" matSortActive=\"timestamp\" matSortDirection=\"desc\" matSortDisableClear [attr.aria-label]=\"'user.legend.name' | translate\">\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n          <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n            <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'timestamp'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" [matDatepicker]=\"timestamp\" disabled (dateChange)=\"applyFilter()\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"timestamp\"></mat-datepicker-toggle>\r\n              <mat-datepicker #timestamp disabled=\"false\"></mat-datepicker>\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=null; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n          </mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let legend\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n            <ng-template [ngIf]=\"column === 'name'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"[legend.faction.id, 'legendary']\">\r\n                  <div mat-list-avatar [matBadge]=\"legend.position | long\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar [src]=\"legend.faction.image\" [alt]=\"legend.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ legend.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ legend.faction.name | translate }}</div>\r\n                  <div mat-list-avatar [matBadge]=\"legend.power | short\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'clan'\">\r\n              <mat-list dense *ngIf=\"legend.clan\">\r\n                <mat-list-item>\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"legend.clan.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ legend.clan.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ legend.clan.description }}</div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'timestamp'\">\r\n              {{ legend.timestamp.toMillis() | date }}\r\n            </ng-template>\r\n\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let legend; columns: columns; let i = index\"></mat-row>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-legend',\r\n  templateUrl: './legend.component.html',\r\n  styleUrls: ['./legend.component.scss'],\r\n})\r\n@UntilDestroy()\r\nexport class LegendComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  columns = ['name', 'clan', 'timestamp'];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    clan: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    timestamp: {\r\n      type: 'timestamp',\r\n      value: null,\r\n    },\r\n  };\r\n  data: MatTableDataSource<any> = new MatTableDataSource();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private angularFirestore: AngularFirestore,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>('legends').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(legends => {\r\n      this.data = new MatTableDataSource(legends);\r\n      this.data.paginator = this.paginator;\r\n      this.data.sortingDataAccessor = (obj, property) => property === 'name' ? obj['power'] : obj[property];\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    this.data.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      clan: this.filters.clan.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data.name.toLowerCase().includes(filters.name)\r\n        && (!filters.timestamp || moment(data.timestamp.toMillis()).isBetween(moment(filters.timestamp).startOf('day'), moment(filters.timestamp).endOf('day'), 'days', '[]'))\r\n        && (!filters.clan || (data.clan && data.clan.name.toLowerCase().includes(filters.clan))); // clan can be null\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-geolocation',\r\n  template: `\r\n    <div class=\"dialog-title\">\r\n      <h1 mat-dialog-title>{{ 'user.geolocation.name' | translate }}</h1>\r\n    </div>\r\n    <div mat-dialog-content [innerHTML]=\"'user.geolocation.description' | translate\"></div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\" cdkFocusInitial>{{ 'user.geolocation.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ],\r\n})\r\nexport class GeolocationComponent {\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<GeolocationComponent>,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"app-login\">\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"login()\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card fxFlex.xl=\"25\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"66\" fxFlex.xs=\"100\">\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/login.png\" [alt]=\"'user.login.name' | translate\">\r\n        <mat-card-title>{{ 'user.login.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'user.login.description' | translate }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <mat-tab-group mat-align-tabs=\"center\" (selectedTabChange)=\"changeType($event)\">\r\n          <mat-tab *ngFor=\"let type of types\" [label]=\"'user.login.' + type | translate\"></mat-tab>\r\n        </mat-tab-group>\r\n\r\n        <mat-form-field *ngIf=\"type === 'signup'\">\r\n          <mat-label>{{ 'user.login.faction' | translate }}</mat-label>\r\n          <mat-select formControlName=\"faction\">\r\n            <mat-select-trigger *ngIf=\"form.value.faction\">\r\n              <mat-list dense>\r\n                <mat-list-item>\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"form.value.faction.image\" [alt]=\"form.value.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ form.value.faction.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"form.value.faction.description | translate | icon:form.value.faction\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-select-trigger>\r\n            <mat-option *ngFor=\"let faction of factions\" [value]=\"faction\">\r\n              <mat-list dense>\r\n                <mat-list-item>\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"faction.image\" [alt]=\"faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ faction.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"faction.description | translate | icon:faction\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error>{{ 'user.login.unfactioned' | translate }}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"type === 'signup'\">\r\n          <input matInput type=\"text\" formControlName=\"username\" placeholder=\"{{ 'user.login.username' | translate }}\" autocomplete=\"off\">\r\n          <mat-error>{{ 'user.login.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput type=\"text\" formControlName=\"email\" placeholder=\"{{ 'user.login.email' | translate }}\" autocomplete=\"off\">\r\n          <mat-error>{{ 'user.login.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"type !== 'reset'\">\r\n          <input matInput type=\"password\" formControlName=\"password\" placeholder=\"{{ 'user.login.password' | translate }}\" autocomplete=\"off\">\r\n          <mat-error>{{ 'user.login.insecure' | translate }}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"type === 'signup'\">\r\n          <input matInput type=\"password\" formControlName=\"password2\" placeholder=\"{{ 'user.login.password2' | translate }}\" autocomplete=\"off\">\r\n          <mat-error>{{ 'user.login.mismatch' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions>\r\n        <button mat-stroked-button type=\"button\" (click)=\"google()\" class=\"flag-menu\">\r\n          <img src=\"/assets/images/brands/google.png\" alt=\"Google\">\r\n          <span>Google</span>\r\n        </button>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\" cdkFocusInitial>{{ 'user.login.accept' | translate }}</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { LoginWithGoogleAction } from 'src/app/shared/auth/auth.actions';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { GeolocationComponent } from './geolocation.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  types =  ['login', 'signup', 'reset'] as const;\r\n  type = 'login';\r\n  message: string;\r\n  factions: any[] = [];\r\n\r\n  constructor(\r\n    public angularFireAuth: AngularFireAuth,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private cacheService: CacheService,\r\n    private loadingService: LoadingService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const factions = await this.cacheService.getFactions();\r\n    this.factions = factions.filter((faction: any) => faction.id !== 'grey');\r\n  }\r\n\r\n  async createForm() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      username: ['', this.type === 'signup' ? [Validators.required, Validators.minLength(6), Validators.maxLength(12)] : []],\r\n      password: ['', this.type !== 'reset' ? [Validators.required, Validators.minLength(6), Validators.maxLength(12)] : []],\r\n      password2: ['', this.type === 'signup' ? [Validators.required, Validators.minLength(6), Validators.maxLength(12), this.matchValues('password')] : []],\r\n      faction: [null, this.type === 'signup' ? [Validators.required] : []],\r\n    });\r\n  }\r\n\r\n  changeType($event: MatTabChangeEvent) {\r\n    this.type = this.types[$event.index];\r\n    this.createForm();\r\n    if (this.type === 'signup') {\r\n      this.dialog.open(GeolocationComponent, {\r\n        panelClass: 'dialog-responsive',\r\n        data: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  matchValues(matchTo: string): (AbstractControl) => ValidationErrors | null {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      return !!control.parent && !!control.parent.value && control.value === control.parent.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: false };\r\n    };\r\n  }\r\n\r\n  async getCurrentPosition() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject, { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 });\r\n    });\r\n  }\r\n\r\n  async login() {\r\n    if (this.form.valid) {\r\n      const email = this.form.value.email;\r\n      const password = this.form.value.password;\r\n      this.loadingService.startLoading();\r\n      try {\r\n        switch (this.type) {\r\n          case 'login':\r\n            await this.angularFireAuth.signInWithEmailAndPassword(email, password);\r\n            break;\r\n          case 'signup':\r\n            const position: any = await this.getCurrentPosition();\r\n            const credentials = await this.angularFireAuth.createUserWithEmailAndPassword(email, password);\r\n            this.apiService.populateMap(position.coords.latitude, position.coords.longitude);\r\n            await this.apiService.createKingdom(credentials.user.uid, this.form.value.faction.id, this.form.value.username, position.coords.latitude, position.coords.longitude);\r\n            break;\r\n          case 'reset':\r\n            await this.angularFireAuth.sendPasswordResetEmail(email);\r\n            this.notificationService.warning('user.login.check');\r\n            break;\r\n        }\r\n      } catch (error){\r\n        await this.angularFireAuth.signOut();\r\n        console.error(error);\r\n        this.notificationService.error('user.login.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    }\r\n  }\r\n\r\n  async google() {\r\n    this.store.dispatch(new LoginWithGoogleAction());\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { EncyclopediaComponent } from './encyclopedia/encyclopedia.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'landing', component: LandingComponent },\r\n  { path: 'encyclopedia', component: EncyclopediaComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { EncyclopediaComponent } from './encyclopedia/encyclopedia.component';\r\nimport { TomeComponent } from './encyclopedia/tome.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { LegendComponent } from './legend/legend.component';\r\nimport { TourMatMenuModule } from 'ngx-ui-tour-md-menu';\r\nimport { DisqusModule } from 'ngx-disqus';\r\nimport { GeolocationComponent } from './login/geolocation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    EncyclopediaComponent,\r\n    TomeComponent,\r\n    LandingComponent,\r\n    LegendComponent,\r\n    GeolocationComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n    TourMatMenuModule,\r\n    DisqusModule,\r\n  ],\r\n})\r\nexport class UserModule { }\r\n"]}