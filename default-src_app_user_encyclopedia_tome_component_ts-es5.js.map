{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","family_r15","skill_r16","category_r17","category_r19","TomeComponent","tome","dialogRef","close","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","selectors","decls","vars","consts","template","ctx"],"sources":["webpack:///src/app/user/encyclopedia/tome.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tome',\r\n  template: `\r\n    <div class=\"dialog-title\">\r\n      <h1 mat-dialog-title>{{ tome.name | translate }}</h1>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'user.tome.help' | translate }}</p>\r\n      <div matSubheader>{{ 'user.tome.name' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[tome.faction.id, (tome | legendary) ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"tome.level || '?'\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"tome.image\" [ngClass]=\"tome.type === 'god' ? 'squared' : ''\">\r\n          </div>\r\n          <div mat-line>{{ tome.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"tome.type !== 'unit'\" [innerHTML]=\"tome.description | translate | icon:tome\"></div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"tome.type === 'unit'\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of tome.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of tome.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of tome.categories\" [src]=\"category.image\">\r\n            <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"tome.legendary\" src=\"/assets/images/icons/legendary.png\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"tome.type === 'unit' && tome.categories && tome.categories.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of tome.resistances\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-list-avatar *ngIf=\"tome.join\">\r\n            <img mat-list-avatar [src]=\"tome.join.image\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'user.tome.type' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/icons/type.png\">{{ 'type.' + tome.type + '.name'  | translate }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.subtype\"><img class=\"icon\" src=\"/assets/images/icons/type.png\">{{ 'type.' + tome.subtype + '.name'  | translate }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.legendary\" class=\"legendary\"><img class=\"icon\" src=\"/assets/images/icons/legendary.png\">{{ 'category.legendary.name' | translate }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"tome.attack || tome.defense || tome.health || tome.initiative || tome.power\">\r\n      <div matSubheader>{{ 'user.tome.statistics' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.attack > 0\"><img class=\"icon\" src=\"/assets/images/icons/attack.png\">{{ 'user.tome.attack' | translate:{ number: tome.attack | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.defense > 0\"><img class=\"icon\" src=\"/assets/images/icons/defense.png\">{{ 'user.tome.defense' | translate:{ number: tome.defense | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.health > 0\"><img class=\"icon\" src=\"/assets/images/icons/health.png\">{{ 'user.tome.health' | translate:{ number: tome.health | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.initiative > 0\"><img class=\"icon\" src=\"/assets/images/icons/initiative.png\">{{ 'user.tome.initiative' | translate:{ number: tome.initiative | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.power > 0\"><img class=\"icon\" src=\"/assets/images/icons/power.png\">{{ 'user.tome.power' | translate:{ number: tome.power | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"tome.goldCost || tome.manaCost || tome.populationCost || tome.turnResearch || tome.turnCost\">\r\n      <div matSubheader>{{ 'user.tome.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.goldCost > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldCost' | translate:{ number: tome.goldCost | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.manaCost > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaCost' | translate:{ number: tome.manaCost | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.populationCost > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationCost' | translate:{ number: tome.populationCost | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.turnResearch > 0\"><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ 'user.tome.turnResearch' | translate:{ number: tome.turnResearch | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.turnCost > 0\"><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ 'user.tome.turnCost' | translate:{ number: tome.turnCost | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"tome.goldProduction || tome.manaProduction || tome.populationProduction\">\r\n      <div matSubheader>{{ 'user.tome.production' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.goldProduction > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldProduction' | translate:{ number: tome.goldProduction | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.manaProduction > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaProduction' | translate:{ number: tome.manaProduction | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.populationProduction > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationProduction' | translate:{ number: tome.populationProduction | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"tome.goldMaintenance || tome.manaMaintenance || tome.populationMaintenance\">\r\n      <div matSubheader>{{ 'user.tome.maintenances' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.goldMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldMaintenance' | translate:{ number: tome.goldMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.manaMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaMaintenance' | translate:{ number: tome.manaMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"tome.populationMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationMaintenance' | translate:{ number: tome.populationMaintenance | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"tome.families?.length || tome.skills?.length || tome.categories?.length || tome.resistances?.length\">\r\n      <div matSubheader>{{ 'user.tome.characteristics' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngFor=\"let family of tome.families\"><img class=\"icon\" [src]=\"family.image\">{{ family.name | translate }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngFor=\"let skill of tome.skills\"><img class=\"icon\" [src]=\"skill.image\">{{ skill.name | translate }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngFor=\"let category of tome.categories\"><img class=\"icon\" [src]=\"category.image\">{{ category.name | translate }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngFor=\"let category of tome.resistances\"><img class=\"icon grayscale\" [src]=\"category.image\">{{ ('category.resistance.name' | translate) + (category.name | translate) }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\" cdkFocusInitial>{{ 'user.tome.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dialog-title {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n    }\r\n  `],\r\n})\r\nexport class TomeComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public tome: any,\r\n    private dialogRef: MatDialogRef<TomeComponent>,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n"]}