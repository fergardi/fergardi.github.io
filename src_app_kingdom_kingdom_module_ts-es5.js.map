{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_9__","ctx_r7","$event","ctx_r13","ctx_r21","ctx_r31","_r29","_r5","ArchiveComponent","angularFirestore","dialog","store","notificationService","translateService","apiService","loadingService","dateAdapter","tutorialService","selectSnapshot","src_app_shared_auth_auth_state__WEBPACK_IMPORTED_MODULE_1__","from","type","value","subject","timestamp","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__","_angular_material_table__WEBPACK_IMPORTED_MODULE_11__","setLocale","currentLang","collection","uid","valueChanges","idField","pipe","subscribe","data","letters","paginator","sort","filterPredicate","createFilter","applyFilter","filter","JSON","stringify","filters","filterFunction","parse","name","instant","toLowerCase","includes","toString","moment__WEBPACK_IMPORTED_MODULE_2__","toMillis","isBetween","startOf","endOf","length","selection","selected","isAllSelected","clear","forEach","select","row","report","join","hero","item","spell","unit","dialogRef","open","_report_component__WEBPACK_IMPORTED_MODULE_0__","panelClass","startLoading","fids","map","letter","fid","removeLetters","success","console","error","stopLoading","selectors","viewQuery","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_18__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_19__","ctx","duration","delay","_angular_core__WEBPACK_IMPORTED_MODULE_6__","family_r14","skill_r15","category_r16","category_r18","family_r63","skill_r64","category_r65","category_r67","ReportComponent","src_app_shared_auth_auth_state__WEBPACK_IMPORTED_MODULE_0__","close","read","readLetter","contract","families","family","id","categories","category","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ctx_r9","family_r37","skill_r38","category_r39","category_r42","AuctionComponent","faction","options","_angular_material_table__WEBPACK_IMPORTED_MODULE_13__","src_app_shared_auth_auth_state__WEBPACK_IMPORTED_MODULE_2__","auctions","auction","table","sortingDataAccessor","createSorter","Set","refreshAuctions","sorterFunction","obj","property","description","moment__WEBPACK_IMPORTED_MODULE_0__","isAfter","auctioned","refreshAuction","stopPropagation","_bid_component__WEBPACK_IMPORTED_MODULE_1__","tome","src_app_user_encyclopedia_tome_component__WEBPACK_IMPORTED_MODULE_3__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_19__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_20__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","family_r6","skill_r7","category_r8","category_r10","BidComponent","formBuilder","form","group","gold","Math","floor","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","kingdomGold","quantity","valid","bidAuction","bidded","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","BattleType","BATTLE_TURNS","BattleComponent","kingdom","cacheService","assault","getAttacks","attacks","attackTypes","attackType","loading","kingdomTurn","battleKingdom","battled","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","ctx_r8","CensusComponent","router","clan","_angular_material_table__WEBPACK_IMPORTED_MODULE_12__","kingdoms","a","b","power","index","position","_battle_component__WEBPACK_IMPORTED_MODULE_0__","_letter_component__WEBPACK_IMPORTED_MODULE_3__","_sorcery_activate_component__WEBPACK_IMPORTED_MODULE_4__","artifact","_sorcery_conjure_component__WEBPACK_IMPORTED_MODULE_5__","charm","_detail_component__WEBPACK_IMPORTED_MODULE_6__","navigate","attacked","clock","_angular_core__WEBPACK_IMPORTED_MODULE_4__","DetailComponent","ref","where","kingdomTroops","troops","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","LetterComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","message","reset","sendLetter","sent","BuildComponent","building","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","max","kingdomLand","land","turn","buildStructure","built","demolishStructure","demolished","ceil","kingdomWorkshop","structure","turnRatio","goldCost","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__","ChargeComponent","node$","turns","chargeMana","charged","CityComponent","_build_component__WEBPACK_IMPORTED_MODULE_0__","village$","_tax_component__WEBPACK_IMPORTED_MODULE_3__","_charge_component__WEBPACK_IMPORTED_MODULE_4__","land$","_explore_component__WEBPACK_IMPORTED_MODULE_5__","ExploreComponent","exploreLand","explored","TaxComponent","taxGold","taxed","_angular_core__WEBPACK_IMPORTED_MODULE_13__","ctx_r10","ClanComponent","_angular_material_table__WEBPACK_IMPORTED_MODULE_14__","getGuilds","kingdomGuilds","clans","kingdomGuild","find","guild","kingdomGuilded","guilded","joinClan","joined","leaveClan","_manifest_component__WEBPACK_IMPORTED_MODULE_3__","members","_foundation_component__WEBPACK_IMPORTED_MODULE_2__","moment__WEBPACK_IMPORTED_MODULE_1__","canBeFavored","favorGuild","favored","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_21__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_22__","CLAN_COST","FoundationComponent","images","image","foundateClan","founded","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ManifestComponent","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","BuyComponent","gems","kingdomGem","buyEmporium","bought","EmporiumComponent","_perk_component__WEBPACK_IMPORTED_MODULE_3__","getItems","emporiumItems","getPacks","emporiumPacks","tree$","tree","originalTree","kingdomTree","_buy_component__WEBPACK_IMPORTED_MODULE_0__","strategy","findTree","agriculture","alchemy","architecture","culture","teology","cartography","metalurgy","medicine","forge","science","mysticism","masonry","_plant_component__WEBPACK_IMPORTED_MODULE_4__","branches","afterClosed","node","perk","level","perks","found","i","_angular_core__WEBPACK_IMPORTED_MODULE_0__","disabled_r4","PERK_COST","PerkComponent","increasedPerk","emit","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_1__","PlantComponent","plantTree","planted","routes","path","component","_city_city_component__WEBPACK_IMPORTED_MODULE_0__","_census_census_component__WEBPACK_IMPORTED_MODULE_1__","_army_army_component__WEBPACK_IMPORTED_MODULE_2__","_sorcery_sorcery_component__WEBPACK_IMPORTED_MODULE_3__","_archive_archive_component__WEBPACK_IMPORTED_MODULE_4__","_temple_temple_component__WEBPACK_IMPORTED_MODULE_5__","_tavern_tavern_component__WEBPACK_IMPORTED_MODULE_6__","_auction_auction_component__WEBPACK_IMPORTED_MODULE_7__","_emporium_emporium_component__WEBPACK_IMPORTED_MODULE_8__","_clan_clan_component__WEBPACK_IMPORTED_MODULE_9__","KingdomRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_11__","imports","exports","KingdomModule","_angular_common__WEBPACK_IMPORTED_MODULE_36__","_kingdom_routing_module__WEBPACK_IMPORTED_MODULE_0__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_2__","ngx_ui_tour_md_menu__WEBPACK_IMPORTED_MODULE_37__","ngx_currency__WEBPACK_IMPORTED_MODULE_38__","declarations","_city_city_component__WEBPACK_IMPORTED_MODULE_1__","_census_census_component__WEBPACK_IMPORTED_MODULE_3__","_army_army_component__WEBPACK_IMPORTED_MODULE_4__","_sorcery_sorcery_component__WEBPACK_IMPORTED_MODULE_5__","_sorcery_research_component__WEBPACK_IMPORTED_MODULE_6__","_archive_archive_component__WEBPACK_IMPORTED_MODULE_7__","_archive_report_component__WEBPACK_IMPORTED_MODULE_8__","_temple_temple_component__WEBPACK_IMPORTED_MODULE_9__","_temple_offer_component__WEBPACK_IMPORTED_MODULE_10__","_tavern_tavern_component__WEBPACK_IMPORTED_MODULE_11__","_auction_auction_component__WEBPACK_IMPORTED_MODULE_12__","_city_build_component__WEBPACK_IMPORTED_MODULE_13__","_emporium_emporium_component__WEBPACK_IMPORTED_MODULE_14__","_army_recruit_component__WEBPACK_IMPORTED_MODULE_15__","_temple_dispel_component__WEBPACK_IMPORTED_MODULE_16__","_sorcery_activate_component__WEBPACK_IMPORTED_MODULE_17__","_sorcery_conjure_component__WEBPACK_IMPORTED_MODULE_18__","_census_battle_component__WEBPACK_IMPORTED_MODULE_19__","_auction_bid_component__WEBPACK_IMPORTED_MODULE_20__","_city_tax_component__WEBPACK_IMPORTED_MODULE_21__","_city_charge_component__WEBPACK_IMPORTED_MODULE_22__","_city_explore_component__WEBPACK_IMPORTED_MODULE_23__","_emporium_buy_component__WEBPACK_IMPORTED_MODULE_24__","_army_disband_component__WEBPACK_IMPORTED_MODULE_25__","_tavern_discharge_component__WEBPACK_IMPORTED_MODULE_26__","_census_letter_component__WEBPACK_IMPORTED_MODULE_27__","_clan_clan_component__WEBPACK_IMPORTED_MODULE_28__","_clan_foundation_component__WEBPACK_IMPORTED_MODULE_29__","_clan_manifest_component__WEBPACK_IMPORTED_MODULE_30__","_census_detail_component__WEBPACK_IMPORTED_MODULE_31__","_temple_break_component__WEBPACK_IMPORTED_MODULE_32__","_emporium_perk_component__WEBPACK_IMPORTED_MODULE_33__","_emporium_plant_component__WEBPACK_IMPORTED_MODULE_34__","ArtifactAssignmentType","ActivateComponent","activation","NONE","kingdomArtifacts","artifacts","selectedArtifact","activateArtifact","activated","subtype","spells","CharmAssignmentType","ConjureComponent","conjuration","kingdomCharms","charms","selectedCharm","turnCost","manaCost","kingdomMana","conjureCharm","conjured","multiple","ResearchComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","researchCharm","researched","artifact_r12","charm_r18","SorceryComponent","assignment","_activate_component__WEBPACK_IMPORTED_MODULE_3__","battle","attackArtifacts","defenseArtifacts","_conjure_component__WEBPACK_IMPORTED_MODULE_2__","research","attackCharms","defenseCharms","container","previousContainer","previousIndex","currentIndex","Number","maximumArtifacts","assignArtifact","element","nativeElement","maximumCharms","assignCharm","_research_component__WEBPACK_IMPORTED_MODULE_0__","DischargeComponent","dischargeContract","discharged","ContractAssignmentType","MAXIMUM_CONTRACTS","TavernComponent","kingdomContracts","contracts","attackContracts","ATTACK","defenseContracts","DEFENSE","assignContract","assigned","warning","troop","_discharge_component__WEBPACK_IMPORTED_MODULE_1__","BreakComponent","enchantment","breakEnchantment","broken","DispelComponent","incantation","dispelIncantation","dispelled","OfferComponent","god","mana","population","kingdomPopulation","sacrifice","increment","markAllAsTouched","get","updateValueAndValidity","offerGod","offered","hasOwnProperty","enchantment_r6","incantation_r9","TempleComponent","gods","enchantments","incantations","kingdomGods","kingdomEnchantments","kingdomIncantations","_offer_component__WEBPACK_IMPORTED_MODULE_0__","_dispel_component__WEBPACK_IMPORTED_MODULE_2__","_break_component__WEBPACK_IMPORTED_MODULE_3__"],"sources":["webpack:///src/app/kingdom/archive/archive.component.html","webpack:///src/app/kingdom/archive/archive.component.ts","webpack:///src/app/kingdom/archive/report.component.ts","webpack:///src/app/kingdom/auction/auction.component.html","webpack:///src/app/kingdom/auction/auction.component.ts","webpack:///src/app/kingdom/auction/bid.component.ts","webpack:///src/app/kingdom/census/battle.component.ts","webpack:///src/app/kingdom/census/census.component.html","webpack:///src/app/kingdom/census/census.component.ts","webpack:///src/app/kingdom/census/detail.component.ts","webpack:///src/app/kingdom/census/letter.component.ts","webpack:///src/app/kingdom/city/build.component.ts","webpack:///src/app/kingdom/city/charge.component.ts","webpack:///src/app/kingdom/city/city.component.html","webpack:///src/app/kingdom/city/city.component.ts","webpack:///src/app/kingdom/city/explore.component.ts","webpack:///src/app/kingdom/city/tax.component.ts","webpack:///src/app/kingdom/clan/clan.component.html","webpack:///src/app/kingdom/clan/clan.component.ts","webpack:///src/app/kingdom/clan/foundation.component.ts","webpack:///src/app/kingdom/clan/manifest.component.ts","webpack:///src/app/kingdom/emporium/buy.component.ts","webpack:///src/app/kingdom/emporium/emporium.component.html","webpack:///src/app/kingdom/emporium/emporium.component.ts","webpack:///src/app/kingdom/emporium/perk.component.ts","webpack:///src/app/kingdom/emporium/plant.component.ts","webpack:///src/app/kingdom/kingdom-routing.module.ts","webpack:///src/app/kingdom/kingdom.module.ts","webpack:///src/app/kingdom/sorcery/activate.component.ts","webpack:///src/app/kingdom/sorcery/conjure.component.ts","webpack:///src/app/kingdom/sorcery/research.component.ts","webpack:///src/app/kingdom/sorcery/sorcery.component.html","webpack:///src/app/kingdom/sorcery/sorcery.component.ts","webpack:///src/app/kingdom/tavern/discharge.component.ts","webpack:///src/app/kingdom/tavern/tavern.component.html","webpack:///src/app/kingdom/tavern/tavern.component.ts","webpack:///src/app/kingdom/temple/break.component.ts","webpack:///src/app/kingdom/temple/dispel.component.ts","webpack:///src/app/kingdom/temple/offer.component.ts","webpack:///src/app/kingdom/temple/temple.component.html","webpack:///src/app/kingdom/temple/temple.component.ts"],"sourcesContent":["<div class=\"kingdom-archive table-responsive\" [@fadeInOnEnter]>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/archive.png\" [alt]=\"'kingdom.archive.name' | translate\">\r\n      <mat-card-title>{{ \"kingdom.archive.name\" | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ \"kingdom.archive.description\" | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.archive')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>email</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p>{{ \"kingdom.archive.help\" | translate }}</p>\r\n      <table mat-table matSort [dataSource]=\"data\" matSortActive=\"timestamp\" matSortDirection=\"desc\" tourAnchor=\"tour.archive\" [attr.aria-label]=\"'kingdom.archive.name' | translate\">\r\n\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n\r\n          <ng-container *ngIf=\"column === 'select'; else noSelect\">\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n              <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let letter\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n              <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(letter) : null\" [checked]=\"selection.isSelected(letter)\"></mat-checkbox>\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <ng-template #noSelect>\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n              <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'timestamp'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" [matDatepicker]=\"timestamp\" disabled (dateChange)=\"applyFilter()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"timestamp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #timestamp disabled=\"false\"></mat-datepicker>\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=null; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let letter\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n              <ng-template [ngIf]=\"column === 'from'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"[letter['from'].faction.id, letter['from'].id === uid ? 'legendary' : 'common']\">\r\n                    <div mat-list-avatar [matBadge]=\"!letter.read ? '❕' : undefined\" matBadgePosition=\"above before\">\r\n                      <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"letter['from'].faction.image\" [alt]=\"'table.column.' + column | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ letter['from'].name | translate  }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\">{{ letter['from'].faction.name | translate }}</div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'subject'\">\r\n                {{ letter[column] | translate }}\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'timestamp'\">\r\n                {{ letter[column]?.toMillis() | date:('dateformat.short' | translate) }}\r\n              </ng-template>\r\n\r\n            </mat-cell>\r\n\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let letter; columns: columns\" (click)=\"openReportDialog(letter)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-toolbar>\r\n        <mat-toolbar-row>\r\n          <button mat-mini-fab color=\"primary\" [disabled]=\"!selection.selected.length\" (click)=\"deleteReports()\"><mat-icon>delete</mat-icon></button>\r\n          <span class=\"fill-space\"></span>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n        </mat-toolbar-row>\r\n      </mat-toolbar>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ReportComponent } from './report.component';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport * as moment from 'moment';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-archive',\r\n  templateUrl: './archive.component.html',\r\n  styleUrls: ['./archive.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class ArchiveComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  columns = ['select', 'from', 'subject', 'timestamp'];\r\n  filters: any = {\r\n    from: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    subject: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    timestamp: {\r\n      type: 'timestamp',\r\n      value: null,\r\n    },\r\n  };\r\n  selection: SelectionModel<any> = new SelectionModel<any>(true, []);\r\n  data: MatTableDataSource<any> = new MatTableDataSource([]);\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private notificationService: NotificationService,\r\n    private translateService: TranslateService,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private dateAdapter: DateAdapter<any>,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dateAdapter.setLocale(this.translateService.currentLang);\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/letters`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(letters => {\r\n      this.data = new MatTableDataSource(letters);\r\n      this.data.paginator = this.paginator;\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n    });\r\n  }\r\n\r\n  applyFilter(): void {\r\n    this.data.filter = JSON.stringify({\r\n      from: this.filters.from.value,\r\n      subject: this.filters.subject.value,\r\n      timestamp: this.filters.timestamp.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data && data.from && data.from.name && data.subject\r\n        && this.translateService.instant(data.from.name).toLowerCase().includes(filters.from)\r\n        && this.translateService.instant(data.subject).toString().toLowerCase().includes(filters.subject)\r\n        && (!filters.timestamp || moment(data.timestamp.toMillis()).isBetween(moment(filters.timestamp).startOf('day'), moment(filters.timestamp).endOf('day'), 'days', '[]'));\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  isAllSelected(): boolean {\r\n    return this.data.data.length === this.selection.selected.length;\r\n  }\r\n\r\n  masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.data.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  async openReportDialog(report: any) {\r\n    if (report.data) report.data.join = report.data.hero || report.data.item || report.data.spell || report.data.unit;\r\n    const dialogRef = this.dialog.open(ReportComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: report,\r\n    });\r\n  }\r\n\r\n  async deleteReports() {\r\n    if (this.selection.selected.length) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const fids = this.selection.selected.map(letter => letter.fid);\r\n        await this.apiService.removeLetters(this.uid, fids);\r\n        this.selection.clear();\r\n        this.notificationService.success('kingdom.archive.success');\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.archive.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.archive.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ report.subject | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.from' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"report.from.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"report.from.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ report.from.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ report.from.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <!-- MESSAGE -->\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.message' | translate }}:</div>\r\n      <p>{{ report.message | translate }}</p>\r\n    </div>\r\n    <!-- ESPIONAGE -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.intel\" class=\"espionage\">\r\n      <!-- SUPPLIES -->\r\n      <div matSubheader>{{ 'kingdom.report.resources' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let supply of report.data.intel.supplies\" class=\"common\">\r\n          <div mat-list-avatar [matBadge]=\"supply.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"supply.resource.image\">\r\n          </div>\r\n          <div mat-line>{{ supply.resource.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"supply.resource.description | translate | icon:supply.resource\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- TROOPS -->\r\n      <div matSubheader>{{ 'kingdom.report.troops' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let troop of report.data.intel.troops\" [ngClass]=\"[troop.unit.faction.id, troop.unit.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"troop.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"troop.unit.image\">\r\n          </div>\r\n          <div mat-line>{{ troop.unit.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of troop.unit.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of troop.unit.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of troop.unit.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n            <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"troop.unit.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"troop.unit.resistances && troop.unit.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of troop.unit.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- CONTRACTS -->\r\n      <div matSubheader>{{ 'kingdom.report.contracts' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let contract of report.data.intel.contracts\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"contract.hero.image\">\r\n          </div>\r\n          <div mat-line>{{ contract.hero.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <!-- BUILDINGS -->\r\n      <div matSubheader>{{ 'kingdom.report.buildings' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let building of report.data.intel.buildings\" class=\"common\">\r\n          <div mat-list-avatar [matBadge]=\"building.quantity | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"building.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ building.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <!-- BATTLE -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.logs\">\r\n      <div matSubheader>{{ 'kingdom.report.attacker' | translate }}:<span class=\"fill-space\"></span>{{ 'kingdom.report.defender' | translate }}:</div>\r\n      <mat-list dense>\r\n        <ng-container *ngFor=\"let log of report.data.logs\">\r\n          <!-- ARTIFACTS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerArtifact.item.faction.id, log.attackerArtifact.item.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerArtifact\">\r\n            <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerArtifact.item.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerArtifact.item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.attackerArtifact.item.description | translate | icon:log.attackerArtifact.item\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderArtifact.item.faction.id, log.defenderArtifact.item.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderArtifact\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderArtifact.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderArtifact.item.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderArtifact.item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.defenderArtifact.item.description | translate | icon:log.defenderArtifact.item\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- CHARMS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerCharm.spell.faction.id, log.attackerCharm.spell.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerCharm\">\r\n            <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerCharm.spell.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerCharm.spell.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.attackerCharm.spell.description | translate | icon:log.attackerCharm.spell\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderCharm.spell.faction.id, log.defenderCharm.spell.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderCharm\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderCharm.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderCharm.spell.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderCharm.spell.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"log.defenderCharm.spell.description | translate | icon:log.defenderCharm.spell\"></div>\r\n            <mat-icon>{{ log.success ? 'check' : 'block' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- CONTRACTS -->\r\n          <mat-list-item [ngClass]=\"[log.attackerContract.hero.faction.id, log.attackerContract.hero.legendary ? 'legendary' : 'common', 'lefted']\" *ngIf=\"log.attackerContract\">\r\n            <div mat-list-avatar [matBadge]=\"log.attackerContract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar [src]=\"log.attackerContract.hero.image\">\r\n            </div>\r\n            <div mat-line>{{ log.attackerContract.hero.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"!log.attackerContract.hero.battle\" [innerHTML]=\"log.defenderContract.hero.description | translate | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.attackerContract.hero.battle && log.attackerContract.hero.self\" [innerHTML]=\"'kingdom.report.bonus' | translate:{ family: this.getFamilies(log.attackerContract), attack: log.attackerContract.hero.attackBonus * log.attackerContract.level, defense: log.attackerContract.hero.defenseBonus * log.attackerContract.level, healths: log.attackerContract.hero.healthBonus * log.attackerContract.level } | icon:log.attackerContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.attackerContract.hero.battle && !log.attackerContract.hero.self\" [innerHTML]=\"'kingdom.report.damage' | translate:{ category: this.getCategories(log.attackerContract), damage: log.attackerContract.hero.attack * log.attackerContract.level, casualties: log.totalCasualties | long } | icon:log.attackerContract.hero\"></div>\r\n            <mat-icon>{{ log.attackerContract.hero.battle ? 'star' : 'star_border' }}</mat-icon>\r\n          </mat-list-item>\r\n          <mat-list-item [ngClass]=\"[log.defenderContract.hero.faction.id, log.defenderContract.hero.legendary ? 'legendary' : 'common', 'righted']\" *ngIf=\"log.defenderContract\">\r\n            <div mat-list-avatar [matBadge]=\"log.defenderContract.level | short\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"log.defenderContract.hero.image\">\r\n            </div>\r\n            <div mat-line>{{ log.defenderContract.hero.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"!log.defenderContract.hero.battle\" [innerHTML]=\"log.defenderContract.hero.description | translate | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.defenderContract.hero.battle && log.defenderContract.hero.self\" [innerHTML]=\"'kingdom.report.bonus' | translate:{ family: this.getFamilies(log.defenderContract), attack: (log.defenderContract.hero.attackBonus * log.defenderContract.level) | long, defense: log.defenderContract.hero.defenseBonus * log.defenderContract.level, health: log.defenderContract.hero.healthBonus * log.defenderContract.level } | icon:log.defenderContract.hero\"></div>\r\n            <div mat-line class=\"mat-card-subtitle\" *ngIf=\"log.defenderContract.hero.battle && !log.defenderContract.hero.self\" [innerHTML]=\"'kingdom.report.damage' | translate:{ category: this.getCategories(log.defenderContract), damage: (log.defenderContract.hero.attack * log.defenderContract.level) | long, casualties: log.totalCasualties | long } | icon:log.defenderContract.hero\"></div>\r\n            <mat-icon>{{ log.defenderContract.hero.battle ? 'star' : 'star_border' }}</mat-icon>\r\n          </mat-list-item>\r\n          <!-- TROOPS -->\r\n          <ng-container *ngIf=\"log.attackerTroop && log.defenderTroop\">\r\n            <ng-container *ngIf=\"log.direction === 'attacker-vs-defender'\">\r\n              <mat-list-item [ngClass]=\"[log.attackerTroop.unit.faction.id, log.attackerTroop.unit.legendary ? 'legendary' : 'common', 'lefted']\">\r\n                <div mat-list-avatar [matBadge]=\"(log.attackerTroop.quantity | long) + ' / ' + (log.attackerQuantity | long)\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar [src]=\"log.attackerTroop.unit.image\">\r\n                </div>\r\n                <div mat-line>{{ log.attackerTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.attack' | translate:{ category: '<'+log.attackerCategory.id+'>', quantity: log.attackerQuantity | long, initiative: log.attackerTroop.unit.initiativeWave, attack: (log.attackerTroop.unit.attackWave * log.attackerQuantity) | long, defense: (log.defenderTroop.unit.defenseWave * log.defenderQuantity) | long, health: (log.defenderTroop.unit.healthWave * log.defenderQuantity) | long, casualties: log.defenderCasualties | long } | icon:log.attackerTroop.unit\"></div>\r\n                <mat-icon style=\"transform: rotate(-90deg)\">subdirectory_arrow_left</mat-icon>\r\n              </mat-list-item>\r\n              <mat-list-item [ngClass]=\"[log.defenderTroop.unit.faction.id, log.defenderTroop.unit.legendary ? 'legendary' : 'common', 'righted']\">\r\n                <mat-icon style=\"transform: rotate(90deg)\">subdirectory_arrow_left</mat-icon>\r\n                <div mat-line>{{ log.defenderTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.counterattack' | translate:{ category: '<'+log.defenderCategory.id+'>', quantity: log.defenderTroop.quantity | long, initiative: log.defenderTroop.unit.initiativeWave, attack: (log.defenderTroop.unit.attackWave * log.defenderTroop.quantity) | long, defense: (log.attackerTroop.unit.defenseWave * log.attackerQuantity) | long, health: (log.attackerTroop.unit.healthWave * log.attackerQuantity) | long, casualties: log.attackerCasualties | long } | icon:log.defenderTroop.unit\"></div>\r\n                <div mat-list-avatar [matBadge]=\"(log.defenderTroop.quantity | long) + ' / ' + (log.defenderQuantity | long)\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar [src]=\"log.defenderTroop.unit.image\">\r\n                </div>\r\n              </mat-list-item>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"log.direction === 'defender-vs-attacker'\">\r\n            <mat-list-item [ngClass]=\"[log.defenderTroop.unit.faction.id, log.defenderTroop.unit.legendary ? 'legendary' : 'common', 'righted']\">\r\n                <div mat-list-avatar [matBadge]=\"(log.defenderTroop.quantity | long) + ' / ' + (log.defenderQuantity | long)\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar [src]=\"log.defenderTroop.unit.image\">\r\n                </div>\r\n                <div mat-line>{{ log.defenderTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.attack' | translate:{ category: '<'+log.defenderCategory.id+'>', quantity: log.defenderQuantity | long, initiative: log.defenderTroop.unit.initiativeWave, attack: (log.defenderTroop.unit.attackWave * log.defenderQuantity) | long, defense: (log.attackerTroop.unit.defenseWave * log.attackerQuantity) | long, health: (log.attackerTroop.unit.healthWave * log.attackerQuantity) | long, casualties: log.attackerCasualties | long } | icon:log.defenderTroop.unit\"></div>\r\n                <mat-icon style=\"transform: rotate(90deg)\">subdirectory_arrow_right</mat-icon>\r\n              </mat-list-item>\r\n              <mat-list-item [ngClass]=\"[log.attackerTroop.unit.faction.id, log.attackerTroop.unit.legendary ? 'legendary' : 'common', 'lefted']\">\r\n                <mat-icon style=\"transform: rotate(-90deg)\">subdirectory_arrow_right</mat-icon>\r\n                <div mat-line>{{ log.attackerTroop.unit.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'kingdom.report.counterattack' | translate:{ category: '<'+log.attackerCategory.id+'>', quantity: log.attackerTroop.quantity | long, initiative: log.attackerTroop.unit.initiativeWave, attack: (log.attackerTroop.unit.attackWave * log.attackerTroop.quantity) | long, defense: (log.defenderTroop.unit.defenseWave * log.defenderQuantity) | long, health: (log.defenderTroop.unit.healthWave * log.defenderQuantity) | long, casualties: log.defenderCasualties | long } | icon:log.attackerTroop.unit\"></div>\r\n                <div mat-list-avatar [matBadge]=\"(log.attackerTroop.quantity | long) + ' / ' + (log.attackerQuantity | long)\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar [src]=\"log.attackerTroop.unit.image\">\r\n                </div>\r\n              </mat-list-item>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </mat-list>\r\n    </div>\r\n    <!-- ATTACHMENTS -->\r\n    <div mat-dialog-content *ngIf=\"report.data && report.data.join\">\r\n      <div matSubheader>{{ 'kingdom.report.attachment' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[report.data.join.faction.id, report.data.join.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"(report.data.quantity || report.data.level || report.data.join.level) | short\" matBadgePosition=\"ahove before\">\r\n            <img mat-list-avatar [src]=\"report.data.join.image\">\r\n          </div>\r\n          <div mat-line>{{ report.data.join.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item', 'resource'].includes(report.data.join.type)\" [innerHTML]=\"report.data.join.description | translate | icon:report.data.join\"></div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['unit'].includes(report.data.join.type)\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of report.data.join.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of report.data.join.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of report.data.join.categories\" [src]=\"category.image\">\r\n            <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"report.data.join.legendary\" src=\"/assets/images/icons/legendary.png\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['unit'].includes(report.data.join.type) && report.data.join.categories && report.data.join.categories.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of report.data.join.resistances\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-list-avatar *ngIf=\"report.data.gold\" [matBadge]=\"report.data.gold | short\" matBadgePosition=\"ahove after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gold.png\">\r\n          </div>\r\n          <div mat-list-avatar *ngIf=\"report.data.gems\" [matBadge]=\"report.data.gems | short\" matBadgePosition=\"ahove after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.report.date' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ report.timestamp.toMillis() | date:('dateformat.short' | translate) }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\" cdkFocusInitial>{{ 'kingdom.report.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    p {\r\n      margin: 0;\r\n    }\r\n    ::ng-deep .mat-list-base {\r\n      max-height: none;\r\n    }\r\n    ::ng-deep .mat-dialog-content.espionage {\r\n      max-height: 50vh !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item.righted .mat-list-item-content {\r\n      flex-direction: row-reverse !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item.righted .mat-list-item-content .mat-list-text {\r\n      text-align: right !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-list-text {\r\n      padding-right: 16px !important;\r\n    }\r\n    ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-icon {\r\n      margin: 0 16px !important;\r\n    }\r\n    @media screen and (max-width: 960px) {\r\n      ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content .mat-icon {\r\n        margin: 0 !important;\r\n      }\r\n      ::ng-deep .mat-dialog-content.espionage {\r\n        max-height: 35vh !important;\r\n      }\r\n    }\r\n  `],\r\n})\r\nexport class ReportComponent implements OnInit {\r\n\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public report: any,\r\n    private dialogRef: MatDialogRef<ReportComponent>,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    if (!this.report.read) {\r\n      await this.apiService.readLetter(this.uid, this.report.fid);\r\n    }\r\n  }\r\n\r\n  getFamilies(contract: any): string {\r\n    return contract.hero.families.map((family: any) => `<${family.id}>`).join(', ');\r\n  }\r\n\r\n  getCategories(contract: any): string {\r\n    return contract.hero.categories.map((category: any) => `<${category.id}>`).join(', ');\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-auction table-responsive\" [@fadeInOnEnter]>\r\n  <mat-card>\r\n\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/auction.png\" [alt]=\"'kingdom.auction.name' | translate\">\r\n      <mat-card-title>{{ 'kingdom.auction.name' | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ 'kingdom.auction.description' | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.auction')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>gavel</mat-icon>{{ table.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p [innerHTML]=\"'kingdom.auction.help' | translate | icon\"></p>\r\n      <table mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\" [dataSource]=\"table\" tourAnchor=\"tour.auction\" [attr.aria-label]=\"'kingdom.auction.name' | translate\">\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n          <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n            <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'select'\">\r\n              <mat-select [(ngModel)]=\"filters[column].value\" (selectionChange)=\"applyFilter()\">\r\n                <mat-option value=\"\">{{ 'table.filter.any' | translate }}</mat-option>\r\n                <mat-option *ngFor=\"let option of filters[column].options\" [value]=\"option.value\">{{ option.name | translate }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let auction\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n            <ng-template [ngIf]=\"column === 'name'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"[auction.join.faction.id, auction.join.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"(auction.quantity || auction.level || auction.spell.level) | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"auction.join.image\" [alt]=\"auction.join.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ auction.join.name | translate:{name:auction.name} }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['artifact', 'contract', 'charm'].includes(auction.type)\" [innerHTML]=\"auction.join.description | translate | icon:auction.join\"></div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type)\">\r\n                    <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of auction.join.families\" [src]=\"family.image\" [alt]=\"family.name | translate\">\r\n                    <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of auction.join.skills\" [src]=\"skill.image\" [alt]=\"skill.name | translate\">\r\n                    <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of auction.join.categories\" [src]=\"category.image\" [alt]=\"category.name | translate\">\r\n                    <img [title]=\"'category.legendary.name' | translate\" class=\"icon\" *ngIf=\"auction.join.legendary\" src=\"/assets/images/icons/legendary.png\" [alt]=\"'category.legendary.name' | translate\">\r\n                  </div>\r\n                  <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type) && auction.join.resistances && auction.join.resistances.length\">\r\n                    <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of auction.join.resistances\" [src]=\"category.image\" [alt]=\"'category.resistance.name' | translate\">\r\n                  </div>\r\n                  <div mat-list-avatar [matBadge]=\"auction.gold | long\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/resources/gold.png\" [alt]=\"'resource.gold.name' | translate\"> [alt]=\"'resource.gold.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'faction'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"auction.join.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"auction.join.faction.image\" [alt]=\"auction.join.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ auction.join.faction.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"auction.join.faction.description | translate | icon:auction.join.faction\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'actions'\">\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.auction.bid' | translate }}\" [disabled]=\"auction.kingdom === uid\" (click)=\"openBidDialog(auction, $event)\">\r\n                <mat-icon>gavel</mat-icon>\r\n              </button>\r\n            </ng-template>\r\n\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let auction; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.bid' : null\" (click)=\"openTomeDialog(auction.join)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport * as moment from 'moment';\r\nimport { BidComponent } from './bid.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TomeComponent } from 'src/app/user/encyclopedia/tome.component';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-auction',\r\n  templateUrl: './auction.component.html',\r\n  styleUrls: ['./auction.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class AuctionComponent implements OnInit {\r\n\r\n  columns: string[] = [\r\n    'name',\r\n    'faction',\r\n    'actions',\r\n  ];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    faction: {\r\n      type: 'select',\r\n      value: '',\r\n      options: [],\r\n    },\r\n  };\r\n  table: MatTableDataSource<any> = new MatTableDataSource([]);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>('auctions').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(async auctions => {\r\n      const data = auctions.map((auction: any) => {\r\n        auction.join = auction.hero || auction.item || auction.spell || auction.unit;\r\n        return auction;\r\n      });\r\n      this.table = new MatTableDataSource(data);\r\n      this.table.paginator = this.paginator;\r\n      this.table.sort = this.sort;\r\n      this.table.sortingDataAccessor = this.createSorter();\r\n      this.table.filterPredicate = this.createFilter();\r\n      this.filters.faction.options = [...new Set(data.map((auction: any) => auction.join.faction))];\r\n      this.applyFilter();\r\n      await this.refreshAuctions();\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    this.table.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      faction: this.filters.faction.value,\r\n    });\r\n  }\r\n\r\n  createSorter(): (obj: any, property: string) => any {\r\n    const sorterFunction = (obj: any, property: string): any => {\r\n      if (property === 'name') return this.translateService.instant(obj['join']['name']);\r\n      if (property === 'faction') return this.translateService.instant(obj['join']['faction']['name']);\r\n      return obj[property];\r\n    };\r\n    return sorterFunction;\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return (this.translateService.instant(data.join.name).toLowerCase().includes(filters.name)\r\n        || this.translateService.instant(data.join.description).toLowerCase().includes(filters.name))\r\n        && data.join.faction.id.toLowerCase().includes(filters.faction);\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  async refreshAuctions() {\r\n    if (!this.table.data.length || (this.table.data.length && moment().isAfter(moment(this.table.data[0].auctioned.toMillis())))) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        await this.apiService.refreshAuction();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.auction.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    }\r\n  }\r\n\r\n  openBidDialog(auction: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(BidComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: auction,\r\n    });\r\n  }\r\n\r\n  openTomeDialog(tome: any): void {\r\n    const dialogRef = this.dialog.open(TomeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: tome,\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-bid',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.bid.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.bid.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.bid.data' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[auction.join.faction.id, auction.join.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"(auction.quantity || auction.level || auction.spell.level) | short\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"auction.join.image\">\r\n          </div>\r\n          <div mat-line>{{ auction.join.name | translate:{name:auction.name} }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['artifact', 'contract'].includes(auction.type)\" [innerHTML]=\"auction.join.description | translate | icon:auction.join\"></div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['troop'].includes(auction.type)\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of auction.join.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of auction.join.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of auction.join.categories\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"auction.join.resistances && auction.join.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of auction.join.resistances\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"auction.gold | long\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gold.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.bid.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.gold.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.gold.name' | translate }}\" matInput formControlName=\"gold\">\r\n          <mat-hint>{{ 'kingdom.bid.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.bid.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.bid.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"bid()\">{{ 'kingdom.bid.bid' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BidComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public auction: any,\r\n    private dialogRef: MatDialogRef<BidComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      gold: [Math.floor(this.auction.gold * 1.10), [Validators.required, Validators.min(Math.floor(this.auction.gold * 1.10)), Validators.max(this.kingdomGold.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async bid() {\r\n    if (this.form.valid && this.form.value.gold <= this.kingdomGold.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const bidded = await this.apiService.bidAuction(this.uid, this.auction.fid, this.form.value.gold);\r\n        this.notificationService.success('kingdom.bid.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.bid.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.bid.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FirebaseService } from 'src/app/services/firebase.service';\r\nimport { TroopAssignmentType } from '../army/army.component';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\n\r\nexport enum BattleType {\r\n  'siege' = 'siege',\r\n  'pillage' = 'pillage',\r\n  'assault' = 'assault',\r\n}\r\n\r\nconst BATTLE_TURNS = 2;\r\n\r\n@Component({\r\n  selector: 'app-battle',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.battle.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.battle.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.battle.target' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"kingdom.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"BATTLE_TURNS\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.battle.select' | translate }}:</div>\r\n      <mat-form-field>\r\n        <mat-label>{{ 'kingdom.battle.type' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"attackType\">\r\n          <mat-select-trigger>\r\n            <mat-list dense>\r\n              <mat-list-item>\r\n                <div mat-list-avatar>\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"attackType.image\">\r\n                </div>\r\n                <div mat-line>{{ attackType.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"attackType.description | translate | icon:attackType\"></div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let attack of attackTypes\" [value]=\"attack\">\r\n            <mat-list dense>\r\n              <mat-list-item>\r\n                <div mat-list-avatar>\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"attack.image\">\r\n                </div>\r\n                <div mat-line>{{ attack.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"attack.description | translate | icon:attack\"></div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.battle.cancel' | translate }}</button>\r\n      <div class=\"button-container\">\r\n        <div class=\"spinner-container\" *ngIf=\"loading\"><mat-spinner color=\"primary\" diameter=\"24\"></mat-spinner></div>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"loading\" (click)=\"battle()\" cdkFocusInitial>{{ 'kingdom.battle.attack' | translate }}</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    .list-margened {\r\n      margin-top: 15px;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class BattleComponent implements OnInit {\r\n\r\n  readonly BATTLE_TURNS = BATTLE_TURNS;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  loading: boolean = false;\r\n  attackTypes: any[] = [];\r\n  attackType: any = BattleType.assault;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private dialogRef: MatDialogRef<BattleComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private cacheService: CacheService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const attacks = await this.cacheService.getAttacks();\r\n    this.attackTypes = attacks;\r\n    this.attackType = this.attackTypes[0];\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async battle() {\r\n    this.loading = true;\r\n    if (this.BATTLE_TURNS <= this.kingdomTurn.quantity) {\r\n      try {\r\n        const battled = await this.apiService.battleKingdom(this.uid, this.kingdom.fid, this.attackType.id);\r\n        this.notificationService.success('kingdom.battle.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.battle.error');\r\n      }\r\n    } else {\r\n      this.notificationService.error('kingdom.battle.error');\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-census table-responsive\" [@fadeInOnEnter]>\r\n  <mat-card>\r\n\r\n    <mat-card-header>\r\n      <img mat-card-avatar src=\"/assets/images/cards/census.png\" [alt]=\"'kingdom.census.name' | translate\">\r\n      <mat-card-title>{{ 'kingdom.census.name' | translate }}</mat-card-title>\r\n      <mat-card-subtitle>{{ 'kingdom.census.description' | translate }}</mat-card-subtitle>\r\n      <div class=\"mat-card-extras\">\r\n        <button mat-icon-button (click)=\"this.tutorialService.start('tour.census')\"><mat-icon>help</mat-icon></button>\r\n        <mat-chip-list><mat-chip color=\"primary\"><mat-icon>person</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n      </div>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <p>{{ 'kingdom.census.help' | translate }}</p>\r\n      <table mat-table matSort [dataSource]=\"data\" matSortDisableClear tourAnchor=\"tour.census\" [attr.aria-label]=\"'kingdom.census.name' | translate\">\r\n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n          <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n            <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n            <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n              <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n              <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n\r\n          </mat-header-cell>\r\n\r\n          <mat-cell *matCellDef=\"let kingdom\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n            <ng-template [ngIf]=\"column === 'name'\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"kingdom.faction.image\" [alt]=\"kingdom.faction.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdom.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.power | short\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'clan'\">\r\n              <mat-list dense *ngIf=\"kingdom.clan\">\r\n                <mat-list-item class=\"grey\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"kingdom.clan.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdom.clan.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ kingdom.clan.description }}</div>\r\n                  <div mat-list-avatar [matBadge]=\"kingdom.clan.power | short\" matBadgePosition=\"above after\">\r\n                    <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                  </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n              <div *ngIf=\"!kingdom.clan\" style=\"width: 100%; text-align: center\">-</div>\r\n            </ng-template>\r\n\r\n            <ng-template [ngIf]=\"column === 'actions'\">\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.battle.attack' | translate }}\" [disabled]=\"!canBeAttacked(kingdom) || kingdom.fid === uid\" (click)=\"openAttackDialog(kingdom, $event)\">\r\n                <mat-icon>{{ canBeAttacked(kingdom) ? 'flag' : 'security' }}</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.activate.activate' | translate }}\" [disabled]=\"kingdom.fid === uid\" (click)=\"openActivateDialog(kingdom, $event)\">\r\n                <mat-icon>api</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.conjure.conjure' | translate }}\" [disabled]=\"kingdom.fid === uid\" (click)=\"openConjureDialog(kingdom, $event)\">\r\n                <mat-icon>whatshot</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.letter.name' | translate }}\" (click)=\"openLetterDialog(kingdom, $event)\">\r\n                <mat-icon>mail</mat-icon>\r\n              </button>\r\n              <!--\r\n              <button mat-mini-fab color=\"primary\" title=\"{{ 'world.map.localize' | translate }}\" (click)=\"showInMap(kingdom, $event)\">\r\n                <mat-icon>place</mat-icon>\r\n              </button>\r\n              -->\r\n            </ng-template>\r\n\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let kingdom; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.kingdom' : null\" (click)=\"openDetailDialog(kingdom)\"></mat-row>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation, fadeOutOnLeaveAnimation } from 'angular-animations';\r\nimport { BattleComponent } from './battle.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport * as moment from 'moment';\r\nimport { LetterComponent } from './letter.component';\r\nimport { ActivateComponent } from '../sorcery/activate.component';\r\nimport { ConjureComponent } from '../sorcery/conjure.component';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DetailComponent } from './detail.component';\r\nimport { TourService } from 'ngx-ui-tour-core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-census',\r\n  templateUrl: './census.component.html',\r\n  styleUrls: ['./census.component.scss'],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 250, delay: 250 }),\r\n    fadeOutOnLeaveAnimation({ duration: 250, delay: 250 }),\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class CensusComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  clock: Date = this.store.selectSnapshot(AuthState.getClock);\r\n  protection: number = 8;\r\n  columns = ['name', 'clan', 'actions'];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n    clan: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n  };\r\n  data: MatTableDataSource<any> = new MatTableDataSource();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private router: Router,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>('kingdoms').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(async kingdoms => {\r\n      this.data = new MatTableDataSource(kingdoms.sort((a, b) => b.power - a.power).map((kingdom, index) => {\r\n        return {\r\n          ...kingdom,\r\n          position: index + 1,\r\n        };\r\n      }));\r\n      this.data.paginator = this.paginator;\r\n      this.data.sortingDataAccessor = (obj, property) => property === 'name' ? obj['power'] : obj[property];\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    this.data.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n      clan: this.filters.clan.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data.name.toLowerCase().includes(filters.name)\r\n        && (!filters.clan\r\n          || (data.clan && data.clan.name.toLowerCase().includes(filters.clan)))\r\n          || (data.clan && data.clan.description.toLowerCase().includes(filters.clan));\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  openAttackDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(BattleComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  openLetterDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(LetterComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  openActivateDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(ActivateComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        artifact: null,\r\n        kingdom: kingdom,\r\n      },\r\n    });\r\n  }\r\n\r\n  openConjureDialog(kingdom: any, $event: Event): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(ConjureComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        charm: null,\r\n        kingdom: kingdom,\r\n      },\r\n    });\r\n  }\r\n\r\n  openDetailDialog(kingdom: any): void {\r\n    const dialogRef = this.dialog.open(DetailComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: kingdom,\r\n    });\r\n  }\r\n\r\n  async showInMap(kingdom: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    await this.router.navigate([`/world/map/${kingdom.fid}`]);\r\n  }\r\n\r\n  canBeAttacked(kingdom: any): boolean {\r\n    return kingdom.attacked\r\n      ? moment(this.clock).isAfter(moment(kingdom.attacked.toMillis()))\r\n      : true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.detail.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.detail.kingdom' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"kingdom.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.detail.troops' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let troop of kingdomTroops\" [ngClass]=\"[troop.unit.faction.id, troop.unit.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"troop.unit.image\">\r\n          </div>\r\n          <div mat-line>{{ troop.unit.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">\r\n            <img [title]=\"family.name | translate\" class=\"icon\" *ngFor=\"let family of troop.unit.families\" [src]=\"family.image\">\r\n            <img [title]=\"skill.name | translate\" class=\"icon\" *ngFor=\"let skill of troop.unit.skills\" [src]=\"skill.image\">\r\n            <img [title]=\"category.name | translate\" class=\"icon\" *ngFor=\"let category of troop.unit.categories\" [src]=\"category.image\">\r\n          </div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"troop.unit.resistances && troop.unit.resistances.length\">\r\n            <img [title]=\"('category.resistance.name' | translate) + (category.name | translate)\" class=\"icon grayscale\" *ngFor=\"let category of troop.unit.resistances\" [src]=\"category.image\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\">{{ 'kingdom.detail.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class DetailComponent implements OnInit {\r\n\r\n  kingdomTroops: any[] = [];\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private dialogRef: MatDialogRef<DetailComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.kingdom.id}/troops`, ref => ref.where('assignment', '==', 2)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(troops => {\r\n      this.kingdomTroops = troops;\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-letter',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.letter.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.letter.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.letter.to' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[kingdom.faction.id, kingdom.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"kingdom.position | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"kingdom.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ kingdom.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ kingdom.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.letter.contents' | translate }}:</div>\r\n      <form [formGroup]=\"form\" autocomplete=\"off\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.letter.subject' | translate }}</mat-label>\r\n          <input placeholder=\"{{ 'kingdom.letter.subject' | translate }}\" matInput formControlName=\"subject\">\r\n          <mat-error>{{ 'kingdom.letter.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.letter.message' | translate }}</mat-label>\r\n          <textarea placeholder=\"{{ 'kingdom.letter.message' | translate }}\" matInput rows=\"5\" formControlName=\"message\"></textarea>\r\n          <mat-error>{{ 'kingdom.letter.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.letter.close' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\" (click)=\"send()\">{{ 'kingdom.letter.send' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class LetterComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  form: FormGroup = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public kingdom: any,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<LetterComponent>,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      subject: [null, [Validators.required]],\r\n      message: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  reset(): void {\r\n    this.form.reset();\r\n  }\r\n\r\n  async send() {\r\n    if (this.form.valid) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const sent = await this.apiService.sendLetter(this.kingdom.fid, this.form.value.subject, this.form.value.message, this.uid);\r\n        this.notificationService.success('kingdom.letter.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.letter.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.letter.error');\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-build',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.build.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.build.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.build.building' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"building.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"building.quantity\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"building.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ building.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n          <div mat-list-avatar [matBadge]=\"Math.ceil((kingdomWorkshop.quantity + 1) / building.structure.turnRatio) + ('resource.turn.ratio' | translate)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.build.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.land.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.land.name' | translate }}\" matInput formControlName=\"quantity\">\r\n          <mat-hint>{{ 'kingdom.build.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.build.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.build.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ gold() | long}}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/land.png\">{{ land() | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ turn() | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.build.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"demolish()\">{{ 'kingdom.build.demolish' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"build()\">{{ 'kingdom.build.build' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BuildComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  kingdomLand: any = this.store.selectSnapshot(AuthState.getKingdomLand);\r\n  kingdomWorkshop: any = this.store.selectSnapshot(AuthState.getKingdomWorkshop);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  Math: any = Math;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public building: any,\r\n    private dialogRef: MatDialogRef<BuildComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      quantity: [null, [Validators.required, Validators.min(1), Validators.max(Math.max(this.kingdomTurn.quantity, this.kingdomLand.quantity,  this.kingdomGold.quantity))]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async build() {\r\n    if (this.form.valid && this.land() <= this.kingdomLand.quantity && this.gold() <= this.kingdomGold.quantity && this.turn() <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const built = await this.apiService.buildStructure(this.uid, this.building.fid, this.form.value.quantity);\r\n        this.notificationService.success('kingdom.build.built', built);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.build.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.build.error');\r\n    }\r\n  }\r\n\r\n  async demolish() {\r\n    if (this.form.valid && this.land() <= this.building.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const demolished = await this.apiService.demolishStructure(this.uid, this.building.fid, this.form.value.quantity);\r\n        this.notificationService.success('kingdom.build.demolished', demolished);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.build.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.build.error');\r\n    }\r\n  }\r\n\r\n  turn() {\r\n    return Math.ceil(this.form.value.quantity / Math.ceil((this.kingdomWorkshop.quantity + 1) / this.building.structure.turnRatio));\r\n  }\r\n\r\n  gold() {\r\n    return this.form.value.quantity * this.building.structure.goldCost;\r\n  }\r\n\r\n  land() {\r\n    return this.form.value.quantity || 0;\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-charge',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.charge.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.charge.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.charge.source' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(node$ | async)?.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(node$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"(node$ | async)?.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ (node$ | async)?.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(node$ | async)?.structure.description | translate | icon:(node$ | async)?.structure\"></div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.charge.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.charge.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.charge.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.charge.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"charge()\">{{ 'kingdom.charge.charge' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ChargeComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public node$: Observable<any>,\r\n    private dialogRef: MatDialogRef<ChargeComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async charge() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const charged = await this.apiService.chargeMana(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.charge.success', charged);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.charge.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.charge.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-city\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/city.png\" [alt]=\"'kingdom.city.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.city.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.city.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.city')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>{{ (kingdomBuildings$ | async)?.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.buildings' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.city\">\r\n          <button mat-list-item *ngFor=\"let building of kingdomBuildings$ | async\" (click)=\"openBuildDialog(building)\" class=\"common\">\r\n            <div mat-list-avatar [matBadge]=\"building.quantity | long\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"building.structure.image\" [alt]=\"building.structure.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ building.structure.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"building.structure.description | translate | icon:building.structure\"></div>\r\n            <div mat-list-avatar [matBadge]=\"Math.ceil(((workshop$ | async)?.quantity + 1) / building.structure.turnRatio) + ('resource.turn.ratio' | translate)\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.city.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/tax.png\" [alt]=\"'kingdom.tax.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.tax.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.tax.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.tax')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.tax.tax' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.tax\">\r\n              <button mat-list-item *ngIf=\"village$\" (click)=\"openTaxDialog(village$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(village$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"(village$ | async)?.structure.image\" [alt]=\"(village$ | async)?.structure.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ (village$ | async)?.structure.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(village$ | async)?.structure.description | translate | icon:(village$ | async)?.structure\"></div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.tax.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/charge.png\" [alt]=\"'kingdom.charge.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.charge.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.charge.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.charge')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.charge.charge' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.charge\">\r\n              <button mat-list-item *ngIf=\"node$\" (click)=\"openChargeDialog(node$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(node$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"(node$ | async)?.structure.image\" [alt]=\"(village$ | async)?.structure.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ (node$ | async)?.structure.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(node$ | async)?.structure.description | translate | icon:(node$ | async)?.structure\"></div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\"> [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.charge.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/explore.png\" [alt]=\"'kingdom.explore.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.explore.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.explore.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.explore')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>store</mat-icon>1</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'kingdom.explore.explore' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.explore\">\r\n              <button mat-list-item *ngIf=\"land$ | async\" (click)=\"openExploreDialog(land$)\" class=\"common\">\r\n                <div mat-list-avatar [matBadge]=\"(land$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" src=\"/assets/images/resources/land.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n                <div mat-line>{{ 'resource.land.name' | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\">{{ 'resource.land.description' | translate }}</div>\r\n                <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.explore.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { BuildComponent } from './build.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { TaxComponent } from './tax.component';\r\nimport { ChargeComponent } from './charge.component';\r\nimport { ExploreComponent } from './explore.component';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\nexport class CityComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  @Select(AuthState.getKingdomBuildings) kingdomBuildings$: Observable<any[]>;\r\n  @Select(AuthState.getKingdomVillage) village$: Observable<any>;\r\n  @Select(AuthState.getKingdomNode) node$: Observable<any>;\r\n  @Select(AuthState.getKingdomWorkshop) workshop$: Observable<any>;\r\n  @Select(AuthState.getKingdomLand) land$: Observable<any>;\r\n  @Select(AuthState.getKingdomTurn) turn$: Observable<any>;\r\n  Math: any = Math;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    /*\r\n    combineLatest([\r\n      this.kingdomBuildings$,\r\n      this.village$,\r\n      this.node$,\r\n      this.workshop$,\r\n      this.land$,\r\n      this.turn$,\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(() => {\r\n      this.tutorialService.ready('city');\r\n    });\r\n    */\r\n  }\r\n\r\n  openBuildDialog(building: any): void {\r\n    const dialogRef = this.dialog.open(BuildComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: building,\r\n    });\r\n  }\r\n\r\n  openTaxDialog(village$: any): void {\r\n    const dialogRef = this.dialog.open(TaxComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: village$,\r\n    });\r\n  }\r\n\r\n  openChargeDialog(node$: any): void {\r\n    const dialogRef = this.dialog.open(ChargeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: node$,\r\n    });\r\n  }\r\n\r\n  openExploreDialog(land$: Observable<any>): void {\r\n    const dialogRef = this.dialog.open(ExploreComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: land$,\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-explore',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.explore.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.explore.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.explore.discovery' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(land$ | async).resource.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(land$ | async).quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/land.png\">\r\n          </div>\r\n          <div mat-line>{{ 'resource.land.name' | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ 'resource.land.description' | translate }}</div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.explore.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.explore.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.explore.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.explore.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"explore()\">{{ 'kingdom.explore.explore' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ExploreComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public land$: Observable<any>,\r\n    private dialogRef: MatDialogRef<ExploreComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async explore() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const explored = await this.apiService.exploreLand(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.explore.success', explored);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.explore.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.explore.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-tax',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.tax.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.tax.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.tax.source' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"(village$ | async)?.structure.faction.id\">\r\n          <div mat-list-avatar [matBadge]=\"(village$ | async)?.quantity | long\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"(village$ | async)?.structure.image\">\r\n          </div>\r\n          <div mat-line>{{ (village$ | async)?.structure.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"(village$ | async)?.structure.description | translate | icon:(village$ | async)?.structure\"></div>\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.tax.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.tax.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.tax.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.tax.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"tax()\">{{ 'kingdom.tax.tax' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class TaxComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public village$: Observable<any>,\r\n    private dialogRef: MatDialogRef<TaxComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async tax() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const taxed = await this.apiService.taxGold(this.uid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.tax.success', taxed);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tax.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.tax.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-clan table-responsive\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/clan.png\" [alt]=\"'kingdom.clan.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.clan.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.clan.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.clan')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>people</mat-icon>{{ data.data.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.clan.help' | translate\"></p>\r\n        <table mat-table matSort [dataSource]=\"data\" matSortDisableClear tourAnchor=\"tour.clan\" [attr.aria-label]=\"'kingdom.clan.name' | translate\">\r\n          <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of columns\">\r\n            <mat-header-cell class=\"table-header\" *matHeaderCellDef>\r\n\r\n              <div mat-sort-header>{{ 'table.column.' + column | translate }}</div>\r\n\r\n              <mat-form-field class=\"table-filter\" *ngIf=\"filters[column] && filters[column].type === 'text'\">\r\n                <input matInput [(ngModel)]=\"filters[column].value\" (keyup)=\"applyFilter()\" autocomplete=\"off\">\r\n                <button mat-button *ngIf=\"filters[column].value\" matSuffix mat-icon-button (click)=\"filters[column].value=''; applyFilter()\">\r\n                  <mat-icon>close</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n\r\n            </mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let clan\" [attr.data-label]=\"'table.column.' + column | translate\">\r\n\r\n              <ng-template [ngIf]=\"column === 'name'\">\r\n                <mat-list dense>\r\n                  <mat-list-item [ngClass]=\"clan.fid === kingdomClan$ ? 'legendary': 'common'\">\r\n                    <div mat-list-avatar>\r\n                      <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"clan.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n                    </div>\r\n                    <div mat-line>{{ clan.name }}</div>\r\n                    <div mat-line class=\"mat-card-subtitle\">{{ clan.description }}</div>\r\n                    <div mat-list-avatar [matBadge]=\"clan.power | short\" matBadgePosition=\"above after\">\r\n                      <img mat-list-avatar src=\"/assets/images/icons/power.png\" [alt]=\"'icon.power.name' | translate\">\r\n                    </div>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </ng-template>\r\n\r\n              <ng-template [ngIf]=\"column === 'actions'\">\r\n                <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.join' | translate }}\" (click)=\"joinClan(clan, $event)\" [disabled]=\"clan.fid === (kingdomClan$ | async)?.fid\">\r\n                  <mat-icon>thumb_up</mat-icon>\r\n                </button>\r\n                <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.leave' | translate }}\" (click)=\"leaveClan(clan, $event)\" [disabled]=\"clan.fid !== (kingdomClan$ | async)?.fid\">\r\n                  <mat-icon>thumb_down</mat-icon>\r\n                </button>\r\n              </ng-template>\r\n\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let clan; columns: columns; let i = index\" [tourAnchor]=\"i === 0 ? 'tour.kingdom' : null\" (click)=\"openManifestDialog(clan)\"></mat-row>\r\n        </table>\r\n\r\n        <mat-toolbar>\r\n          <mat-toolbar-row>\r\n            <button mat-mini-fab color=\"primary\" title=\"{{ 'kingdom.clan.found' | translate }}\" (click)=\"openFoundationDialog()\" [disabled]=\"(kingdomClan$ | async)\"><mat-icon>thumbs_up_down</mat-icon></button>\r\n            <span class=\"fill-space\"></span>\r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          </mat-toolbar-row>\r\n        </mat-toolbar>\r\n\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/guild.png\" [alt]=\"'kingdom.guild.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.guild.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.guild.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.guild')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>shield</mat-icon>{{ kingdomGuilds.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.guild.help' | translate\"></p>\r\n        <div matSubheader>{{ 'card.list.guilds' | translate }}:</div>\r\n        <mat-form-field tourAnchor=\"tour.guild\">\r\n          <mat-label>{{ 'kingdom.guild.select' | translate }}</mat-label>\r\n          <mat-select [(ngModel)]=\"kingdomGuild\">\r\n            <mat-select-trigger *ngIf=\"kingdomGuild\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"kingdomGuild.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"kingdomGuild.image\" [alt]=\"kingdomGuild.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ kingdomGuild.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"kingdomGuild.description | translate | icon:kingdomGuild\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-select-trigger>\r\n            <mat-option *ngFor=\"let guild of kingdomGuilds\" [value]=\"guild\">\r\n              <mat-list dense>\r\n                <mat-list-item [ngClass]=\"guild.faction.id\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"guild.image\" [alt]=\"guild.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ guild.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"guild.description | translate | icon:guild\"></div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!kingdomGuild || !canBeFavored()\" (click)=\"favorGuild()\" cdkFocusInitial>\r\n          {{ canBeFavored() ? ('kingdom.guild.favor' | translate) : kingdomGuilded | date:('dateformat.short' | translate) }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { fadeInOnEnterAnimation, fadeOutOnLeaveAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport * as moment from 'moment';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FoundationComponent } from './foundation.component';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { ManifestComponent } from './manifest.component';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\n@Component({\r\n  selector: 'app-clan',\r\n  templateUrl: './clan.component.html',\r\n  styleUrls: ['./clan.component.scss'],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 250, delay: 250 }),\r\n    fadeOutOnLeaveAnimation({ duration: 250, delay: 250 }),\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class ClanComponent implements OnInit {\r\n\r\n  kingdomGuilds: any[] = [];\r\n  kingdomGuild: any = null;\r\n  kingdomClan$: Observable<any> = this.store.select(AuthState.getKingdomClan);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGuilded: any = null;\r\n  columns = ['name', 'actions'];\r\n  filters: any = {\r\n    name: {\r\n      type: 'text',\r\n      value: '',\r\n    },\r\n  };\r\n  data: MatTableDataSource<any> = new MatTableDataSource();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private cacheService: CacheService,\r\n    private angularFirestore: AngularFirestore,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.kingdomGuilds = await this.cacheService.getGuilds();\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>('clans').valueChanges({ idField: 'fid' }),\r\n      this.store.select(AuthState.getKingdomGuild).pipe(map(((data: string) => JSON.parse(data)))),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([clans, kingdomGuild]) => {\r\n      this.data = new MatTableDataSource(clans);\r\n      this.data.paginator = this.paginator;\r\n      this.data.sortingDataAccessor = (obj, property) => property === 'name' ? obj['power'] : obj[property];\r\n      this.data.sort = this.sort;\r\n      this.data.filterPredicate = this.createFilter();\r\n      this.applyFilter();\r\n      if (kingdomGuild) {\r\n        this.kingdomGuild = this.kingdomGuilds.find(guild => guild.id === kingdomGuild.guild.id);\r\n        this.kingdomGuilded = kingdomGuild.guilded;\r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(): void {\r\n    this.data.filter = JSON.stringify({\r\n      name: this.filters.name.value,\r\n    });\r\n  }\r\n\r\n  createFilter(): (data: any, filter: string) => boolean {\r\n    const filterFunction = (data: any, filter: string): boolean => {\r\n      const filters = JSON.parse(filter);\r\n      return data.name.toLowerCase().includes(filters.name);\r\n    };\r\n    return filterFunction;\r\n  }\r\n\r\n  async joinClan(clan: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const joined = await this.apiService.joinClan(this.uid, clan.fid);\r\n      this.notificationService.success('kingdom.clan.success');\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.clan.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  async leaveClan(clan: any, $event: Event) {\r\n    $event.stopPropagation();\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const joined = await this.apiService.leaveClan(this.uid, clan.fid);\r\n      this.notificationService.success('kingdom.clan.success');\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.clan.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  openManifestDialog(clan: any): void {\r\n    const dialogRef = this.dialog.open(ManifestComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: { ...clan, members: [] },\r\n    });\r\n  }\r\n\r\n  openFoundationDialog(): void {\r\n    const dialogRef = this.dialog.open(FoundationComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: null,\r\n    });\r\n  }\r\n\r\n  canBeFavored(): boolean {\r\n    return this.kingdomGuilded\r\n      ? moment(this.store.selectSnapshot(AuthState.getClock)).isAfter(moment(this.kingdomGuilded))\r\n      : false;\r\n  }\r\n\r\n  async favorGuild() {\r\n    if (this.kingdomGuild && this.canBeFavored()) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const favored = await this.apiService.favorGuild(this.uid, this.kingdomGuild.id);\r\n        this.notificationService.success('kingdom.guild.success');\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.guild.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.guild.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nconst CLAN_COST = 1000000;\r\n\r\n@Component({\r\n  selector: 'app-foundation',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.foundation.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.foundation.description' | translate}}</p>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.foundation.information' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.image' | translate }}</mat-label>\r\n          <mat-select formControlName=\"image\">\r\n            <mat-select-trigger>\r\n              <mat-list dense>\r\n                <mat-list-item class=\"common\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"form.value.image\">\r\n                  </div>\r\n                  <div mat-line>{{ form.value.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ form.value.description }}</div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-select-trigger>\r\n            <mat-option *ngFor=\"let image of images\" [value]=\"image\">\r\n              <mat-list dense>\r\n                <mat-list-item class=\"common\">\r\n                  <div mat-list-avatar>\r\n                    <img mat-list-avatar [src]=\"image\">\r\n                  </div>\r\n                  <div mat-line>{{ form.value.name }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\">{{ form.value.description }}</div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.rubric' | translate }}</mat-label>\r\n          <input placeholder=\"{{ 'kingdom.foundation.rubric' | translate }}\" matInput formControlName=\"name\">\r\n          <mat-error>{{ 'kingdom.foundation.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.foundation.motto' | translate }}</mat-label>\r\n          <textarea placeholder=\"{{ 'kingdom.foundation.motto' | translate }}\" matInput rows=\"2\" formControlName=\"description\"></textarea>\r\n          <mat-error>{{ 'kingdom.foundation.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.foundation.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ CLAN_COST | long}}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.foundation.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"foundation()\">{{ 'kingdom.foundation.found' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class FoundationComponent implements OnInit {\r\n\r\n  form: FormGroup = null;\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  images: string[] = [];\r\n  CLAN_COST = CLAN_COST;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FoundationComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.images = [\r\n      '/assets/images/clans/crow.png',\r\n      '/assets/images/clans/axe.png',\r\n      '/assets/images/clans/hat.png',\r\n      '/assets/images/clans/helmet.png',\r\n      '/assets/images/clans/rip.png',\r\n    ];\r\n    this.form = this.formBuilder.group({\r\n      image: [this.images[0], [Validators.required]],\r\n      name: [null, [Validators.required, Validators.maxLength(50)]],\r\n      description: [null, [Validators.required, Validators.maxLength(100)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async foundation() {\r\n    if (this.form.valid && CLAN_COST <= this.kingdomGold.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const founded = await this.apiService.foundateClan(this.uid, this.form.value.name, this.form.value.description, this.form.value.image);\r\n        this.notificationService.success('kingdom.foundation.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.foundation.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.foundation.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\n\r\n@Component({\r\n  selector: 'app-manifest',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.manifest.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.clan' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"common\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"clan.image\">\r\n          </div>\r\n          <div mat-line>{{ clan.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ clan.description }}</div>\r\n          <div mat-list-avatar [matBadge]=\"clan.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.leader' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"clan.leader.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"clan.leader.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ clan.leader.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ clan.leader.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"clan.leader.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.manifest.members' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item *ngFor=\"let member of clan.members\" [ngClass]=\"member.faction.id\">\r\n          <div mat-list-avatar>\r\n            <img mat-list-avatar [src]=\"member.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ member.name }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ member.faction.name | translate }}</div>\r\n          <div mat-list-avatar [matBadge]=\"member.power | short\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/icons/power.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"close()\">{{ 'kingdom.manifest.close' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ],\r\n})\r\n@UntilDestroy()\r\nexport class ManifestComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public clan: any,\r\n    private dialogRef: MatDialogRef<ManifestComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`clans/${this.clan.fid}/members`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(members => {\r\n      this.clan.members = members;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-buy',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.buy.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.buy.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.buy.artifact' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[item.faction.id, item.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"1\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"item.image\">\r\n          </div>\r\n          <div mat-line>{{ item.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"item.description | translate | icon:item\"></div>\r\n          <div mat-list-avatar [matBadge]=\"item.gems | long\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.buy.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"item.gems > kingdomGem.quantity\" (click)=\"buy()\" cdkFocusInitial>{{ 'kingdom.buy.buy' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n  `],\r\n})\r\nexport class BuyComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGem: any = this.store.selectSnapshot(AuthState.getKingdomGem);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public item: any,\r\n    private dialogRef: MatDialogRef<BuyComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async buy() {\r\n    if (this.item.gems <= this.kingdomGem.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const bought = await this.apiService.buyEmporium(this.uid, this.item.id);\r\n        this.notificationService.success('kingdom.emporium.success', bought);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.emporium.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.emporium.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-emporium\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/emporium.png\" [alt]=\"'kingdom.emporium.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.emporium.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.emporium.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.emporium')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>sell</mat-icon>{{ emporiumItems.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.emporium\">\r\n          <button mat-list-item *ngFor=\"let item of emporiumItems\" (click)=\"openBuyDialog(item)\" [ngClass]=\"item.legendary ? 'legendary' : 'common'\">\r\n            <div mat-list-avatar matBadge=\"1\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"item.image\" [alt]=\"item.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ item.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"item.description | translate | icon:item\"></div>\r\n            <div mat-list-avatar [matBadge]=\"item.gems\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/resources/gem.png\" [alt]=\"'resource.gem.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.emporium.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/tree.png\" [alt]=\"'kingdom.tree.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.tree.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.tree.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.tree')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>diamond</mat-icon>{{ PERK_COST }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"tree\" tourAnchor=\"tour.tree\">\r\n        <app-perk [perk]=\"kingdomTree\" [disabled]=\"false\" *ngIf=\"kingdomTree\" (increasedPerk)=\"increaseGems($event)\"></app-perk>\r\n      </mat-card-content>\r\n\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.tree.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions>\r\n        <span class=\"fill-space\"></span>\r\n        <button mat-button (click)=\"resetTree()\">{{ 'kingdom.tree.reset' | translate }}</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!gems\" (click)=\"openPlantDialog()\">{{ 'kingdom.tree.save' | translate }} ( {{ gems }} <img class=\"mat-icon\" src=\"/assets/images/resources/gem.png\" [alt]=\"'resource.gem.name' | translate\"> )</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/mining.png\" [alt]=\"'kingdom.mining.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.mining.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.mining.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.mining')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>redeem</mat-icon>{{ emporiumPacks.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.packs' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.mining\">\r\n          <button mat-list-item *ngFor=\"let pack of emporiumPacks\" class=\"common\" disabled>\r\n            <div mat-list-avatar [matBadge]=\"pack.quantity\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"pack.image\" [alt]=\"pack.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ pack.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"pack.description | translate | icon:pack\"></div>\r\n            <div mat-list-avatar [matBadge]=\"pack.money + '€'\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar src=\"/assets/images/stores/merchant.png\" [alt]=\"'store.merchant.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.mining.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { CacheService } from 'src/app/services/cache.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BuyComponent } from './buy.component';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { Observable } from 'rxjs';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { PERK_COST } from './perk.component';\r\nimport { PlantComponent } from './plant.component';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-emporium',\r\n  templateUrl: './emporium.component.html',\r\n  styleUrls: ['./emporium.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class EmporiumComponent implements OnInit {\r\n\r\n  PERK_COST = PERK_COST;\r\n\r\n  @Select(AuthState.getKingdomTree) tree$: Observable<any>;\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  gems: number = 0;\r\n  kingdomTree: any = null;\r\n  originalTree: any = null;\r\n  emporiumItems: any[] = [];\r\n  emporiumPacks: any[] = [];\r\n\r\n  constructor(\r\n    private cacheService: CacheService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n    // private angularFirestore: AngularFirestore,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.emporiumItems = (await this.cacheService.getItems()).filter((item: any) => item.gems > 0);\r\n    this.emporiumPacks = (await this.cacheService.getPacks()).sort((a: any, b: any) => a.quantity - b.quantity);\r\n    this.tree$.pipe(untilDestroyed(this)).subscribe((tree: any) => {\r\n      this.originalTree = tree;\r\n      this.kingdomTree = JSON.parse(JSON.stringify(tree));\r\n    });\r\n    /*\r\n    this.angularFirestore.doc<any>('perks/strategy').valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(tree => {\r\n      this.originalTree = tree;\r\n      this.kingdomTree = JSON.parse(JSON.stringify(tree));\r\n    });\r\n    */\r\n  }\r\n\r\n  openBuyDialog(item: any): void {\r\n    const dialogRef = this.dialog.open(BuyComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: item,\r\n    });\r\n  }\r\n\r\n  openPlantDialog(): void {\r\n    const tree = {\r\n      strategy: this.findTree(this.kingdomTree, 'strategy'),\r\n      agriculture: this.findTree(this.kingdomTree, 'agriculture'),\r\n      alchemy: this.findTree(this.kingdomTree, 'alchemy'),\r\n      architecture: this.findTree(this.kingdomTree, 'architecture'),\r\n      culture: this.findTree(this.kingdomTree, 'culture'),\r\n      teology: this.findTree(this.kingdomTree, 'teology'),\r\n      cartography: this.findTree(this.kingdomTree, 'cartography'),\r\n      metalurgy: this.findTree(this.kingdomTree, 'metalurgy'),\r\n      medicine: this.findTree(this.kingdomTree, 'medicine'),\r\n      forge: this.findTree(this.kingdomTree, 'forge'),\r\n      science: this.findTree(this.kingdomTree, 'science'),\r\n      mysticism: this.findTree(this.kingdomTree, 'mysticism'),\r\n      masonry: this.findTree(this.kingdomTree, 'masonry'),\r\n    };\r\n    const dialogRef = this.dialog.open(PlantComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        branches: tree,\r\n        gems: this.gems,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().pipe(untilDestroyed(this)).subscribe((reset: boolean) => {\r\n      if (reset) {\r\n        this.gems = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  findTree(node: any, perk: string): number {\r\n    if (node.id === perk) {\r\n      return node.level;\r\n    } else if (node.perks) {\r\n      let found = null;\r\n      for (let i = 0; found === null && i < node.perks.length; i++) {\r\n        found = this.findTree(node.perks[i], perk);\r\n      }\r\n      return found;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  increaseGems($event: number): void {\r\n    this.gems += $event;\r\n  }\r\n\r\n  resetTree(): void {\r\n    this.kingdomTree = JSON.parse(JSON.stringify(this.originalTree));\r\n    this.gems = 0;\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewChildren, QueryList, Output, EventEmitter } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\n\r\nexport const PERK_COST: number = 5;\r\n\r\n@Component({\r\n  selector: 'app-perk',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"tree; context: { perk: perk, disabled: disabled }\"></ng-container>\r\n    <ng-template #tree let-perk=\"perk\" let-disabled=\"disabled\">\r\n      <div class=\"perk\" [matTooltip]=\"(perk.name | translate).toUpperCase() + '\\n' + (perk.description | translate)\" matTooltipPosition=\"below\" #tooltip>\r\n        <button mat-fab color=\"primary\" [matBadge]=\"perk.level + '/' + perk.max\" matBadgePosition=\"before\" matBadgeColor=\"primary\" [disabled]=\"disabled\" (click)=\"increasePerk(perk)\">\r\n          <img class=\"perk-image\" [src]=\"perk.image\">\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"perk.perks && perk.perks.length\" class=\"perks\">\r\n        <ng-container *ngFor=\"let child of perk.perks\">\r\n          <ng-container *ngTemplateOutlet=\"tree; context: { perk: child, disabled: perk.level <= 0 }\"></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    .perk {\r\n      display: inline-block;\r\n      margin: 10px 5px;\r\n    }\r\n    .perk button {\r\n      transition: all 0.5s ease;\r\n    }\r\n    ::ng-deep .mat-fab .mat-button-wrapper {\r\n      padding: 0;\r\n      line-height: 0;\r\n    }\r\n    ::ng-deep .mat-fab .mat-button-wrapper .perk-image {\r\n      width: 100%;\r\n      height: auto;\r\n      border-radius: 50%;\r\n    }\r\n    .perk button:disabled {\r\n      filter: grayscale(100%);\r\n    }\r\n    .perks {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      order: 999;\r\n      justify-content: center;\r\n    }\r\n  `],\r\n})\r\nexport class PerkComponent {\r\n\r\n  @Input() perk: any;\r\n  @Input() disabled: boolean;\r\n  @Output() increasedPerk = new EventEmitter<number>();\r\n\r\n  @ViewChildren(MatTooltip) tooltips: QueryList<MatTooltip>;\r\n\r\n  increasePerk(perk: any): void {\r\n    if (perk.level < perk.max) {\r\n      perk.level++;\r\n      this.increasedPerk.emit(PERK_COST);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-plant',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.plant.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.plant.help' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.plant.costs' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"grey common\">\r\n          <div mat-list-avatar [matBadge]=\"tree.gems\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/gem.png\">\r\n          </div>\r\n          <div mat-line>{{ 'resource.gem.name' | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"'resource.gem.description' | translate\"></div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.plant.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"tree.gems > kingdomGem.quantity\" (click)=\"plant()\" cdkFocusInitial>{{ 'kingdom.plant.plant' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class PlantComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGem: any = this.store.selectSnapshot(AuthState.getKingdomGem);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public tree: any,\r\n    private dialogRef: MatDialogRef<PlantComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  close(reset: boolean = false): void {\r\n    this.dialogRef.close(reset);\r\n  }\r\n\r\n  async plant(): Promise<void> {\r\n    if (this.tree.gems <= this.kingdomGem.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const planted = await this.apiService.plantTree(this.uid, this.tree.branches, this.tree.gems);\r\n        this.notificationService.success('kingdom.tree.success', planted);\r\n        this.close(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tree.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.tree.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CityComponent } from './city/city.component';\r\nimport { CensusComponent } from './census/census.component';\r\nimport { ArmyComponent } from './army/army.component';\r\nimport { SorceryComponent } from './sorcery/sorcery.component';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { TempleComponent } from './temple/temple.component';\r\nimport { TavernComponent } from './tavern/tavern.component';\r\nimport { AuctionComponent } from './auction/auction.component';\r\nimport { EmporiumComponent } from './emporium/emporium.component';\r\nimport { ClanComponent } from './clan/clan.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'city', component: CityComponent },\r\n  { path: 'census', component: CensusComponent },\r\n  { path: 'army', component: ArmyComponent },\r\n  { path: 'sorcery', component: SorceryComponent },\r\n  { path: 'archive', component: ArchiveComponent },\r\n  { path: 'temple', component: TempleComponent },\r\n  { path: 'tavern', component: TavernComponent },\r\n  { path: 'auction', component: AuctionComponent },\r\n  { path: 'emporium', component: EmporiumComponent },\r\n  { path: 'clan', component: ClanComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class KingdomRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KingdomRoutingModule } from './kingdom-routing.module';\r\nimport { CityComponent } from './city/city.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CensusComponent } from './census/census.component';\r\nimport { ArmyComponent } from './army/army.component';\r\nimport { SorceryComponent } from './sorcery/sorcery.component';\r\nimport { ResearchComponent } from './sorcery/research.component';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { ReportComponent } from './archive/report.component';\r\nimport { TempleComponent } from './temple/temple.component';\r\nimport { OfferComponent } from './temple/offer.component';\r\nimport { TavernComponent } from './tavern/tavern.component';\r\nimport { AuctionComponent } from './auction/auction.component';\r\nimport { BuildComponent } from './city/build.component';\r\nimport { EmporiumComponent } from './emporium/emporium.component';\r\nimport { RecruitComponent } from './army/recruit.component';\r\nimport { DispelComponent } from './temple/dispel.component';\r\nimport { ActivateComponent } from './sorcery/activate.component';\r\nimport { ConjureComponent } from './sorcery/conjure.component';\r\nimport { BattleComponent } from './census/battle.component';\r\nimport { BidComponent } from './auction/bid.component';\r\nimport { TaxComponent } from './city/tax.component';\r\nimport { ChargeComponent } from './city/charge.component';\r\nimport { ExploreComponent } from './city/explore.component';\r\nimport { BuyComponent } from './emporium/buy.component';\r\nimport { DisbandComponent } from './army/disband.component';\r\nimport { DischargeComponent } from './tavern/discharge.component';\r\nimport { LetterComponent } from './census/letter.component';\r\nimport { TourMatMenuModule } from 'ngx-ui-tour-md-menu';\r\nimport { ClanComponent } from './clan/clan.component';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\nimport { FoundationComponent } from './clan/foundation.component';\r\nimport { ManifestComponent } from './clan/manifest.component';\r\nimport { DetailComponent } from './census/detail.component';\r\nimport { BreakComponent } from './temple/break.component';\r\nimport { PerkComponent } from './emporium/perk.component';\r\nimport { PlantComponent } from './emporium/plant.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CityComponent,\r\n    CensusComponent,\r\n    ArmyComponent,\r\n    SorceryComponent,\r\n    ResearchComponent,\r\n    ArchiveComponent,\r\n    ReportComponent,\r\n    TempleComponent,\r\n    OfferComponent,\r\n    TavernComponent,\r\n    AuctionComponent,\r\n    BuildComponent,\r\n    EmporiumComponent,\r\n    RecruitComponent,\r\n    DispelComponent,\r\n    ActivateComponent,\r\n    ConjureComponent,\r\n    BattleComponent,\r\n    BidComponent,\r\n    TaxComponent,\r\n    ChargeComponent,\r\n    ExploreComponent,\r\n    BuyComponent,\r\n    DisbandComponent,\r\n    DischargeComponent,\r\n    LetterComponent,\r\n    ClanComponent,\r\n    FoundationComponent,\r\n    ManifestComponent,\r\n    DetailComponent,\r\n    BreakComponent,\r\n    PerkComponent,\r\n    PlantComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    KingdomRoutingModule,\r\n    SharedModule,\r\n    TourMatMenuModule,\r\n    NgxCurrencyModule,\r\n  ],\r\n})\r\nexport class KingdomModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nexport enum ArtifactAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-activate',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.activate.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.activate.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.activate.artifact' | translate }}:</div>\r\n      <mat-form-field *ngIf=\"kingdomArtifacts\">\r\n        <mat-label>{{ 'kingdom.activate.select' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedArtifact\">\r\n          <mat-select-trigger *ngIf=\"selectedArtifact\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[selectedArtifact.item.faction.id, selectedArtifact.item.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"selectedArtifact.quantity\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"selectedArtifact.item.image\">\r\n                </div>\r\n                <div mat-line>{{ selectedArtifact.item.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"selectedArtifact.item.description | translate | icon:selectedArtifact.item\"></div>\r\n                <div mat-list-avatar [matBadge]=\"selectedArtifact.item.turns\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let artifact of kingdomArtifacts\" [value]=\"artifact\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\">\r\n                </div>\r\n                <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                <div mat-list-avatar [matBadge]=\"artifact.item.turns\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.activate.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!selectedArtifact\" (click)=\"activate()\">{{ 'kingdom.activate.activate' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class ActivateComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomArtifacts: any[] = [];\r\n  selectedArtifact: any = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public activation: {\r\n      artifact: any,\r\n      kingdom: any,\r\n    },\r\n    private dialogRef: MatDialogRef<ActivateComponent>,\r\n    private angularFirestore: AngularFirestore,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/artifacts`, ref => ref.where('assignment', '==', ArtifactAssignmentType.NONE).where('item.battle', '==', false).where('item.self', '==', !this.activation.kingdom)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(artifacts => {\r\n      this.kingdomArtifacts = artifacts;\r\n      if (this.activation.artifact) this.selectedArtifact = this.kingdomArtifacts.find(artifact => artifact.fid === this.activation.artifact.fid);\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async activate() {\r\n    if (this.selectedArtifact.quantity && this.selectedArtifact.item.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const artifact = this.selectedArtifact; // copy because the artifact may be the last one and gets deleted from server\r\n        const activated = await this.apiService.activateArtifact(this.uid, this.selectedArtifact.fid, this.activation.kingdom ? this.activation.kingdom.fid : this.uid);\r\n        if (artifact.item.subtype === 'summon') this.notificationService.success('kingdom.activate.summon', activated);\r\n        if (artifact.item.subtype === 'resource') this.notificationService.success('kingdom.activate.resource', activated);\r\n        if (artifact.item.subtype === 'item') this.notificationService.success('kingdom.activate.item', activated);\r\n        if (artifact.item.subtype === 'spell') this.notificationService.success('kingdom.activate.spell', activated);\r\n        if (artifact.item.subtype === 'enchantment' && artifact.item.spells.length) this.notificationService.success('kingdom.activate.enchantment', activated);\r\n        if (artifact.item.subtype === 'enchantment' && !artifact.item.spells.length) this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.activate.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.activate.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\nexport enum CharmAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-conjure',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.conjure.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.conjure.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.conjure.charm' | translate }}:</div>\r\n      <mat-list dense *ngIf=\"!kingdomCharms && selectedCharm\">\r\n        <mat-list-item [ngClass]=\"[selectedCharm.spell.faction.id, selectedCharm.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"selectedCharm.spell.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"selectedCharm.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ selectedCharm.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(selectedCharm.spell.type)\">{{ selectedCharm.spell.description | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'item'].includes(selectedCharm.spell.type)\" [innerHTML]=\"selectedCharm.spell.description | translate | icon:selectedCharm.spell\"></div>\r\n          <div mat-list-avatar [matBadge]=\"selectedCharm.spell.turnCost\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <mat-form-field *ngIf=\"kingdomCharms\">\r\n        <mat-label>{{ 'kingdom.conjure.select' | translate }}</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedCharm\">\r\n          <mat-select-trigger *ngIf=\"selectedCharm\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[selectedCharm.spell.faction.id, selectedCharm.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"selectedCharm.spell.level\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"selectedCharm.spell.image\">\r\n                </div>\r\n                <div mat-line>{{ selectedCharm.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(selectedCharm.spell.type)\">{{ selectedCharm.spell.description | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item'].includes(selectedCharm.spell.type)\" [innerHTML]=\"selectedCharm.spell.description | translate | icon:selectedCharm.spell\"></div>\r\n                <div mat-list-avatar [matBadge]=\"selectedCharm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let charm of kingdomCharms\" [value]=\"charm\">\r\n            <mat-list dense>\r\n              <mat-list-item [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"charm.spell.level\" matBadgePosition=\"above before\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\">\r\n                </div>\r\n                <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['god', 'family', 'skill', 'resource', 'category'].includes(charm.spell.type)\">{{ charm.spell.description | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" *ngIf=\"['spell', 'hero', 'item'].includes(charm.spell.type)\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                <div mat-list-avatar [matBadge]=\"charm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-content *ngIf=\"selectedCharm\">\r\n      <div matSubheader>{{ 'kingdom.conjure.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ selectedCharm.spell.manaCost | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ selectedCharm.spell.turnCost | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.conjure.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!selectedCharm\" (click)=\"conjure()\">{{ 'kingdom.conjure.conjure' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\n@UntilDestroy()\r\nexport class ConjureComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n  kingdomCharms: any[] = null;\r\n  selectedCharm: any = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public conjuration: any,\r\n    private dialogRef: MatDialogRef<ConjureComponent>,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private notificationService: NotificationService,\r\n    private angularFirestore: AngularFirestore,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/charms`, ref => ref.where('spell.battle', '==', false).where('spell.self', '==', !this.conjuration.kingdom)).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(charms => {\r\n      this.kingdomCharms = charms;\r\n      if (this.conjuration.charm) this.selectedCharm = this.kingdomCharms.find(charm => charm.fid === this.conjuration.charm.fid);\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async conjure() {\r\n    if (this.selectedCharm.spell.turnCost <= this.kingdomTurn.quantity && this.selectedCharm.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const conjured = await this.apiService.conjureCharm(this.uid, this.selectedCharm.fid, this.conjuration.kingdom ? this.conjuration.kingdom.fid : this.uid);\r\n        if (this.selectedCharm.spell.subtype === 'summon') this.notificationService.success('kingdom.conjure.summon', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'resource') this.notificationService.success('kingdom.conjure.resource', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'item') this.notificationService.success('kingdom.conjure.item', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'spell') this.notificationService.success('kingdom.conjure.spell', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'enchantment' && !this.selectedCharm.spell.multiple) this.notificationService.success('kingdom.conjure.enchantment', conjured);\r\n        if (this.selectedCharm.spell.subtype === 'enchantment' && this.selectedCharm.spell.multiple) this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.conjure.error');\r\n      }\r\n    } else {\r\n      this.notificationService.error('kingdom.conjure.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-research',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.research.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p [innerHTML]=\"'kingdom.research.description' | translate | icon\"></p>\r\n      <div matSubheader>{{ 'kingdom.research.charm' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"charm.spell.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"charm.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ charm.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n          <div mat-line *ngIf=\"charm.turns < charm.spell.turnResearch\">\r\n            <mat-progress-bar [value]=\"charm.turns * 100 / charm.spell.turnResearch\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"((charm.turns) | long) + ' / ' + (charm.spell.turnResearch | long)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.research.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'resource.turn.name' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'resource.turn.name' | translate }}\" matInput formControlName=\"turns\">\r\n          <mat-hint>{{ 'kingdom.research.hint' | translate }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.research.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.research.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"research()\">{{ 'kingdom.research.research' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class ResearchComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  form: FormGroup = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public charm: any,\r\n    private dialogRef: MatDialogRef<ResearchComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      turns: [null, [Validators.required, Validators.min(1), Validators.max(this.kingdomTurn.quantity)]],\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async research() {\r\n    if (this.form.valid && this.form.value.turns <= this.kingdomTurn.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const researched = await this.apiService.researchCharm(this.uid, this.charm.fid, this.form.value.turns);\r\n        this.notificationService.success('kingdom.research.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.research.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.research.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-sorcery\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/sorcery.png\" [alt]=\"'kingdom.sorcery.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.sorcery.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.sorcery.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.sorcery')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_9_plus</mat-icon>{{ 'kingdom.sorcery.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n        <div tourAnchor=\"tour.sorcery\">\r\n          <mat-action-list dense class=\"dotted\" id=\"0\" #kngdmArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[atckArtifacts, defArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"kingdomArtifacts\">\r\n            <button mat-list-item *ngFor=\"let artifact of kingdomArtifacts\" cdkDrag [cdkDragDisabled]=\"!artifact.item.battle\" [ngClass]=\"[artifact.item.faction.id, artifact.item.battle ? 'handle' : '', artifact.item.legendary ? 'legendary': 'common']\" [id]=\"artifact.fid\" (click)=\"!artifact.item.battle && artifact.item.self ? openActivateDialog(artifact) : null\" [disabled]=\"!artifact.item.battle && !artifact.item.self\">\r\n              <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n              </div>\r\n              <div mat-line>{{ artifact.item.name | translate }}</div>\r\n              <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\">\r\n              </div>\r\n              <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n              <div mat-list-avatar *ngIf=\"!artifact.item.battle\" [matBadge]=\"artifact.item.turns\" matBadgePosition=\"above after\">\r\n                <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n              </div>\r\n            </button>\r\n          </mat-action-list>\r\n\r\n          <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n          <mat-action-list dense class=\"dotted\" id=\"3\" #kngdmCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[atckCharms, defCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"kingdomCharms\">\r\n            <button mat-list-item *ngFor=\"let charm of kingdomCharms\" cdkDrag [cdkDragDisabled]=\"!charm.spell.battle || !charm.completed\" [ngClass]=\"[charm.spell.faction.id, charm.spell.battle && charm.completed ? 'handle' : '', charm.spell.legendary ? 'legendary' : 'common']\" (click)=\"!charm.completed ? openResearchDialog(charm) : !charm.spell.battle ? openConjureDialog(charm) : null\" [id]=\"charm.fid\" [disabled]=\"!charm.spell.battle && !charm.spell.self\">\r\n              <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n              </div>\r\n              <div mat-line>{{ charm.spell.name | translate }}</div>\r\n              <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n              <div mat-line *ngIf=\"!charm.completed\">\r\n                <mat-progress-bar [value]=\"charm.turns * 100 / charm.spell.turnResearch\"></mat-progress-bar>\r\n              </div>\r\n              <mat-icon *ngIf=\"charm.spell.battle && charm.completed\">open_with</mat-icon>\r\n              <div mat-list-avatar *ngIf=\"!charm.spell.battle || !charm.completed\" [matBadge]=\"!charm.completed ? ((charm.turns) | long) + ' / ' + (charm.spell.turnResearch | long) : charm.spell.turnCost\" matBadgePosition=\"above after\">\r\n                <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n              </div>\r\n            </button>\r\n          </mat-action-list>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.sorcery.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/arcanism.png\" [alt]=\"'kingdom.arcanism.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.arcanism.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.arcanism.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.arcanism')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_1</mat-icon>{{ 'kingdom.arcanism.max' | translate }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n            <div tourAnchor=\"tour.arcanism\">\r\n              <mat-list dense class=\"dotted\" id=\"1\" #atckArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmArtifacts, defArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"attackArtifacts\">\r\n                <mat-list-item *ngFor=\"let artifact of attackArtifacts\" cdkDrag class=\"handle\" [id]=\"artifact.fid\" [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary': 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                  <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n\r\n              <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n              <mat-list dense class=\"dotted\" id=\"4\" #atckCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmCharms, defCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"attackCharms\">\r\n                <mat-list-item *ngFor=\"let charm of attackCharms\" cdkDrag class=\"handle\" [id]=\"charm.fid\" [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                  <mat-icon>open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.arcanism.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/protection.png\" [alt]=\"'kingdom.protection.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.protection.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.protection.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.protection')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_1</mat-icon>{{ 'kingdom.protection.max' | translate }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.artifacts' | translate }}:</div>\r\n            <div tourAnchor=\"tour.protection\">\r\n              <mat-list dense class=\"dotted\" id=\"2\" #defArtifacts=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmArtifacts, atckArtifacts]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignArtifact($event)\" [cdkDropListData]=\"defenseArtifacts\">\r\n                <mat-list-item *ngFor=\"let artifact of defenseArtifacts\" cdkDrag class=\"handle\" [id]=\"artifact.fid\" [ngClass]=\"[artifact.item.faction.id, artifact.item.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"artifact.quantity\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"artifact.item.image\" [alt]=\"artifact.item.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ artifact.item.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"artifact.item.description | translate | icon:artifact.item\"></div>\r\n                  <mat-icon *ngIf=\"artifact.item.battle\">open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n\r\n              <div matSubheader>{{ 'card.list.charms' | translate }}:</div>\r\n              <mat-list dense class=\"dotted\" id=\"5\" #defCharms=\"cdkDropList\" [cdkDropListConnectedTo]=\"[kngdmCharms, atckCharms]\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignCharm($event)\" [cdkDropListData]=\"defenseCharms\">\r\n                <mat-list-item *ngFor=\"let charm of defenseCharms\" cdkDrag class=\"handle\" [id]=\"charm.fid\" [ngClass]=\"[charm.spell.faction.id, charm.spell.legendary ? 'legendary' : 'common']\">\r\n                  <div mat-list-avatar [matBadge]=\"charm.spell.level | short\" matBadgePosition=\"above before\">\r\n                    <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"charm.spell.image\" [alt]=\"charm.spell.name | translate\">\r\n                  </div>\r\n                  <div mat-line>{{ charm.spell.name | translate }}</div>\r\n                  <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"charm.spell.description | translate | icon:charm.spell\"></div>\r\n                  <mat-icon>open_with</mat-icon>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.protection.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ResearchComponent } from './research.component';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ConjureComponent, CharmAssignmentType } from './conjure.component';\r\nimport { ActivateComponent, ArtifactAssignmentType } from './activate.component';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sorcery',\r\n  templateUrl: './sorcery.component.html',\r\n  styleUrls: ['./sorcery.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class SorceryComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  kingdomArtifacts: any[] = [];\r\n  attackArtifacts: any[] = [];\r\n  defenseArtifacts: any[] = [];\r\n  maximumArtifacts: number = 1;\r\n\r\n  kingdomCharms: any[] = [];\r\n  attackCharms: any[] = [];\r\n  defenseCharms: any[] = [];\r\n  maximumCharms: number = 1;\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    public tutorialService: TutorialService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/artifacts`).valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/charms`).valueChanges({ idField: 'fid' }),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([artifacts, charms]) => {\r\n      this.kingdomArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.NONE || !artifact.assignment).sort((a, b) => a.item.battle === b.item.battle ? 0 : a.item.battle ? -1 : 1);\r\n      this.attackArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.ATTACK);\r\n      this.defenseArtifacts = artifacts.filter(artifact => artifact.assignment === ArtifactAssignmentType.DEFENSE);\r\n      this.kingdomCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.NONE || !charm.assignment).sort((a, b) => (a.turns >= a.spell.research) === (b.turns >= b.spell.research) ? 0 : (a.turns >= a.spell.research) ? -1 : 1);\r\n      this.attackCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.ATTACK);\r\n      this.defenseCharms = charms.filter(charm => charm.assignment === CharmAssignmentType.DEFENSE);\r\n    });\r\n  }\r\n\r\n  async assignArtifact($event: CdkDragDrop<any>) {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      if ($event.container && $event.previousContainer === $event.container) {\r\n        moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n      } else {\r\n        if ($event.container && (Number($event.container.id) === 0 || $event.container.data.length < this.maximumArtifacts)) {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          await this.apiService.assignArtifact(this.uid, $event.item.element.nativeElement.id, Number($event.container.id)); // ids 0,1,2\r\n          this.notificationService.success('kingdom.sorcery.success');\r\n        } else {\r\n          this.notificationService.error('kingdom.sorcery.maximum');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.sorcery.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  async assignCharm($event: CdkDragDrop<any>) {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      if ($event.container && $event.previousContainer === $event.container) {\r\n        moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n      } else {\r\n        if ($event.container && (Number($event.container.id) === 3 || $event.container.data.length < this.maximumCharms)) {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          await this.apiService.assignCharm(this.uid, $event.item.element.nativeElement.id, Number($event.container.id) - 3); // ids 3,4,5\r\n          this.notificationService.success('kingdom.sorcery.success');\r\n        } else {\r\n          this.notificationService.error('kingdom.sorcery.maximum');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.sorcery.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n  openResearchDialog(charm: any): void {\r\n    const dialogRef = this.dialog.open(ResearchComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: charm,\r\n    });\r\n  }\r\n\r\n  openConjureDialog(charm: any): void {\r\n    const dialogRef = this.dialog.open(ConjureComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        charm: charm,\r\n        kingdom: null,\r\n      },\r\n    });\r\n  }\r\n\r\n  openActivateDialog(artifact: any): void {\r\n    const dialogRef = this.dialog.open(ActivateComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: {\r\n        artifact: artifact,\r\n        kingdom: null,\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-discharge',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.discharge.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.discharge.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.discharge.contract' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"contract.level\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"contract.hero.image\">\r\n          </div>\r\n          <div mat-line>{{ contract.hero.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n          <div mat-list-avatar [matBadge]=\"0\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.discharge.maintenances' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.goldMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldMaintenance' | translate:{ number: (contract.hero.goldMaintenance * contract.level) | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.manaMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaMaintenance' | translate:{ number: (contract.hero.manaMaintenance * contract.level) | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"contract.hero.populationMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationMaintenance' | translate:{ number: (contract.hero.populationMaintenance * contract.level) | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.discharge.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"discharge()\" cdkFocusInitial>{{ 'kingdom.discharge.discharge' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class DischargeComponent {\r\n\r\n  uid = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public contract: any,\r\n    private dialogRef: MatDialogRef<DischargeComponent>,\r\n    private loadingService: LoadingService,\r\n    private notificationService: NotificationService,\r\n    private apiService: ApiService,\r\n    private store: Store,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async discharge() {\r\n    this.loadingService.startLoading();\r\n    try {\r\n      const discharged = await this.apiService.dischargeContract(this.uid, this.contract.fid);\r\n      this.notificationService.success('kingdom.discharge.success', discharged);\r\n      this.close();\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.notificationService.error('kingdom.discharge.error');\r\n    }\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-tavern\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" cdkDropListGroup [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/tavern.png\" [alt]=\"'kingdom.tavern.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.tavern.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.tavern.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.tavern')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_9_plus</mat-icon>{{ 'kingdom.tavern.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-action-list dense class=\"dotted\" tourAnchor=\"tour.tavern\" id=\"0\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"kingdomContracts\">\r\n          <button mat-list-item *ngFor=\"let contract of kingdomContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" (click)=\"openDischargeDialog(contract)\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"contract.hero.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.tavern.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/leadership.png\" [alt]=\"'kingdom.leadership.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.leadership.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.leadership.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.leadership')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_3</mat-icon>{{ 'kingdom.leadership.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-list dense class=\"dotted\" id=\"1\" tourAnchor=\"tour.leadership\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"attackContracts\">\r\n          <mat-list-item *ngFor=\"let contract of attackContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"contract.hero.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.leadership.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/guard.png\" [alt]=\"'kingdom.guard.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.guard.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.guard.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.guard')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>filter_3</mat-icon>{{ 'kingdom.guard.max' | translate }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.contracts' | translate }}:</div>\r\n        <mat-list dense class=\"dotted\" id=\"2\" tourAnchor=\"tour.guard\" cdkDropList cdkDropListOrientation=\"vertical\" (cdkDropListDropped)=\"assignContract($event)\" [cdkDropListData]=\"defenseContracts\">\r\n          <mat-list-item *ngFor=\"let contract of defenseContracts\" cdkDrag class=\"handle\" [id]=\"contract.fid\" [ngClass]=\"[contract.hero.faction.id, contract.hero.legendary ? 'legendary' : 'common']\">\r\n            <div mat-list-avatar [matBadge]=\"contract.level | short\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"contract.hero.image\" [alt]=\"'kingdom.clan.name' | translate\">\r\n            </div>\r\n            <div mat-line>{{ contract.hero.name | translate:{name:contract.name} }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"contract.hero.description | translate | icon:contract.hero\"></div>\r\n            <mat-icon>open_with</mat-icon>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.guard.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { DischargeComponent } from './discharge.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\n\r\nexport enum ContractAssignmentType {\r\n  NONE,\r\n  ATTACK,\r\n  DEFENSE,\r\n}\r\n\r\nconst MAXIMUM_CONTRACTS = 3;\r\n\r\n@Component({\r\n  selector: 'app-tavern',\r\n  templateUrl: './tavern.component.html',\r\n  styleUrls: ['./tavern.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class TavernComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n\r\n  kingdomContracts: any[] = [];\r\n  attackContracts: any[] = [];\r\n  defenseContracts: any[] = [];\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private notificationService: NotificationService,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.angularFirestore.collection<any>(`kingdoms/${this.uid}/contracts`).valueChanges({ idField: 'fid' }).pipe(untilDestroyed(this)).subscribe(contracts => {\r\n      this.kingdomContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.NONE || !contract.assignment);\r\n      this.attackContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.ATTACK);\r\n      this.defenseContracts = contracts.filter(contract => contract.assignment === ContractAssignmentType.DEFENSE);\r\n    });\r\n  }\r\n\r\n  async assignContract($event: CdkDragDrop<any>) {\r\n    if ([0, 3].includes(Number($event.container.id)) || $event.container.data.length < MAXIMUM_CONTRACTS) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        if ($event.previousContainer === $event.container) {\r\n          // moveItemInArray($event.container.data, $event.previousIndex, $event.currentIndex);\r\n        } else {\r\n          transferArrayItem($event.previousContainer.data, $event.container.data, $event.previousIndex, $event.currentIndex);\r\n          const assigned = await this.apiService.assignContract(this.uid, $event.item.element.nativeElement.id, Number($event.container.id));\r\n          this.notificationService.success('kingdom.tavern.success');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.tavern.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.warning('kingdom.tavern.maximum');\r\n    }\r\n  }\r\n\r\n  openDischargeDialog(troop: any): void {\r\n    const dialogRef = this.dialog.open(DischargeComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: troop,\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-break',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.break.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.break.help' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.break.from' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[enchantment.from.faction.id, enchantment.from.fid === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"enchantment.from.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ enchantment.from.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ enchantment.from.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.break.enchantment' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item (click)=\"break()\" [ngClass]=\"[enchantment.spell.faction.id, enchantment.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"enchantment.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar [src]=\"enchantment.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ enchantment.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"enchantment.spell.description | translate | icon:enchantment.spell\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [color]=\"enchantment.from.id === uid ? 'accent' : 'warn'\" [value]=\"enchantment.turns * 100 / enchantment.spell.turnDuration\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"enchantment.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.break.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ enchantment.spell.manaCost | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.break.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"break()\" cdkFocusInitial>{{ 'kingdom.break.break' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class BreakComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public enchantment: any,\r\n    private dialogRef: MatDialogRef<BreakComponent>,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private loadingService: LoadingService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async break() {\r\n    if (this.enchantment.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const broken = await this.apiService.breakEnchantment(this.uid, this.enchantment.fid);\r\n        this.notificationService.success('kingdom.break.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.break.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.break.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-dispel',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.dispel.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.dispel.help' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.dispel.to' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item [ngClass]=\"[incantation.to.faction.id, incantation.to.id === uid ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar [src]=\"incantation.to.faction.image\">\r\n          </div>\r\n          <div mat-line>{{ incantation.to.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\">{{ incantation.to.faction.name | translate }}</div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n      <div matSubheader>{{ 'kingdom.dispel.incantation' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item (click)=\"dispel()\" [ngClass]=\"[incantation.spell.faction.id, incantation.spell.legendary ? 'legendary' : 'common']\">\r\n          <div mat-list-avatar [matBadge]=\"incantation.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n            <img mat-list-avatar [src]=\"incantation.spell.image\">\r\n          </div>\r\n          <div mat-line>{{ incantation.spell.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"incantation.spell.description | translate | icon:incantation.spell\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [color]=\"incantation.to.id === uid ? 'accent' : 'warn'\" [value]=\"incantation.turns * 100 / incantation.spell.turnDuration\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"incantation.turns\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar src=\"/assets/images/resources/turn.png\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.dispel.maintenances' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.goldMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ 'user.tome.goldMaintenance' | translate:{ number: incantation.spell.goldMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.manaMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ 'user.tome.manaMaintenance' | translate:{ number: incantation.spell.manaMaintenance | long } }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"incantation.spell.populationMaintenance > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ 'user.tome.populationMaintenance' | translate:{ number: incantation.spell.populationMaintenance | long } }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.dispel.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"dispel()\" cdkFocusInitial>{{ 'kingdom.dispel.dispel' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n  `],\r\n})\r\nexport class DispelComponent {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public incantation: any,\r\n    private dialogRef: MatDialogRef<DispelComponent>,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private loadingService: LoadingService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async dispel() {\r\n    if (this.incantation.spell.manaCost <= this.kingdomMana.quantity) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const dispelled = await this.apiService.dispelIncantation(this.uid, this.incantation.fid);\r\n        this.notificationService.success('kingdom.dispel.success');\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.dispel.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.dispel.error');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-offer',\r\n  template: `\r\n    <h1 mat-dialog-title>{{ 'kingdom.offer.name' | translate }}</h1>\r\n    <div mat-dialog-content>\r\n      <p>{{ 'kingdom.offer.description' | translate }}</p>\r\n      <div matSubheader>{{ 'kingdom.offer.god' | translate }}:</div>\r\n      <mat-list dense>\r\n        <mat-list-item class=\"grey legendary\">\r\n          <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n            <img mat-list-avatar class=\"god-avatar\" [src]=\"god.image\">\r\n          </div>\r\n          <div mat-line>{{ god.name | translate }}</div>\r\n          <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"god.description | translate | icon:god\"></div>\r\n          <div mat-line>\r\n            <mat-progress-bar [value]=\"god.sacrifice * 100 / (god.gold || god.mana || god.population || god.land || god.turn)\"></mat-progress-bar>\r\n          </div>\r\n          <div mat-list-avatar [matBadge]=\"(god.sacrifice | short) + ' / ' + ((god.gold || god.mana || god.population || god.land || god.turn) | short)\" matBadgePosition=\"above after\">\r\n            <img mat-list-avatar [src]=\"god.gold ? '/assets/images/resources/gold.png' : god.mana ? '/assets/images/resources/mana.png' : god.population ? '/assets/images/resources/population.png' : god.land ? '/assets/images/resources/land.png' : '/assets/images/resources/turn.png'\">\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.offer.quantity' | translate }}:</div>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>{{ 'kingdom.offer.sacrifice' | translate }}</mat-label>\r\n          <input currencyMask placeholder=\"{{ 'kingdom.offer.sacrifice' | translate }}\" matInput formControlName=\"sacrifice\">\r\n          <mat-hint>{{ 'kingdom.offer.hint' | translate:{ increment: god.increment | long } }}</mat-hint>\r\n          <mat-error>{{ 'kingdom.offer.invalid' | translate }}</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n    <div mat-dialog-content>\r\n      <div matSubheader>{{ 'kingdom.offer.costs' | translate }}:</div>\r\n      <mat-chip-list>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.gold > 0\"><img class=\"icon\" src=\"/assets/images/resources/gold.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.mana > 0\"><img class=\"icon\" src=\"/assets/images/resources/mana.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.population > 0\"><img class=\"icon\" src=\"/assets/images/resources/population.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.land > 0\"><img class=\"icon\" src=\"/assets/images/resources/land.png\">{{ god.increment | long }}</mat-chip>\r\n        <mat-chip color=\"primary\" selected *ngIf=\"god.turn > 0\"><img class=\"icon\" src=\"/assets/images/resources/turn.png\">{{ god.increment | long }}</mat-chip>\r\n      </mat-chip-list>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"close()\">{{ 'kingdom.offer.cancel' | translate }}</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" (click)=\"offer()\">{{ 'kingdom.offer.offer' | translate }}</button>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .mat-form-field {\r\n      width: 100%;\r\n    }\r\n    .god-avatar {\r\n      border-radius: 4px !important;\r\n    }\r\n  `],\r\n})\r\nexport class OfferComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  form: FormGroup = null;\r\n  kingdomTurn: any = this.store.selectSnapshot(AuthState.getKingdomTurn);\r\n  kingdomGold: any = this.store.selectSnapshot(AuthState.getKingdomGold);\r\n  kingdomMana: any = this.store.selectSnapshot(AuthState.getKingdomMana);\r\n  kingdomPopulation: any = this.store.selectSnapshot(AuthState.getKingdomPopulation);\r\n  kingdomLand: any = this.store.selectSnapshot(AuthState.getKingdomLand);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public god: any,\r\n    private dialogRef: MatDialogRef<OfferComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private notificationService: NotificationService,\r\n    private store: Store,\r\n    private apiService: ApiService,\r\n    private loadingService: LoadingService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const max = this.god.gold\r\n      ? this.kingdomGold.quantity\r\n      : this.god.mana\r\n        ? this.kingdomMana.quantity\r\n        : this.god.population\r\n          ? this.kingdomPopulation.quantity\r\n          : this.god.land\r\n            ? this.kingdomLand.quantity\r\n            : this.kingdomTurn.quantity;\r\n    this.form = this.formBuilder.group({\r\n      sacrifice: [this.god.increment, [Validators.required, Validators.min(this.god.increment), Validators.max(max)]],\r\n    });\r\n    this.form.markAllAsTouched();\r\n    this.form.get('sacrifice').updateValueAndValidity();\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async offer() {\r\n    if (this.form.valid) {\r\n      this.loadingService.startLoading();\r\n      try {\r\n        const offered = await this.apiService.offerGod(this.uid, this.god.fid, this.form.value.sacrifice);\r\n        if (offered.hasOwnProperty('hero')) this.notificationService.success('kingdom.temple.hero', offered);\r\n        if (offered.hasOwnProperty('item')) this.notificationService.success('kingdom.temple.item', offered);\r\n        if (offered.hasOwnProperty('enchantment')) this.notificationService.success('kingdom.temple.enchantment', offered);\r\n        if (offered.hasOwnProperty('unit')) this.notificationService.success('kingdom.temple.unit', offered);\r\n        if (offered.hasOwnProperty('gold')) this.notificationService.success('kingdom.temple.gold', offered);\r\n        if (offered.hasOwnProperty('mana')) this.notificationService.success('kingdom.temple.mana', offered);\r\n        if (offered.hasOwnProperty('population')) this.notificationService.success('kingdom.temple.population', offered);\r\n        if (offered.hasOwnProperty('land')) this.notificationService.success('kingdom.temple.land', offered);\r\n        if (offered.hasOwnProperty('spell')) this.notificationService.success('kingdom.temple.spell', offered);\r\n        if (offered.hasOwnProperty('building')) this.notificationService.success('kingdom.temple.building', offered);\r\n        this.close();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.notificationService.error('kingdom.offer.error');\r\n      }\r\n      this.loadingService.stopLoading();\r\n    } else {\r\n      this.notificationService.error('kingdom.offer.error');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"kingdom-temple\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" [@fadeInOnEnter]>\r\n\r\n  <div fxFlex.xl=\"33\" fxFlex.lg=\"33\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"/assets/images/cards/temple.png\" [alt]=\"'kingdom.temple.name' | translate\">\r\n        <mat-card-title>{{ 'kingdom.temple.name' | translate }}</mat-card-title>\r\n        <mat-card-subtitle>{{ 'kingdom.temple.description' | translate }}</mat-card-subtitle>\r\n        <div class=\"mat-card-extras\">\r\n          <button mat-icon-button (click)=\"this.tutorialService.start('tour.temple')\"><mat-icon>help</mat-icon></button>\r\n          <mat-chip-list><mat-chip color=\"primary\"><mat-icon>notifications</mat-icon>{{ kingdomGods.length | long }}</mat-chip></mat-chip-list>\r\n        </div>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div matSubheader>{{ 'card.list.gods' | translate }}:</div>\r\n        <mat-action-list dense tourAnchor=\"tour.temple\">\r\n          <button mat-list-item *ngFor=\"let god of kingdomGods\" [disabled]=\"god.armageddon\" (click)=\"openOfferDialog(god)\" class=\"grey legendary\">\r\n            <div mat-list-avatar matBadge=\"?\" matBadgePosition=\"above before\">\r\n              <img mat-list-avatar class=\"animated pulse infinite squared\" [src]=\"god.image\" [alt]=\"god.name | translate\">\r\n            </div>\r\n            <div mat-line>{{ god.name | translate }}</div>\r\n            <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"god.description | translate | icon:god\"></div>\r\n            <div mat-line>\r\n              <mat-progress-bar [value]=\"god.sacrifice * 100 / (god.gold || god.mana || god.population || god.land || god.turn)\"></mat-progress-bar>\r\n            </div>\r\n            <div mat-list-avatar [matBadge]=\"god.armageddon ? null : (god.sacrifice | short) + ' / ' + ((god.gold || god.mana || god.population || god.land || god.turn) | short)\" matBadgePosition=\"above after\">\r\n              <img mat-list-avatar [src]=\"god.armageddon ? '/assets/images/spells/grey/armageddon.png' : god.gold ? '/assets/images/resources/gold.png' : god.mana ? '/assets/images/resources/mana.png' : god.population ? '/assets/images/resources/population.png' : god.land ? '/assets/images/resources/land.png' : '/assets/images/resources/turn.png'\" [alt]=\"'spell.armageddon.name' | translate\">\r\n            </div>\r\n          </button>\r\n        </mat-action-list>\r\n      </mat-card-content>\r\n      <mat-card-content>\r\n        <p [innerHTML]=\"'kingdom.temple.help' | translate | icon\"></p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n  <div fxFlex.xl=\"66\" fxFlex.lg=\"66\" fxFlex.md=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\">\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/break.png\" [alt]=\"'kingdom.break.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.break.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.break.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.break')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>trending_down</mat-icon>{{ kingdomEnchantments.length | long }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.enchantments' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.break\">\r\n              <button mat-list-item *ngFor=\"let enchantment of kingdomEnchantments\" (click)=\"openBreakDialog(enchantment)\" [ngClass]=\"[enchantment.spell.faction.id, enchantment.spell.legendary ? 'legendary' : 'common']\" [disabled]=\"enchantment.from.id === uid\">\r\n                <div mat-list-avatar [matBadge]=\"enchantment.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"enchantment.spell.image\" [alt]=\"enchantment.spell.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ enchantment.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"enchantment.spell.description | translate | icon:enchantment.spell\"></div>\r\n                <div mat-line>\r\n                  <mat-progress-bar [color]=\"enchantment.from.id === uid ? 'accent' : 'warn'\" [value]=\"enchantment.turns * 100 / enchantment.spell.turnDuration\"></mat-progress-bar>\r\n                </div>\r\n                <div mat-list-avatar [matBadge]=\"enchantment.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"enchantment.from.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.break.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n      <div fxFlex.xl=\"50\" fxFlex.lg=\"50\" fxFlex.md=\"100\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\r\n\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <img mat-card-avatar src=\"/assets/images/cards/dispel.png\" [alt]=\"'kingdom.dispel.name' | translate\">\r\n            <mat-card-title>{{ 'kingdom.dispel.name' | translate }}</mat-card-title>\r\n            <mat-card-subtitle>{{ 'kingdom.dispel.description' | translate }}</mat-card-subtitle>\r\n            <div class=\"mat-card-extras\">\r\n              <button mat-icon-button (click)=\"this.tutorialService.start('tour.dispel')\"><mat-icon>help</mat-icon></button>\r\n              <mat-chip-list><mat-chip color=\"primary\"><mat-icon>trending_up</mat-icon>{{ kingdomIncantations.length | long }}</mat-chip></mat-chip-list>\r\n            </div>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div matSubheader>{{ 'card.list.incantations' | translate }}:</div>\r\n            <mat-action-list dense tourAnchor=\"tour.dispel\">\r\n              <button mat-list-item *ngFor=\"let incantation of kingdomIncantations\" (click)=\"openDispelDialog(incantation)\" [ngClass]=\"[incantation.spell.faction.id, incantation.spell.legendary ? 'legendary' : 'common']\">\r\n                <div mat-list-avatar [matBadge]=\"incantation.spell.level\" matBadgePosition=\"above before\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar class=\"animated pulse infinite\" [src]=\"incantation.spell.image\" [alt]=\"incantation.spell.name | translate\">\r\n                </div>\r\n                <div mat-line>{{ incantation.spell.name | translate }}</div>\r\n                <div mat-line class=\"mat-card-subtitle\" [innerHTML]=\"incantation.spell.description | translate | icon:incantation.spell\"></div>\r\n                <div mat-line>\r\n                  <mat-progress-bar [color]=\"incantation.to.id === uid ? 'accent' : 'warn'\" [value]=\"incantation.turns * 100 / incantation.spell.turnDuration\"></mat-progress-bar>\r\n                </div>\r\n                <div mat-list-avatar [matBadge]=\"incantation.turns\" matBadgePosition=\"above after\" [matBadgeColor]=\"incantation.to.id === uid ? 'accent' : 'warn'\">\r\n                  <img mat-list-avatar src=\"/assets/images/resources/turn.png\" [alt]=\"'resource.turn.name' | translate\">\r\n                </div>\r\n              </button>\r\n            </mat-action-list>\r\n          </mat-card-content>\r\n          <mat-card-content>\r\n            <p [innerHTML]=\"'kingdom.dispel.help' | translate | icon\"></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OfferComponent } from './offer.component';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { fadeInOnEnterAnimation } from 'angular-animations';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthState } from 'src/app/shared/auth/auth.state';\r\nimport { DispelComponent } from './dispel.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { BreakComponent } from './break.component';\r\n\r\n@Component({\r\n  selector: 'app-temple',\r\n  templateUrl: './temple.component.html',\r\n  styleUrls: ['./temple.component.scss'],\r\n  animations: [fadeInOnEnterAnimation({ duration: 250, delay: 250 })],\r\n})\r\n@UntilDestroy()\r\nexport class TempleComponent implements OnInit {\r\n\r\n  uid: string = this.store.selectSnapshot(AuthState.getUserUID);\r\n  kingdomGods: any[] = [];\r\n  kingdomEnchantments: any[] = [];\r\n  kingdomIncantations: any[] = [];\r\n\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private dialog: MatDialog,\r\n    private store: Store,\r\n    public tutorialService: TutorialService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    combineLatest([\r\n      this.angularFirestore.collection<any>('gods').valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/enchantments`).valueChanges({ idField: 'fid' }),\r\n      this.angularFirestore.collection<any>(`kingdoms/${this.uid}/incantations`).valueChanges({ idField: 'fid' }),\r\n    ])\r\n    .pipe(untilDestroyed(this))\r\n    .subscribe(([gods, enchantments, incantations]) => {\r\n      this.kingdomGods = gods;\r\n      this.kingdomEnchantments = enchantments.sort((a: any, b: any) => a.turns - b.turns);\r\n      this.kingdomIncantations = incantations.sort((a: any, b: any) => a.turns - b.turns);\r\n    });\r\n  }\r\n\r\n  openOfferDialog(god: any): void {\r\n    const dialogRef = this.dialog.open(OfferComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: god,\r\n    });\r\n  }\r\n\r\n  openDispelDialog(enchantment: any): void {\r\n    const dialogRef = this.dialog.open(DispelComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: enchantment,\r\n    });\r\n  }\r\n\r\n  openBreakDialog(incantation: any): void {\r\n    const dialogRef = this.dialog.open(BreakComponent, {\r\n      panelClass: 'dialog-responsive',\r\n      data: incantation,\r\n    });\r\n  }\r\n\r\n}\r\n"]}